%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: INSTALL.dvi
%%Pages: 33
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Courier Times-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t a4 -o INSTALL.ps INSTALL.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.08.05:1542
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin 0 1 255{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}for Metrics/Metrics currentdict end def[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (INSTALL.dvi)
@start /Fa 133[ 45 1[ 45 1[ 45 1[ 45 45 45 1[ 45 45 45
45 45 2[ 45 45 45 45 45 45 45 1[ 45 9[ 45 6[ 45 1[ 45
4[ 45 2[ 45 11[ 45 1[ 45 3[ 45 2[ 45 45 45 45 45 45 45
1[ 45 45 4[ 45 45 34[{ TeXBase1Encoding ReEncodeFont} 38
74.7198 /Courier rf /Fb 133[ 32 37 1[ 55 37 42 23 32
32 42 42 42 42 60 23 2[ 23 42 42 1[ 37 42 37 42 42 7[ 46
3[ 60 46 3[ 51 60 55 4[ 28 1[ 60 1[ 51 10[ 28 6[ 42 4[ 21
46[{ TeXBase1Encoding ReEncodeFont} 34 83.022 /Times-Italic
rf /Fc 107[ 35 35 22[ 35 1[ 35 35 35 35 35 35 35 35 35
35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 35 1[ 35
35 35 35 35 4[ 35 35 35 35 35 2[ 35 35 1[ 35 3[ 35 1[ 35
35 35 2[ 35 35 1[ 35 35 35 35 7[ 35 35 35 35 35 35 35
35 35 35 35 35 35 2[ 35 35 35 35 33[{ TeXBase1Encoding ReEncodeFont} 69
58.1154 /Courier rf /Fd 133[ 50 50 1[ 50 50 1[ 50 50
50 50 50 50 50 50 50 50 1[ 50 50 50 1[ 50 50 50 1[ 50
38[ 50 10[ 50 50 46[{ TeXBase1Encoding ReEncodeFont} 24
83.022 /Courier rf /Fe 198[ 29 29 29 29 29 29 29 29 50[{
TeXBase1Encoding ReEncodeFont} 8 58.1154 /Times-Roman
rf /Ff 133[ 29 33 33 48 33 33 18 26 22 33 33 33 33 52
18 33 1[ 18 33 33 22 29 33 29 33 29 1[ 33 4[ 41 5[ 41
37 44 2[ 48 48 4[ 22 48 1[ 37 4[ 48 6[ 18 2[ 33 3[ 33
33 33 33 18 17 22 17 2[ 22 22 4[ 33 27 31[ 37 2[{
TeXBase1Encoding ReEncodeFont} 51 66.4176 /Times-Roman
rf /Fg 198[ 25 25 25 25 25 25 25 25 25 49[{
TeXBase1Encoding ReEncodeFont} 9 49.8132 /Times-Roman
rf /Fh 134[ 50 50 72 50 55 33 39 44 55 55 50 55 83 28
55 33 28 55 50 33 44 55 44 55 50 6[ 66 1[ 72 100 72 2[ 55
72 78 61 78 72 94 66 2[ 39 78 78 61 1[ 72 72 1[ 72 1[ 50
5[ 50 50 50 50 50 50 50 50 50 50 1[ 25 33 3[ 33 33 40[{
TeXBase1Encoding ReEncodeFont} 59 99.6264 /Times-Bold
rf
%DVIPSBitmapFont: Fi cmsy10 10 1
/Fi 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A> 15
D E
%EndDVIPSBitmapFont
/Fj 206[ 86 49[{ TeXBase1Encoding ReEncodeFont} 1 172.188
/Times-Roman rf /Fk 131[ 40 1[ 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40
1[ 40 40 40 40 40 1[ 40 1[ 40 40 40 40 40 40 1[ 40 40
40 40 40 40 1[ 40 40 40 40 40 40 40 40 40 40 40 40 40
40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40
40 40 40 3[ 40 40 40 40 33[{ TeXBase1Encoding ReEncodeFont} 83
66.4176 /Courier rf /Fl 136[ 86 1[ 66 40 47 53 66 66
60 66 100 33 66 1[ 33 66 60 1[ 53 66 53 66 60 6[ 80 2[ 120
2[ 80 1[ 86 93 73 1[ 86 113 3[ 47 93 4[ 86 1[ 86 1[ 60
5[ 60 60 60 60 60 60 60 60 60 2[ 30 40 42[ 66 2[{
TeXBase1Encoding ReEncodeFont} 45 119.552 /Times-Bold
rf /Fm 139[ 57 1[ 76 1[ 96 7[ 96 2[ 76 3[ 86 29[ 124
15[ 86 86 86 49[{ TeXBase1Encoding ReEncodeFont} 10 172.188
/Times-Bold rf /Fn 105[ 42 1[ 42 42 25[ 42 42 60 42 46
28 32 37 46 46 42 46 69 23 46 1[ 23 46 42 28 37 46 37
46 42 1[ 42 4[ 55 2[ 83 1[ 60 55 46 60 65 51 65 60 78
55 2[ 32 65 1[ 51 55 60 60 1[ 60 6[ 28 2[ 42 42 42 42
42 42 42 1[ 23 21 28 21 47 1[ 28 28 37[ 46 2[{
TeXBase1Encoding ReEncodeFont} 63 83.022 /Times-Bold
rf /Fo 136[ 149 103 115 69 80 92 1[ 115 103 115 172 57
2[ 57 115 103 1[ 92 115 92 115 103 1[ 103 4[ 138 16[ 80
5[ 149 25[ 69 69 40[{ TeXBase1Encoding ReEncodeFont} 25
206.559 /Times-Bold rf /Fp 107[ 37 37 10[ 28 11[ 17 1[ 37
42 42 60 42 42 23 32 28 42 42 42 42 65 23 42 23 23 42
42 28 37 42 37 42 37 1[ 42 1[ 28 23 28 51 60 60 78 60
60 51 46 55 60 46 60 60 74 51 60 32 28 60 60 46 51 60
55 55 60 76 37 47 47 47 23 23 42 42 42 42 42 42 42 42
42 42 23 21 28 21 47 42 28 28 28 2[ 42 42 34 28 29[ 46
46 2[{ TeXBase1Encoding ReEncodeFont} 92 83.022 /Times-Roman
rf /Fq 138[ 50 28 39 10[ 50 50 37[ 72 11[ 50 2[ 50 1[ 50
48[{ TeXBase1Encoding ReEncodeFont} 9 99.6264 /Times-Roman
rf /Fr 138[ 72 40 56 2[ 72 72 72 1[ 40 2[ 40 72 2[ 64
72 1[ 72 64 6[ 88 16[ 48 1[ 104 20[ 72 3[ 36 46[{
TeXBase1Encoding ReEncodeFont} 18 143.462 /Times-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop Fr 966 2097 a(eZ) 35 b(publish) g(2.2) g(Installa) n(tion) g
(Guide) 591 2998 y
 currentpoint currentpoint translate 1.06113 1.06113 scale neg exch
neg exch translate
 591 2998 a @beginspecial 0 @llx 0
@lly 299 @urx 59 @ury 2990 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezpublish.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezpublish.eps)
%%CreationDate: (Thu Jan 25 18:40:57 2001)
%%BoundingBox: 0 0 299 59
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 300 60
userdict begin
%%BeginData:
DisplayImage
0 0
300 60
12.000000
300 60
1
0
0
16
000000
ffffff
f08c00
8a8a8a
464646
bbbbbb
111111
efefef
a0a0a0
666666
313131
767676
212121
dfdfdf
cfcfcf
ffffff
0fff0f2b0fff0f2b0fff0f2b0fff0f2b0fff0f2b0fff0f2b0f0700260ffc0f0700260ffc
0f0700260ffc0f070002012000020ffc0f070002012000020f930400000203000f170400
000203000f2b0400000203000f150f070002012000020f300500031705000f4804000002
03000f170400000203000f07030308000f1e0400000203000f150f070002012000020f30
0300001703000f480400000203000f170400000203000f07000304000f1e040000020300
0f150f070002012000020f300300001703000f480400000203000f170400000203000f07
000304000f1e0400000203000f150f070002012000020f300300001703000f4804000002
03000f170400000203000f07000304000f1e0400000203000f150f070002012000020f30
050003120600000303000f480400000203000f170400000203000f07000304000f1e0400
000203000f150f070002012000020f430800000309000f490400000203000f1704000002
03000f2b0400000203000f150f070002012000020f42050000030a0007000f4904000002
03000f170400000203000f2b0400000203000f150f070002012000020f410d0006000002
06000d000f4a0400000203000f170400000203000f2b0400000203000f150f0700020120
00020f1c0d0008000b00040303000e000f1a07000a0000030e000f1b0800030004020b00
080007000f270400000203000f030800030004020b00080007000f0b0400000203000f17
0e00030009000403030008000d000f090400000203000f030e0003000402090008000700
0f090f070002012000020f1a0500040000080c0008000f180400000308000f1304000002
03000f0108000c000006060003000f09000305000f0a0300000204000f07040000020300
0f0108000c000006060003000f0a0400000203000f070400000203000f0808000c000009
0a0003000d000f060400000203000f0108000a00000703000f080f070002010b001d0f13
0b00000c040007000f150300000309000f140400000203000e000a00000a09000f080003
05000f0a0300000204000f070400000203000e000a00000a09000f090400000203000f07
0400000203000f0607000400000e0f060400000203000d000400000a09000f070f070002
010b001d0f1107000a000004060004020004060004000f140800000304000f1504000002
0a00000d0b000f07000305000f0a0300000204000f07040000020a00000d0b000f080400
000203000f070400000203000f0507000a0000040600040200060f060400000204000600
000c03000f060f070002010b001d0f110400000309000e000f0408000a00000303000f12
0e00060000020a0007000f15040000060c000b000800050103000c00000405000f060003
05000f0a0300000204000f07040000060c000b000800050103000a00000405000f070400
000203000f070400000203000f050b00000309000d000f040e000b000c0000020f060400
00060c000b000800050103000c000003060007000f050f070002010b0002021700020f10
0300000308000f07070004000002060007000f1007000c00000206000e000f1604000004
040005000f060300000304000f06000305000f0a0300000204000f070400000404000500
0f060300000304000f070400000203000f070400000203000f040700000308000f090800
0c0000000f06040000040c0008000f060900000308000f050f070002010b000202170002
0f0f07000600000208000f0907000600000203000f100a00000308000f17040000020600
03000f090b0000030e000f05000305000f0a0300000204000f0704000002060003000f09
0b0000030e000f060400000203000f070400000203000f04080000020c000f0c0b000f06
040000030b0007000f0707000600000204000f050f070002010b0002021700020f0f0300
000204000f0b0b00000204000f0f0900000303000f180400000203000f0a070006000002
0b000f05000305000f0a0300000204000f070400000203000f0a0700060000020b000f06
0400000203000f070400000203000f040300000204000f14040000020b000f0a09000002
0a000f050f070002010b0002021700020f0f0a00000208000f0b050000030f0e08000003
09000f190400000203000f0b0900000204000f05000305000f0a0300000204000f070400
000203000f0b0900000204000f060400000203000f070400000203000f04030000020600
0f140400000203000f0a030000030f050f070002010b0002021700020f0e070000020600
0f0d00030d000f0c050000030a000f1a0400000203000f0b080000030f05000305000f0a
0300000204000f070400000203000f0b080000030f060400000203000f07040000020300
0f040800000309000f130400000203000f0a050000030f050f070002010b000202170002
0f0e050000020a00050d000305000f0b0d0006000002060007000f1a0400000203000f0b
0500000307000f04000305000f0a0300000204000f070400000203000f0b050000030700
0f050400000203000f070400000203000f040700060000030c0003000d000f1004000002
03000f0a050000030f050f070002010b0002021700020f0e0300001505000f0a07000a00
000206000e000f1b0400000203000f0c000305000f04000305000f0a0300000204000f07
0400000203000f0c000305000f050400000203000f070400000203000f05030000060600
0400030008000d000f0b0400000203000f0a050000030f050f070002010b000202170002
0f0e0300001505000f0a0400000308000f1c0400000203000f0c000305000f0400030500
0f0a0300000204000f070400000203000f0c000305000f050400000203000f0704000002
03000f060900000a0c000b000d000f080400000203000f0a050000030f050f070002010b
0002021700020f0e0300001505000f09030000030b000f1d0400000203000f0c00030500
0f04000305000f0a0300000204000f070400000203000f0c000305000f05040000020300
0f070400000203000f0708000c00000b03000f070400000203000f0a050000030f050f07
0002010b0002021700020f0e0300000204000f1b0800000304000f1e0400000203000f0c
000305000f04000305000f0a0300000204000f070400000203000f0c000305000f050400
000203000f070400000203000f09080009000a00000909000f060400000203000f0a0500
00030f050f070002010b0002021700020f0e030000020a000f1a0e00060000020a000700
0f1e0400000203000f0b0d0000030d000f04000305000f0a0300000204000f0704000002
03000f0b070000030d000f050400000203000f070400000203000f0c0700050003000900
0c00000505000f050400000203000f0a050000030f050f070002010b0002021700020f0e
050000030f1907000c00000206000d000f1f0400000203000f0b050000030f0500030500
0f0a0300000204000f070400000203000f0b050000030f060400000203000f0704000002
03000f110e000400000304000f050400000203000f0a050000030f050f070002010b0002
021700020f0e0700000308000f180a00000305000f200400000203000f0b0b0000020400
0f05000305000f0a0300000204000f070400000203000f0b030000020a000f0604000002
03000f070400000203000f130400000206000f050400000203000f0a050000030f050f07
0002010b0002021700020f0f0a00000204000f170900000308000f210400000203000f0b
0c00000203000f05000303000f0a0300000204000f070400000203000f0b0a0000020b00
0f060400000203000f070400000203000f13050000030f050400000203000f0a05000003
0f050f070002010b0002021700020f0f0300000308000f0e0d000f050800000309000f22
0400000203000f0a080000030d000f050a00000209000f0a0b00000204000f0704000002
03000f0a0e0000030d000f060400000203000f070400000203000f040d000f0d05000003
0f050400000203000f0a050000030f050f070002010b0002021700020f0f070006000002
060005000f0b0700030004000f040500000304000f230400000203000f090e0006000002
09000f0604000002060007000f0707000b00000304000f070400000203000f0907000a00
000204000f070400000203000f070400000203000f04030004000d000f0b030000020400
0f050400000203000f0a050000030f050f070002010b0002021700020f10080000040300
07000f070d000b000600000004000f030d00060000020c0007000f230400000204000500
0f0708000600000206000d000f060800000309000f0608000c00000404000f0704000002
040007000f0707000a00000305000f070400000203000f070400000203000f0403000001
09000d000f080e000600000208000f050400000203000f0a050000030f050f070002010b
0002021700020f1109000004060004000300050208000b000a00000304000f0305000019
0f0f040000040c000b000800050203000a00000408000f070700060000030c0003000501
08000b000c00000604000f07040000030600090008000e000f0205000b00060000030b00
0f080400000203000f070400000203000f04030000030a000300050007000f0107000500
090000030a000f060400000203000f0a050000030f050f070011021700020f1209000010
04000f03050000190f0f0400001008000f090300000c06000400000204000f0704000010
09000f090400000203000f070400000203000f040300000f06000e000f06040000020300
0f0a050000030f050f070011021700020f1308000c00000d0c0003000f03050000190f0f
040000020600000a060008000f0b0900000a040007000300000204000f070400000f0900
0f0a0400000203000f070400000203000f0405000c00000d04000d000f07040000020300
0f0a050000030f050f070011021700020f1508000a0000080c000b000e000f0505000019
0f0f04000002030005000400000606000b0007000f0d0300060000060c0008000f010300
000204000f070400000208010c0000070c0008000f0b0400000203000f07040000020300
0f0605000b000c000008090008000f090400000203000f0a050000030f050f1600020217
00020f1805000800030305000d000f330400000203000f020500030305000f1107000800
0900040203000e000f170e0003000900040203000e000f290d000500030405000f270f16
0002021700020f540400000203000f9c0f160002021700020f540400000203000f9c0f16
001d0f540400000203000f9c0f16001d0f540400000203000f9c0f16001d0f5404000002
03000f9c0f890400000203000f9c0f890400000203000f9c0f890400000203000f9c0f89
0e0005020d000f9c0fff0f2b0fff0f2b0fff0f2b0fff0f2b0fff0f2b
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 299 59
%%EOF

%%EndDocument
@endspecial 591 2998 a
 currentpoint currentpoint translate 1 1.06113 div 1 1.06113 div scale
neg exch neg exch translate
 591 2998 a Fq 1580 3264 a(5th) 25
b(August) e(2002) p 90 rotate dyy eop
%%Page: 1 2
1 1 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v 150
370 a
 currentpoint currentpoint translate 0.36922 0.36922 scale neg exch
neg exch translate
 150 370 a @beginspecial 0 @llx 0 @lly 169 @urx
39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 370 a
 currentpoint currentpoint translate 1 0.36922 div 1 0.36922 div scale
neg exch neg exch translate
 150 370 a Fp 538 w(The) 16 b(doub) n(le) i
(squares) f(and) f(eZ) i(are) f(tradem) n(arks) g(belong) n(ing) g(to) g
(eZ) g(systems) h(of) f(Norw) o(ay) -7 b(,) 18 b(re) o(gistratio) n(n)
150 469 y(numb) n(er) i(NO) h(981) e(601) h(564) f(\(http://www) -5
b(.) n(brre) o(g) n(.no/o) n(ppslag/enh) n(et/detalj.ssc?or) o(g) n
(nr=9) n(8160) n(1564) n(\).) 150 594 y(All) 21 b(images) f(and) f(te) o
(xt) h(herein) g(is) h(Cop) o(yrig) n(ht) g(200) n(1) f(eZ) h(systems.)
150 718 y(eZ) j(publish) g(is) h(a) g(softw) o(are) f(pack) n(age) g
(released) g(under) f(the) h(GPL) h(lisence) f(\(http://www) -5
b(.g) n(nu.o) n(r) o(g/cop) m(yleft/gpl.) n(html\),) 150
818 y(its) 21 b(primary) e(poin) n(t) i(of) f(distrib) n(ution) f(and) h
(infor) n(mation) g(is) h(http://de) l(v) o(eloper) -7
b(.ez.no/) p 150 5723 3525 4 v 1892 5823 a(1) p 90 rotate
dyy eop
%%Page: 2 3
2 2 bop Fo 150 1021 a(Contents) p Fn 150 1560 a(1) 83
b(Intr) o(oduct) n(ion) 2908 b(4) p Fp 275 1684 a(1.1) 85
b(Pre-Con\002gu) n(red) 20 b(Hosting) 30 b(.) 41 b(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 141 b(4) 275 1808 y(1.2) 85 b(Pre-Con\002gu) n(red) 20
b(Hardw) o(are) 28 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.)
g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(4) p Fn 150 2016 a(2) 83 b(Installing) 20 b(eZ) h(publish) h
(\(standard) e(method\)) 1941 b(5) p Fp 275 2140 a(2.1) 85
b(Prerequisites) 23 b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 141 b(5) 465 2264 y(2.1.1) 98
b(Needed) 19 b(Pri) n(vile) o(ges) 81 b(.) 41 b(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(5) 465 2388 y(2.1.2) 98 b(Needed) 19 b(Softw) o(are) 49
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(6) 465 2512
y(2.1.3) 98 b(Which) 20 b(Softw) o(are) g(is) h(Already) e(Installed?)
58 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(7) 731 2636 y(2.1.3) n(.1) 112 b(Systems) 20 b(Using) g(RPM) 27
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 141 b(7) 465 2760 y(2.1.4) 98 b(Mandr) n(ak) o(e) 38
b(.) j(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(7) 465 2884 y(2.1.5) 98 b(IRIX) 78 b(.) 41 b(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(7) 465 3008 y(2.1.6) 98
b(RA) -5 b(Q) 22 b(3) 77 b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 141 b(7) 465 3132 y(2.1.7) 98 b(W) m(indo) n(ws) 60
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(7) 465 3256 y(2.1.8) 98 b(Other) 20 b(Systems) 74 b(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(8) 465 3380 y(2.1.9) 98
b(Installation) 20 b(of) f(Required) h(Softw) o(are) 73
b(.) 41 b(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141
b(8) 465 3504 y(2.1.10) 56 b(Impo) n(rtant) 20 b(Notice) 53
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(8) 275 3628
y(2.2) 85 b(Compile) 20 b(Con\002gur) n(ation) 58 b(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(8) 465 3752 y(2.2.1) 98
b(PHP) 35 b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 141 b(8) 731 3876 y(2.2.1) n(.1) 112 b(Unpa) n(cking) 41
b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 141 b(8) 731 4000 y(2.2.1) n(.2) 112
b(Con\002gu) n(ration) 69 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 141 b(9) 731
4124 y(2.2.1) n(.3) 112 b(Compilatio) n(n) 54 b(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 100 b(10) 731 4248 y(2.2.1) n(.4) 112 b(Installation) 31
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) 100 b(10) 731 4372 y(2.2.1) n(.5) 112
b(Compilin) n(g) 21 b(the) f(php) f(modu) n(le) i(on) f(RedHat) g(7.x,)
f(step) i(by) f(step) 72 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(10) 275 4496 y(2.3) 85 b(Apache) 20 b(Con\002gu) n(ration) 27
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(11) 465 4620 y(2.3.1) e(Dual) 20 b(V) -5 b(irtual) 20
b(Host) 33 b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(11) 731 4745 y(2.3.1) n(.1) 112 b(Con\002gu) n(ring) 20
b(Thro) n(ugh) f(httpd.co) n(nf) k(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(11) 731 4869 y(2.3.1) n(.2) 112 b(Con\002gu) n(ring) 20
b(php) n(.ini) 63 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(13) 731 4993 y(2.3.1) n(.3) 112
b(Con\002gu) n(ring) 20 b(Thro) n(ugh) f(.htaccess) 65
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(13) 275
5117 y(2.4) 85 b(eZ) 21 b(pub) n(lish) g(Installation) 78
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(14) 465
5241 y(2.4.1) e(Progra) n(m) 21 b(Files) 30 b(.) 42 b(.) f(.) g(.) g(.)
h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(14) 465 5365 y(2.4.2) e(Database) 69
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(14) 731 5489 y(2.4.2) n(.1) 112 b(First) 21 b(time) f(installation) g
(\(MySQL) n(\)) 33 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(14) 731 5613 y(2.4.2) n(.2) 112 b(PostgreSQL) 19 b(con\002gu) n
(ration) 34 b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(15) 1892 5823 y(2) p 90 rotate dyy eop
%%Page: 3 4
3 3 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 731
333 a(2.4.2) n(.3) 112 b(PostgreSQL) 19 b(setup) 53 b(.) 42
b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(15) 731 457 y(2.4.2) n(.4) 112 b(First) 21 b(time) f(installation) g
(\(Postgre) n(SQL\)) k(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(15) 731 582 y(2.4.2) n(.5) 112 b(Upda) n(ting) 20 b(the) h
(Installation) 77 b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(16) 465 706 y(2.4.3) e(Setting) 20 b(up) g(the) g(cronjo) n
(b) h(job) 70 b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.)
g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) 100 b(16) 275 831 y(2.5) 85 b(No) n(w) 21
b(What?) 55 b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 100 b(16) 465 955 y(2.5.1) e(Post) 21 b(Install) f
(Checklist) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(16) 275
1080 y(2.6) 85 b(T) m(roub) n(leshooting) 29 b(.) 42
b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(17) 465 1204 y(2.6.1) e(Problems) 20 b(Durin) n(g) h(Installation) 30
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) 100 b(17) 731 1329 y(2.6.1) n(.1) 112 b(Missing) 20
b(Compiler/Can) f(not) h(Compile) g(\(C++/C\)) 31 b(.) 41
b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.)
100 b(17) 731 1453 y(2.6.1) n(.2) 112 b(I) 20 b(am) g(getting) g
(linkin) n(g) h(erro) n(rs) g(re) o(ga) n(rding) e(k) o(erber) n(os) i
(when) f(tryin) n(g) h(to) f(b) n(uild) g(PHP) 138 b(17) 465
1578 y(2.6.2) 98 b(Problems) 20 b(After) f(Installation) 29
b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) 100 b(17) 731 1703 y(2.6.2) n(.1) 112 b(Permission) 19
b(Denied) 25 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(17) 731 1827 y(2.6.2) n(.2) 112
b(Can) 20 b(not) g(see) h(Imag) n(es) 71 b(.) 41 b(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(17) 731
1952 y(2.6.2) n(.3) 112 b(W) -7 b(arning) 19 b(about) g(T) -6
b(emp) 20 b(Directory) 53 b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(17) 731 2076 y(2.6.2) n(.4) 112 b(After) 19 b(installing) h(my) g(ne)
n(w) g(php) f(module,) g(apache) g(dies) i(immed) n(iately) -5
b(.) 68 b(.) 41 b(.) g(.) h(.) f(.) 100 b(18) 275 2201
y(2.7) 85 b(Installing) 20 b(on) g(RA) -5 b(Q) 21 b(3) 30
b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(18) 465 2325 y(2.7.1) e(Getting) 20 b(SSL) h(to) f(W) -7
b(ork) 45 b(.) d(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(22) 275 2450
y(2.8) 85 b(Installing) 20 b(on) g(W) m(indo) l(ws) 76
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(22) 465
2574 y(2.8.1) e(Requireme) n(nts) 21 b(and) f(notes) 73
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(22) 465 2699 y(2.8.2) e(Apache) 56
b(.) 42 b(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(23) 465 2823 y(2.8.3) e(PHP4) 55 b(.) 41 b(.) h(.) f(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(23) 465 2948
y(2.8.4) e(MySQL) 38 b(.) k(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) 100 b(24) 465 3072 y(2.8.5) e(phpM) n(yAdmin) 26
b(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(25) 465 3197 y(2.8.6) e(ImageM) n(agick) 36 b(.) 42
b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(25) 465
3321 y(2.8.7) e(Determing) 19 b(and) h(pub) n(lishing) g(your) f(host) h
(names) 62 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(26) 465 3446 y(2.8.8) e(eZ) 20 b(publish) g(2.2.) n(x) 83
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(27) 465
3571 y(2.8.9) e(Creating) 20 b(the) g(database) 31 b(.) 42
b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(27) 465 3695 y(2.8.10) 56 b(V) -5
b(irtual) 20 b(hosts) h(and) e(re) n(write) h(rules) 60
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(27) 465 3820 y(2.8.11) 56 b(Sample) 20 b(data) 27
b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(29) 465 3944 y(2.8.12) 56 b(eZ) 20 b(publish) g(and) f(IIS) 69
b(.) 41 b(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(29) 275 4069
y(2.9) 85 b(Mandrak) m(e) 55 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.)
f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) h(.) f(.) 100 b(30) 465 4193
y(2.9.1) e(Do) n(wnloa) n(d) 21 b(the) f(F) o(ollo) n(win) n(g) 47
b(.) 41 b(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) h(.) f(.) 100 b(30) p Fn 150 4401 a(3) 83 b(Installing) 20
b(eZ) h(publish) h(without) e(virtual) f(hosts) i(and) g(mod_r) o(e) n
(write) 1199 b(31) p Fp 275 4525 a(3.1) 85 b(Prerequisites) 23
b(.) 41 b(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g
(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(31) 275 4650 y(3.2) 85 b(eZ) 21 b(pub) n(lish) g
(installation) f(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f
(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(32) 465 4774 y(3.2.1) e(Installing) 20 b(in) g(one) g(directo) n(ry) g
(\(Recomm) n(ended) f(install\)) k(.) 42 b(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(32) 731 4899 y(3.2.1) n(.1) 112 b(Installing) 19 b(the) h(\002les) h
(for) f(eZ) g(publish) 67 b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(32) 731 5023 y(3.2.1) n(.2) 112 b(Database) 20 b(installation) j(.) 41
b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h
(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) 100
b(32) 731 5148 y(3.2.1) n(.3) 112 b(Finishing) 19 b(the) h(install) 59
b(.) 41 b(.) g(.) g(.) h(.) f(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g
(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) g(.) h(.) f(.) g(.) h(.) f
(.) 100 b(32) 465 5272 y(3.2.2) e(Installing) 20 b(with) g(shell) h
(access) f(on) g(serv) o(er) f(and) h(tw) o(o) h(separate) e(director) n
(ies) i(for) f(eZ) g(publish) 80 b(.) 100 b(32) p 150
5723 V 1892 5823 a(3) p 90 rotate dyy eop
%%Page: 4 5
4 4 bop Fm 150 980 a(Chapter) 44 b(1) p Fo 150 1420 a(Intr) l(oduction)
p Fn 358 1877 a(\223He) 21 b(who) i(asks) f(is) i(a) e(f) n(oo) n(l) h
(f) n(or) f(\002) o(v) o(e) g(minutes,) i(b) n(ut) f(he) f(who) h(does)
f(not) g(ask) h(r) o(emains) f(a) g(f) n(ool) g(f) n(or) o(e) m(v) o
(er) -8 b(.) h(\224) p Fp 358 1976 a(-) 41 b(Chinese) 20
b(pro) o(v) m(erb) 150 2184 y(eZ) i(pub) n(lish) g(is) h(a) f(conten) n
(t) g(managem) n(ent) g(system,) g(amon) n(g) g(a) g(lot) f(of) h
(other) e(things.) 29 b(This) 22 b(installation) f(manu) n(al) h(will) h
(try) 150 2284 y(to) d(co) o(v) o(er) f(the) h(job) g(of) g(installing)
g(eZ) g(publish) f(on) h(your) f(serv) o(er) -5 b(.) 150
2408 y(Since) 18 b(v) o(ersio) n(n) g(2.2) f(eZ) h(publish) f(has) h(a)
g(ne) n(w) f(possible) h(w) o(ay) g(to) f(be) h(installed:) 24
b(without) 17 b(virtual) g(hosts) h(and) f(mod_) n(re) n(write.) 150
2508 y(This) k(mak) o(es) g(it) h(possible) f(for) f(people,) g(who) h
(don) n(') o(t) g(ha) n(v) o(e) g(a) g(dedicated) f(serv) o(er) g(or) h
(a) g(specialized) g(eZ) g(publish) f(hoster) m(,) g(to) 150
2607 y(install) 26 b(eZ) f(publish) g(on) g(their) g(accou) n(nts) h
(as) g(long) e(as) j(the) o(y) d(ha) n(v) o(e) h(PHP) h(and) f(a) g
(suppor) n(ted) h(databa) n(se) g(\(e.g.) 40 b(mySQL) 25
b(or) 150 2707 y(PostgreSQL\).) 150 2832 y(This) 20 b(opens) g(some) g
(ne) n(w) g(option) n(s) h(for) f(installing:) 150 2956
y(If) e(you) f(ha) n(v) o(e) h(an) g(accou) n(nt) h(at) f(a) h(webho) n
(ster) g(with) f(PHP) h(and) e(mySQL,) h(you) n(r) h(optio) n(n) g
(shou) n(ld) g(be) f(chap) n(ter) h(3,) f(because) f(you) 150
3056 y(w) o(on') o(t) i(be) h(able) g(to) h(install) f(eZ) h(pub) n
(lish) g(as) g(it') -5 b(s) 21 b(e) o(xplain) n(ed) f(in) h(chapter) e
(2.) 150 3180 y(If) i(you) f(ha) n(v) o(e) h(a) g(dedicated) f(serv) o
(er) h(with) g(Apache) f(and) h(mySQL) g(alread) n(y) h(run) n(ning) f
(and) f(you) g(don') o(t) g(w) o(ant) h(to) h(mess) f(with) 150
3280 y(the) f(Apache) g(con) n(\002guration) n(,) h(then) e(chapter) h
(3) g(might) f(be) h(of) g(interest) h(of) e(you.) 150
3404 y(If) h(you) e(ha) n(v) o(e) i(a) g(dedicate) n(d) g(serv) o(er) f
(and) g(w) o(ant) h(some) g(help) f(on) g(ho) n(w) h(to) g(install) g
(all) g(needed) f(softw) o(are) g(and) g(eZ) h(publish) f(on) 150
3504 y(it,) i(then) e(chapter) g(2) i(is) g(for) e(you.) p
Fl 150 3809 a(1.1) 119 b(Pr) n(e-Con\002gur) n(ed) 32
b(Hosting) p Fp 150 4020 a(It) 21 b(is) g(possible) f(to) h(get) f
(pre-co) n(n\002gure) n(d) h(hosting) e(services) i(where) f(you) f
(can) h(install) h(and) f(manage) f(your) h(eZ) g(publish) g(site) 150
4119 y(with) g(ease.) 26 b(Read) 20 b(more) f(about) h(our) f(hosting) g
(partner) n(s) j(at) e(eZ) h(systems) f(web) g(site) h(\() p
Fk(http://) p Fp(ez.) n(no/shop) n(/hosting\).) p Fl
150 4424 a(1.2) 119 b(Pr) n(e-Con\002gur) n(ed) 32 b(Hard) n(war) n(e) p
Fp 150 4635 a(It) f(is) h(possible) f(to) g(orde) n(r) h(pre-) n
(con\002gu) n(red) f(hard) n(w) o(are) g(from) f(eZ) h(systems.) 58
b(Y) -9 b(ou) 30 b(can) h(order) f(throu) n(gh) h(or) f(web) h(shop) 150
4734 y(\() p Fk(http://) p Fp(sh) n(op.ez.n) n(o\).) 150
4859 y(A) 21 b(line) f(starting) g(with) g(a) h(hash-sig) n(n) g
(\223#\224) f(are) g(inpu) n(t) h(from) e(the) i(user) f(to) g(the) g
(shell.) 1892 5823 y(4) p 90 rotate dyy eop
%%Page: 5 6
5 5 bop Fm 150 980 a(Chapter) 44 b(2) p Fo 150 1420 a(Installi) r(ng) 52
b(eZ) f(publish) h(\(standard) p Fj 2888 1345 a(1) p
Fo 150 1669 a(method\)) p Fp 150 2126 a(This) 27 b(chap) n(ter) g(is) h
(mainly) d(intended) g(for) h(installation) h(on) f(a) h(Red) g(Hat) g
(Linu) n(x) g(system,) h(b) n(ut) f(a) g(lot) f(of) h(frien) n(dly) g
(peop) n(le) 150 2226 y(ha) n(v) o(e) 20 b(con) n(trib) n(uted) g
(infor) n(mation) g(for) f(installation) h(on) g(other) f(operatin) n
(g) i(systems,) f(tak) o(e) g(a) h(look) e(at) i(chapter) e(2) h(and) g
(learn) 150 2325 y(which) g(systems) g(those) g(are.) 150
2450 y(Most) 27 b(of) g(what) g(is) g(described) f(here) g(re) o(gar) n
(ding) g(Red) h(Hat) h(installation) e(can) h(also) g(be) g(applied) f
(to) h(other) f(installations,) 150 2549 y(especially) k(if) g(your) f
(system) h(uses) h(RPM) g(for) f(installation.) 54 b(F) o(or) 30
b(other) f(systems) i(you) e(w) o(ould) g(need) h(to) g(do) g(a) g(lot)
h(of) 150 2649 y(comp) n(iling) 20 b(yourself) f(to) i(mak) o(e) e
(this) i(w) o(ork,) e(or) h(apply) g(the) g(system') -5
b(s) 21 b(o) n(wn) e(packag) n(e) i(manag) n(er) -5 b(.) 150
2773 y(Finding) 24 b(packag) n(es) i(can) f(be) g(don) n(e) h(dirctly) e
(from) g(v) o(endo) n(r) h(sites,) j(thou) n(gh) d(you) f(might) h(not)
f(be) h(guaran) n(teed) g(that) g(you') o(ll) 150 2873
y(\002nd) d(the) h(packag) n(e) g(you) f(need.) 31 b(In) 23
b(such) f(instances) h(you) e(need) h(to) h(do) n(wn) n(load) f(the) h
(source) f(directly) g(from) f(the) i(softw) o(are) 150
2973 y(de) n(v) o(e) n(loper) -5 b(.) 150 3097 y(Dif) n(feren) n(t) 21
b(distrib) n(ution) e(sites) i(for) f(dif) n(fer) n(ent) g(Unix) g
(systems) h(are:) p Fi 275 3284 a(\017) p Fp 41 w(Debian) p
Fk 19 w(\(http://www) n(.debian.org/d) n(istrib/ftplist) n(\)) p
Fi 275 3450 a(\017) p Fp 41 w(Mand) n(rak) o(e,) f(see) h(chap) n(ter) g
(2.9) n(.) p Fi 275 3595 a(\017) p Fp 41 w(IRIX) p Fk
20 w(\(http://fr) n(eeware.sgi.co) n(m/\)) p Fi 275 3761
a(\017) p Fp 41 w(Red) f(Hat) h(Linux) p Fk 19 w(\(http://w) n
(ww.redhat.com/) n(apps/download) p Fp -2 w(\)) p Fi
275 3907 a(\017) p Fp 41 w(SuSE) f(Linux) f(\() p Fk(http://w) n
(ww.suse.com/u) n(s/support/down) n(load/index.ht) n(ml\)) p
Fi 275 4052 a(\017) p Fp 41 w(Sun) p Fk 19 w(\(http://www.su) n
(nfreeware.com) n(/\)) p Fp 150 4260 a(The) h(addr) n(esses) i(to) e
(the) g(softw) o(are) g(de) n(v) o(e) n(lopers) g(will) h(be) f(gi) n
(v) o(en) f(where) h(appr) n(opriated) f(in) h(the) h(te) o(xt.) 150
4384 y(Y) -9 b(ou) 27 b(can) h(also) g(try) f("The) g(Written) h(W) -7
b(ord") 28 b(\() p Fk(ftp:/) n(/ftp.thewritte) n(nword.com/pac) n
(kages/free/by) n(-name/gcc-) 150 4484 y(2.95.2/) p Fp(\)) j(for) h
(binaries) g(for) f(Solaris) i(2.5.) n(1,) j(2.6) n(,) g(2.7/SP) -8
b(ARC,) 33 b(2.7/I) n(ntel,) i(IRIX) e(6.2,) h(6.5,) h(Digital) d(UNIX)
h(4.0) n(D,) 150 4583 y(HP-UX) 20 b(10.20) n(,) h(and) e(HP-UX.) p
Fl 150 4888 a(2.1) 119 b(Pr) n(er) n(equisites) p Fh
150 5116 a(2.1.1) 99 b(Needed) 26 b(Pri) o(vileges) p
Fp 150 5296 a(F) o(or) 20 b(the) g(standard) f(installation) h(of) g
(eZ) g(publish) f(you) h(will) h(need) e(to) h(ha) n(v) o(e) g(the) g
(follo) n(wing) f(pri) n(v) n(ile) o(ges) i(on) e(your) g(system:) p
150 5349 1410 4 v Fg 240 5405 a(1) p Ff 270 5428 a(An) d(alt) r(ernat) r
(i) n(v) o(e) i(instal) r(l) f(method) g(is) g(descr) r(ibed) g(in) h
(chapt) r(er) f(3) p Fp 1892 5823 a(5) p 90 rotate dyy
eop
%%Page: 6 7
6 6 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fi 275
333 a(\017) p Fp 41 w(Access) 17 b(to) g(Apache') -7
b(s) 18 b(httpd.co) n(nf) f(for) f(creating) g(tw) o(o) h(virtual) f
(hosts,) i(enablin) n(g) f(the) g(re) n(write) g(eng) n(ine) g(and) g
(creatin) n(g) 358 432 y(re) n(write) 31 b(rules.) 61
b(Ho) n(we) n(v) m(er) m(,) 35 b(this) d(is) h(not) f(needed) f(if) h
(you) f(w) o(ant) h(to) h(run) e(eZ) h(publish) f(in) i(nVH) f(mod) n
(e.) 61 b(More) 358 532 y(info) n(rmation) 19 b(aboutth) n(e) i(nVH) f
(mode) f(is) j(a) n(v) n(ailable) d(in) i(chap) n(ter) g(3.) p
Fi 275 698 a(\017) p Fp 41 w(Access) i(to) g(comp) n(iler) m(,) g(only)
f(need) n(ed) h(if) g(you) e(can') o(t) h(use) h(an) o(y) f(of) g(the) h
(pre-) n(compiled) e(package) n(s) j(a) n(v) n(ailable.) 32
b(\(Y) -9 b(o) n(u) 358 798 y(will) 16 b(ha) n(v) o(e) g(to) g(install)
h(the) f(gcc) g(comp) n(iler) h(on) f(you) n(r) g(system,) h(see) g
(chapter) e(1) h(for) g(a) g(list) i(of) d(sites) j(pro) m(viding) d
(softw) o(are) 358 897 y(for) k(dif) n(fer) n(ent) i(Unix) o(e) n(s.\))
p Fi 275 1063 a(\017) p Fp 41 w(Access) f(to) h(a) f(shell) h(\(Y) -9
b(ou) 19 b(must) h(run) g(certain) g(scripts) g(durin) n(g) h
(installation,) e(and) h(sometimes) g(for) f(maintenan) n(ce.\)) p
Fi 275 1229 a(\017) p Fp 41 w(Access) h(to) g(cron) f(jobs) h(\(Only) f
(needed) g(if) h(you) f(w) o(ant) h(to) g(use) g(the) g(eZ) g(ne) n(ws)
g(feed) g(mod) n(ule) g(for) f(re) o(gular) g(upd) n(ates) i(of) 358
1329 y(head) n(lines) g(impor) n(ted) f(from) g(other) f(sites.\)) p
Fi 275 1495 a(\017) p Fp 41 w(Access) h(to) h(Apach) n(e') -5
b(s) 21 b(modules) p Fi 275 1661 a(\017) p Fp 41 w(Access) f(to) h(a) f
(MySQL) g(or) g(PostgreSQL) g(database) p Fi 275 1827
a(\017) p Fp 41 w(Y) -9 b(ou) 19 b(might) h(also) g(need) g(the) g(pri)
n(vile) o(g) n(e) g(to) h(add) e(ne) n(w) h(libraries) g(to) h(you) n
(r) g(system.) p Fh 150 2090 a(2.1.2) 99 b(Needed) 26
b(Softwar) n(e) p Fp 150 2270 a(Y) -9 b(ou) 15 b(also) i(need) e(to) h
(do) n(wnlo) n(ad) g(and) g(install) g(the) g(follo) n(wing) f(packa) n
(ges,) i(if) g(the) o(y) e(aren') m(t) i(presen) n(t) g(on) f(you) n(r)
g(system) h(alread) n(y:) p Fi 275 2478 a(\017) p Fp
41 w(A) 23 b(database.) 33 b(Curren) n(tly) -5 b(,) 23
b(eZ) g(publish) f(supppo) n(rts) i(MySQL) e(\(http://www) -5
b(.m) n(ysql.com) n(\)) 23 b(v) o(ersion) f(3.23) g(or) g(later) 358
2577 y(and) d(PostgreSQL) h(\(http://www) -5 b(.) n(postgresq) n(l.or) o
(g) n(\)) 21 b(v) o(er) n(sion) g(7.1) n(.3) f(or) g(later) -5
b(.) p Fi 275 2743 a(\017) p Fp 41 w(Imag) n(eMagick) 19
b(\(http://www) -5 b(.) n(imagemag) n(ick.or) m(g/\)) 20
b(ne) n(west) f(v) o(ersion) g(\(Needed) g(by) g(eZ) h(article,) f(eZ) h
(image) g(cata-) 358 2843 y(logu) n(e,) h(and) e(all) i(modu) n(les) g
(using) f(images.) k(Y) -9 b(ou) 20 b(need) g(only) f(the) h(comma) n
(nd) g(line) h(v) o(er) n(sion.\)) p Fi 275 3009 a(\017) p
Fp 41 w(Apach) n(e) 33 b(\(http://h) n(ttpd.apa) n(che.or) o(g) n(/\)) f
(latest) h(1.3) e(release.) 61 b(\(It) 32 b(is) h(al) o(w) o(ays) f
(recomm) n(ended) f(to) h(run) g(the) g(latest) 358 3109
y(Apach) n(e) 25 b(release,) h(thoug) n(h) f(eZ) g(pub) n(lish) h
(should) n(n') o(t) e(be) h(v) o(ery) f(pick) m(y) h(with) g(the) g
(Apach) n(e) h(v) o(er) n(sions.) 39 b(W) -7 b(e') l(v) o(e) 25
b(used) 358 3208 y(eZ) 20 b(pub) n(lish) h(with) g(Apach) n(e) g(1.3.) n
(13,) f(some) g(ha) n(v) o(e) f(reported) g(that) h(Apache) f(1.3.9) g
(isn') o(t) h(useful.\)) p Fi 275 3374 a(\017) p Fp 41
w(mod) n(_re) n(write.) 28 b(This) 22 b(apache) f(mod) n(ule) h(is) g
(included) e(in) i(all) g(recent) f(v) o(ersion) n(s) i(of) e(RedHat) h
(Linux) n(.) 30 b(If) 21 b(you) g(use) h(an) 358 3474
y(other) d(distro,) h(you) f(may) h(need) f(to) h(recomp) n(ile) h
(apache) e(with) i(mod) n(_re) n(write) p Fi 275 3640
a(\017) p Fp 41 w(An) o(y) e(and) h(all) g(modules) g(you) f(need) g
(for) h(apache) f(in) h(addition) f(to) i(mod) n(_php) n(.) 26
b(\(http://mo) n(dules.ap) n(ache.or) m(g/\)) p Fi 275
3806 a(\017) p Fp 41 w(PHP) g(\(http) n(://www) -5 b(.php) n(.net/\)) 25
b(v) o(ersion) f(4.0.4) n(pl1) h(or) g(later) -5 b(.) 41
b(V) -9 b(ersion) 24 b(4.0.6) g(is) i(recomm) n(ended.) 39
b(Y) -9 b(ou) 25 b(need) g(the) 358 3906 y(sourc) n(e) e(code) e(v) o
(ersion) g(from) g(this) i(site,) g(for) f(windo) l(ws) h(you) e(can) h
(just) h(do) n(wn) n(load) f(the) g(binary) -7 b(.) 31
b(\(eZ) 22 b(pub) n(lish) h(uses) 358 4005 y(refer) n(ences) 30
b(for) g(objects) g(and) g(foreac) n(h) h(loop) n(s.) 57
b(Only) 29 b(v) o(ersion) g(4.0.4p) n(l1) h(and) g(later) h(supp) n
(orts) g(both) e(of) h(these) 358 4105 y(featur) n(es) 21
b(satisf) o(actorily) -5 b(.) n(\)) p Fi 275 4271 a(\017) p
Fp 41 w(eZ) 20 b(pub) n(lish) h(\(http://de) n(v) m(eloper) -7
b(.ez.no/\)) 19 b(v) o(erision) g(2.0) h(or) g(later) g(stable) h
(releases.) 150 4479 y(The) e(libraries) h(and) f(php) g(are) h(pack) n
(aged) f(pre-co) n(mpiled) g(for) g(Linux) g(i386) g(on) g(http://de) n
(v) o(e) n(loper) -5 b(.ez.n) n(o.) 25 b(The) 19 b(softw) o(are) h(is)
150 4578 y(listed) h(in) f(the) g(order) f(of) h(installation.) 150
4703 y(Y) -9 b(ou) 20 b(shou) n(ld) h(also) f(\002nd) g(a) h(list) g
(of) f(RPMs) h(at) g(http://www) -5 b(.b) n(randish.) n(co.uk/p) n
(hprp) n(m) p Fn 150 4827 a(Important) 20 b(r) o(elea) n(se) h(note:) p
Fp 150 4952 a(eZ) e(publish) g(v) o(er) n(sion) h(2.2) n(.2) f(does) g
(not) g(requir) n(e) h(neither) e(QDom) h(or) g(libxml) g(as) h(pre) n
(v) n(iosly) f(releases) h(did.) k(In) 19 b(this) h(release,) 150
5051 y(eZ) f(publish) f(uses) i(it) g(o) n(wn) f(xml) f(parser) h(:) 25
b(eZ) 19 b(xml.) 25 b(Option) n(inal) 20 b(supp) n(ort) f(for) g
(libxml) f(will) i(prob) n(ably) f(be) g(reintro) n(duced) f(in) 150
5151 y(a) j(futu) n(re) g(v) o(er) n(sion) g(of) e(eZ) i(pub) n(lish) p
150 5723 V 1892 5823 a(6) p 90 rotate dyy eop
%%Page: 7 8
7 7 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fh 150
333 a(2.1.3) 99 b(Which) 25 b(Softwar) n(e) h(is) e(Alr) n(eady) i
(Installed?) p Fn 150 513 a(2.1.3) n(.1) 82 b(Systems) 21
b(Using) g(RPM) p Fp 150 694 a(RPM) e(is) g(a) f(system) g(for) f
(distrib) n(uting) g(pre-c) n(ompiled) g(softw) o(are.) 24
b(The) 17 b(packag) n(es) i(also) f(contain) f(pre-co) n(n\002gur) n
(ed) h(settings) 150 793 y(and) i(initialisation) g(\002les,) g(lea) n
(ving) g(almost) g(nothin) n(g) h(to) f(the) g(user) m(,) g(e) o(xcep) n
(t) h(decidin) n(g) g(what) f(to) g(install.) 150 918
y(T) -7 b(o) 17 b(check) f(if) h(a) h(pack) n(age) f(is) h(a) n(v) n
(ailable) e(on) h(you) n(r) g(system) g(you) f(can) h(run) f(the) h
(follo) n(win) n(g) g(comman) n(d) g(\(RPM) h(based) e(systems) 150
1018 y(\223rpm) 24 b(-qa) h(|) h(grep) e(<name) g(of) h(progr) n
(am/library) n(>\224.) 40 b(If) 25 b(you) g(need) f(to) i(kno) l(w) g
(where) e(you) h(can) g(\002nd) g(the) g(dif) n(fer) n(ent) h(\002les)
150 1117 y(from) 18 b(that) h(package) f(you) h(can) g(follo) l(w) h
(up) f(on) g(the) g(pre) n(v) n(ious) h(comm) n(and) f(with) g(the) g
(follo) n(wing) f(\223rpm) g(-ql) h(<rpm) g(name>) n(\224.) 150
1217 y(RPM) i(name) f(is) h(one) e(of) h(the) h(retur) n(ned) f(names) g
(from) f(the) h(pre) n(vio) n(us) h(comm) n(and,) f(e) o(xam) n(ple) p
Fe 2764 1187 a(2) p Fp 2797 1217 a(:) p Fk 309 1420 a(#) 40
b(rpm) g(-qa) f(|) h(grep) f(libxml) 309 1524 y(libxml-1.8.7-) n(80) 309
1628 y(libxmld-1.8.7) n(-80) 309 1732 y(#) h(rpm) g(-ql) f(libxml-1.8) n
(.7-80) 309 1835 y(/usr/bin/xml-) n(config) 309 1939
y(/usr/lib/libx) n(ml.so.1) 309 2043 y(/usr/lib/libx) n(ml.so.1.8.7) 309
2147 y(/usr/share/do) n(c/packages/lib) n(xml) 309 2250
y(/usr/share/do) n(c/packages/lib) n(xml/AUTHORS) 309
2354 y(/usr/share/do) n(c/packages/lib) n(xml/COPYING) 309
2458 y(/usr/share/do) n(c/packages/lib) n(xml/COPYING.L) n(IB) 309
2562 y(/usr/share/do) n(c/packages/lib) n(xml/NEWS) 309
2666 y(/usr/share/do) n(c/packages/lib) n(xml/README) 309
2769 y(/usr/share/do) n(c/packages/lib) n(xml/TODO) p
Fh 150 3032 a(2.1.4) 99 b(Mandrak) o(e) p Fp 150 3212
a(First) 21 b(read) f(chap) n(ter) h(2.9,) e(then) h(contin) n(ue) g
(reading) f(the) h(manual) g(fro) n(m) h(here.) p Fh
150 3475 a(2.1.5) 99 b(IRIX) p Fp 150 3656 a(By) 33 b(accessing) f(the)
g(softw) o(are) g(manager) f(\(you) g(must) i(be) f(root\)) g(you) f
(can) h(get) h(a) g(list) g(of) f(installed) h(softw) o(are,) i(scroll)
150 3755 y(or) 29 b(search) h(that) g(list) h(to) f(\002nd) f(the) h
(packa) n(ges) g(you') l(r) n(e) g(interested) f(in.) 54
b(Double) 29 b(click) h(on) f(the) h(tabs) g(to) g(the) g(left) g(to) g
(get) 150 3855 y(infor) n(mation) 20 b(abou) n(t) h(where) f
(speci\002c) g(\002les) h(are) f(installed.) p Fh 150
4117 a(2.1.6) 99 b(RA) l(Q) 24 b(3) p Fp 150 4298 a(There) j(is) i(a) f
(separate) g(chapter) f(2.7) g(in) h(this) h(manu) n(al) g(describ) n
(ing) f(installation) g(on) f(a) i(RA) -5 b(Q) 29 b(3) f(serv) o(er) -7
b(.) 50 b(It) 28 b(w) o(as) h(kind) n(ly) 150 4398 y(pro) o(v) n(ided)
20 b(by) f(Chris) i(Mason,) p Fh 150 4660 a(2.1.7) 99
b(W) n(indo) o(ws) p Fp 150 4841 a(W) m(indo) n(ws) 20
b(installation) f(is) i(described) e(in) i(its) g(o) n(wn) f(chap) n
(ter) h(2.8) n(.) p 150 4894 1410 4 v Fg 240 4949 a(2) p
Ff 270 4973 a(A) 16 b(line) i(start) r(ing) f(with) h(a) f(hash-sign) h
("#") f(are) h(input) g(from) f(the) h(user) f(to) g(the) h(shell.) p
150 5723 3525 4 v Fp 1892 5823 a(7) p 90 rotate dyy eop
%%Page: 8 9
8 8 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fh 150
333 a(2.1.8) 99 b(Other) 25 b(Systems) p Fp 150 513 a(On) 18
b(other) f(systems) i(you) e(should) g(read) h(the) g(docum) n
(entation) f(for) h(that) g(system) g(to) h(learn) e(ho) n(w) h(to) g
(\002nd) g(out) g(what) g(softw) o(are) 150 613 y(is) j(already) e
(installed.) 150 737 y(Y) -9 b(ou) 23 b(could) g(try) h(to) g(use) g
(the) g(comman) n(d) g(\223\002nd\224) g(to) g(\002nd) g(the) g(softw) o
(are.) 35 b(It) 25 b(is) g(used) e(thus:) 33 b(\223\002nd) 24
b(.) 36 b(-name) 23 b(\\*<pro) n(gram) 150 837 y(name>\\*) n(\224) g
(fro) n(m) f(the) g(/usr/,) g(/local/) g(,) h(/lib/,) f(/share/) g
(director) n(ies.) 31 b(In) 21 b(e) o(xtreme) g(cases) i(you) e(cou) n
(ld) h(try) g(from) f(the) h(roo) n(t) h(of) 150 937
y(the) d(system,) g(b) n(ut) g(this) g(will) h(tak) o(e) e(a) i(long) e
(time) h(and) f(will) i(also) f(hog) f(resour) n(ces) i(on) e(your) g
(comp) n(uter) -5 b(.) 25 b(Theref) n(ore) 20 b(we) g(ur) o(g) n(e) 150
1036 y(you) d(to) g(learn) g(ho) n(w) g(to) h(use) g(the) f(prop) n(er)
h(installation) f(feature) n(s) i(of) e(your) f(system) i(to) g(\002nd)
f(the) g(softw) o(are) g(already) g(installed.) p Fh
150 1299 a(2.1.9) 99 b(Installation) 24 b(of) h(Requir) n(ed) h
(Softwar) n(e) p Fp 150 1479 a(If) e(you') l(v) m(e) h(fou) n(nd) g
(pre-) n(compiled) e(v) o(ersions) h(of) g(all) i(the) e(softw) o(are) g
(packag) n(ed) h(for) f(use) h(with) g(an) f(installation) g(tool,) h
(you) 150 1579 y(just) 18 b(ha) n(v) o(e) f(to) h(install) g(that) g
(softw) o(are) f(using) g(the) h(tool.) 24 b(Instructio) n(ins) 18
b(for) f(its) i(usage) e(is) i(often) e(fou) n(nd) h(using) f(the) h
(comm) n(and) 150 1679 y(\223man) i(<installation) f(tool) h(name>\224)
f(or) h(by) g(reading) f(you) n(r) i(system') -5 b(s) 21
b(doc) n(umentatio) n(n) g(or) f(the) g(supplier) n(') -5
b(s) 21 b(website.) 150 1803 y(If) c(you') l(v) m(e) h(had) f(to) g(do)
n(wnlo) n(ad) h(source) f(cod) n(e) h(you) f(will) h(\002nd) g(instruc)
n(tions) g(on) f(ho) n(w) g(to) h(comp) n(ile) g(and) f(install) h(the)
g(softw) o(are) 150 1903 y(you') -6 b(v) o(e) 22 b(do) n(wnlo) n(aded) g
(at) i(the) e(softw) o(are) h(de) n(v) m(eloper') -7
b(s) 24 b(website.) 33 b(This) 23 b(requ) n(ires) h(a) f(bit) g(of) f
(kno) n(wle) n(dge) h(and) f(you) g(shou) n(ld) 150 2002
y(only) d(under) n(tak) o(e) i(this) f(if) h(you) e(feel) h(con\002den)
n(t) h(abou) n(t) g(the) g(job) m(.) 150 2127 y(This) g(man) n(ual) g
(will) g(only) e(co) o(v) o(er) g(con\002gu) n(ration) h(of) g(the) g
(softw) o(are) g(needed) f(and) h(compilatio) n(n) h(of) f(PHP) h(to) f
(use) h(the) f(other) 150 2227 y(softw) o(are.) p Fh
150 2489 a(2.1.10) 99 b(Important) 25 b(Notice) p Fp
150 2670 a(Y) -9 b(ou) 31 b(should) g(read) h(all) g(the) g(README,) g
(INST) -8 b(ALL) 32 b(and) f(similar) h(\002les) h(foun) n(d) f(with) g
(the) g(softw) o(are) g(pack) n(ages) g(you) 150 2769
y(do) n(wn) n(load.) h(The) o(y) 22 b(often) g(contain) g(tips) i(on) e
(ho) n(w) h(to) g(con\002gu) n(re,) h(comp) n(ile) g(and) e(install) i
(the) f(softw) o(are) f(on) h(you) n(r) h(system.) 150
2869 y(It) c(will) h(sa) n(v) o(e) g(you) e(a) i(lot) f(of) g(time) g
(and) g(aggra) l(v) n(ation) g(if) g(you) g(follo) n(w) f(instruction) n
(s) i(supplied) f(with) g(the) g(softw) o(are.) 150 2994
y(If) k(prob) n(lems) h(arise) g(dur) n(ing) g(installation) e(of) i
(the) f(softw) o(are,) h(please) f(turn) g(to) g(the) h(supp) n(liers) g
(suppor) n(t) g(forum) n(s,) h(mailing) 150 3093 y(list) c(archi) n(v) m
(es) g(and) e(F) -6 b(A) h(Qs,) 22 b(your) e(que) n(stions) i(will) f
(often) f(be) h(answered) f(there.) 27 b(If) 20 b(the) h(supplier') -7
b(s) 22 b(forum) n(s) g(doesn') m(t) f(seem) 150 3193
y(to) f(help) g(you,) f(you) g(should) h(check) f(the) h(suppo) n(rt) h
(foru) n(ms) g(at) g(our) e(site.) 150 3317 y(Y) -9 b(ou) 20
b(shou) n(ld) h(al) o(w) o(ays) f(do) g(a) h(search) f(of) g(the) g
(foru) n(ms) h(befo) n(re) f(posting) g(an) o(y) f(question) n(s.) p
Fl 150 3622 a(2.2) 119 b(Compile) 31 b(Con\002guration) p
Fh 150 3849 a(2.2.1) 99 b(PHP) p Fp 150 4030 a(Impo) n(rtant) 17
b(:) 24 b(Y) n(OU) 18 b(NEED) f(T) o(O) g(RECOMPILE) g(PHP) -9
b(.) 17 b(No) g(kno) n(wn) f(Linux) g(distros) h(does) g(yet) g(ha) n
(v) o(e) g(all) h(the) f(php) f(features) 150 4130 y(requir) n(ed) k
(by) g(eZ) h(pub) n(lish.) k(This) c(means) f(that) g(you) f(need) h
(to) g(compile) f(the) i(php) e(modu) n(le) i(from) e(source.) 150
4229 y(Y) -9 b(ou) 24 b(may) f(\002nd) h(preco) n(mpiled) g(binar) n
(ies) h(for) f(you) n(r) h(system) f(at) h(the) f(eZ) g(publish) f(web)
h(site,) p Fd 26 w(http://de) n(veloper.) 150 4329 y(ez.no) p
Fp(.) h(T) -7 b(ak) o(e) 20 b(a) g(look) g(at) g(the) h(\223Contrib) l
(utions\224) f(section) g(in) h(the) f(do) n(wn) n(load) g(area.) p
Fn 150 4575 a(2.2.1) n(.1) 82 b(Unpacking) p Fp 150 4755
a(After) 22 b(you) f(ha) n(v) o(e) h(do) n(wn) n(loaded) f(PHP) i(you) f
(need) f(to) h(unpack) f(it) i(some) n(whe) n(re) g(where) e(you) h
(can) g(com) n(pile) h(and) e(con\002gu) n(re) 150 4855
y(the) f(softw) o(are.) 25 b(T) -7 b(o) 20 b(unpa) n(ck) h(run) e(the) h
(comman) n(d:) p Fk 309 5058 a(#) 40 b(tar) g(zxvf) f(php-4.0.x) n
(.tar.gz) p Fp 150 5262 a(Where) 29 b(the) h(x) f(is) i(the) e(v) o
(ersion) f(of) i(php) e(you') -6 b(v) o(e) 29 b(do) n(wnlo) n(aded.) 52
b(Then) 29 b(you) g(need) f(to) i(mo) o(v) m(e) g(into) f(the) h
(directo) n(ry) f(you) 150 5361 y(e) o(xtracted) 19 b(php) g(into:) p
Fk 309 5565 a(#) 40 b(cd) g(php-4.0.) n(x) p 150 5723
V Fp 1892 5823 a(8) p 90 rotate dyy eop
%%Page: 9 10
9 9 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0 @lly
169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(2.2.1) n(.2) 82 b(Con\002guratio) n(n) p Fp 150
513 a(Y) -9 b(ou') m(ll) 25 b(need) d(either) h(an) g(apache) f(modu) n
(le) i(or) f(a) g(comman) n(d) h(line) f(\(CGI\)) g(v) o(ersion) f(of) h
(PHP) h(to) f(use) g(eZ) h(pub) n(lish) g(on) f(you) n(r) 150
613 y(website.) i(W) -7 b(e) 22 b(recom) n(mend) e(you) f(use) i(PHP) g
(as) g(an) f(apach) n(e) h(modu) n(le.) 26 b(Y) -9 b(ou) 20
b(will) h(also) f(need) g(the) g(comman) n(d) g(line) h(v) o(ersio) n
(n) 150 712 y(if) f(you) g(w) o(ant) g(to) g(use) h(the) f(cron) f
(jobs) h(for) g(period) n(ical) h(upd) n(ates) g(of) f(the) g(eZ) h(ne)
n(ws) f(feed) g(mod) n(ule.) 150 837 y(Thus) k(for) f(our) h(reco) n
(mmend) n(ed) h(installation) e(of) h(PHP) h(you) e(need) h(both) f
(the) h(comma) n(nd) g(line) g(and) g(modu) n(le) h(v) o(er) n(sions) g
(of) 150 937 y(PHP) -9 b(.) p Fn 150 1183 a(Common) p
Fp 82 w(Both) 19 b(the) g(comman) n(d) g(line) g(and) f(apache) g(modu)
n(le) i(v) o(er) n(sions) f(need) g(to) g(ha) n(v) o(e) f(the) h(follo)
n(w) n(ing) g(con\002gu) n(rations) 150 1282 y(added) g(to) h(the) h
(con) n(\002guration) e(tool:) p Fn 150 1490 a(\226enable-t) n
(rans-sid) p Fp 42 w(This) j(lets) g(PHP) h(use) f(session) g(id') -5
b(s) 22 b(which) f(don') m(t) h(rely) g(on) f(cook) n(ies.) 31
b(It) 22 b(doe) n(s) h(not) e(disable) h(nor) n(mal) 358
1589 y(coo) n(kie) f(based) e(sessions.) 358 1689 y(\() p
Ff(http://) r(www) l(.php.net/manu) r(al/en) r(/insta) r
(ll.con\002gure) r(.php#insta) r(ll.con\002gu) r(re.enabl) r(e-tran) r
(s-sid) p Fp(\)) p Fn 150 1855 a(\226with-mysql) p Fp
41 w(This) h(tells) h(PHP) g(that) g(the) f(mysql) f(function) n(ality)
i(shou) n(ld) g(be) f(used.) 358 1955 y(\() p Ff(http://) r(www) l
(.php.net/manu) r(al/en) r(/insta) r(ll.con\002gure) r(.php#insta) r
(ll.con\002gu) r(re.with-mysql) p Fp(\)) p Fn 150 2121
a(\226disable-mag) n(ic-quotes) p Fp 41 w(This) k(tells) g(PHP) g(to) g
(disable) f(magic) g(quo) n(tes) h(by) f(def) o(ault.) 34
b(you) 22 b(can) h(also) h(turn) f(this) h(featu) n(re) 358
2220 y(on) d(and) g(of) n(f) g(on) g(a) h(director) n(y) g(by) f
(directory) f(basis) j(in) e(either) h(the) f(\223.htaccess\224) h
(\002les) g(\(if) g(you) f(use) g(them\)) g(or) h(in) g(the) 358
2320 y(setup) e(of) f(the) i(virtua) n(l) g(serv) o(er) f(in) g
(\223httpd) n(.conf) 5 b(\224) n(.) p Fn 150 2486 a(IMOR) m(T) -7
b(ANT) p Fp 42 w(:) 28 b(From) 20 b(v) o(ersion) g(2.1) p
Fe 1269 2456 a(3) p Fp 1323 2486 a(onw) o(ard) n(s) i(magic) f(quotes) g
(must) g(be) g(turned) f(of) n(f) h(for) f(eZ) i(pub) n(lish) g(to) g
(w) o(ork) e(prop) n(-) 358 2586 y(erly) -5 b(.) 358
2685 y(\() p Ff(http://) r(www) l(.php.net/manu) r(al/en) r(/insta) r
(ll.con\002gure) r(.php#insta) r(ll.con\002gu) r(re.enabl) r(e-magic) r
(-quotes) p Fp(\)) p Fn 150 2831 a(\226with-imap) p Fp
40 w(This) 30 b(con\002g) n(ures) f(PHP) h(to) f(include) f(imap) h
(suppo) n(rt.) 52 b(This) 30 b(is) g(used) e(by) h(eZ) g(mail) h(mod) n
(ule.) 52 b(This) 29 b(pa-) 358 2909 y(ramete) n(rs) d(requir) n(e) g
(ssl) g(suppo) n(rt.) 40 b(Imap) 24 b(does) h(also) h(ha) n(v) o(e) e
(bindin) n(gs) i(to) f(k) o(erber) n(os.) 40 b(This) 25
b(caused) g(some) g(linkin) n(g) 358 2988 y(pro) n(blems) g(on) g
(RedHat) h(Linu) n(x) g(7.0) e(and) h(RedHat) g(Linux) f(7.1.) 40
b(Either) 24 b(you) h(ha) n(v) o(e) f(to) i(install) f(the) h(k) o(erb)
n(eros) f(up-) 358 3084 y(dates) p Fe 529 3054 a(4) p
Fp 582 3084 a(released) 20 b(by) g(RedHat) g(or) g(apply) f(type) h
(this) h(comm) n(and) f(befo) n(re) h(you) e(comp) n(ile) i(php) e(:) p
Fk 358 3242 a($) 39 b(export) g(LDFLAGS="-L/) n(usr/kerberos/) n(lib) h
(-lkrb5) f(-lgssapi_) n(krb5) h(-lpam") p Fn 150 3408
a(\226with-o) n(penssl) p Fp 43 w(This) 20 b(will) h(enable) f(ssl) h
(suppo) n(rt) g(in) f(PHP) 150 3615 y(Y) -9 b(ou) 26
b(should) g(also) h(go) g(throu) n(gh) g(the) g(web) f(page:) p
Ff 38 w(htt) r(p://www) l(.php.net) r(/manual) r(/en/i) r(nstall) r
(.con\002gure.php) p Fp 29 w(and) g(mak) o(e) h(sure) f(that) 150
3715 y(there) 20 b(isn') o(t) g(other) f(func) n(tionality) h(you) f(w)
o(ould) h(lik) o(e) g(to) h(ha) n(v) o(e) e(included) n(.) p
Fn 150 3961 a(Command) 26 b(Line) p Fp 83 w(The) f(def) o(ault) g(is) i
(to) f(create) f(a) h(comm) n(and) f(line) h(v) o(ersion) e(of) i(PHP)
-9 b(.) 26 b(Ther) n(efore) f(you) g(don) n(') o(t) h(need) e(to) 150
4061 y(add) c(mor) n(e) h(con\002gu) n(ration) f(optio) n(ns) h(for) e
(this.) p Fn 150 4307 a(A) n(pache) h(Module) p Fp 83
w(T) -7 b(o) 21 b(b) n(uild) e(an) i(apach) n(e) g(mod) n(ule) g(you) e
(need) g(to) i(add:) p Fn 150 4493 a(\226with-a) n(pxs) p
Fp 42 w(This) f(compiles) g(PHP) h(as) g(an) f(apache) f(modu) n(le.) p
Ff 358 4572 a(\(http:/) r(/www) l(.php.net/ma) r(nual/e) r(n/inst) r
(all.con\002g) r(ure.php#in) r(stall.co) r(n\002gure.with-) r(apxs\)) p
Fn 150 4818 a(Other) j(W) -5 b(eb) 23 b(Ser) o(v) o(ers) p
Fp 82 w(W) -7 b(e) 24 b(ha) n(v) o(en) n(') o(t) e(tested) h(our) e
(softw) o(are) h(with) h(other) e(web) h(serv) o(ers) g(than) g(apache)
n(.) 32 b(If) 22 b(you) g(need) f(to) 150 4918 y(try) 16
b(out) g(other) f(web) h(serv) o(er) n(s,) i(read) e(this) g(docum) n
(ent) p Ff 16 w(http) r(://www) l(.php.net) r(/manual) r(/en/i) r
(nstall) r(.con\002gure.php#i) r(nstall) r(.con\002gure.serv) q(ers) p
Fp 150 5017 a(to) k(learn) g(ho) n(w) g(you) f(con\002gu) n(re) h(for) g
(the) g(web) g(serv) o(er) f(you) h(will) h(be) f(using.) p
150 5071 1410 4 v Fg 240 5126 a(3) p Ff 270 5149 a(eZ) c(publi) r(sh) g
(v) o(ersi) r(ons) g(prior) i(to) f(2.1) g(requi) r(red) g(magic) h
(quotes) g(to) f(be) g(ena) r(bled) p Fg 240 5207 a(4) p
Ff 270 5230 a(Install) r(ing) g(the) h(k) o(erbe) r(ros) e(upda) r(tes)
h(and) g(the) h(othe) r(r) e(updat) r(es) h(for) g(these) h(operat) r
(ing) f(systems) g(is) g(highl) r(y) g(recommende) r(d) p
150 5723 3525 4 v Fp 1892 5823 a(9) p 90 rotate dyy eop
%%Page: 10 11
10 10 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(Cr) o(eat) n(ing) 27 b(the) f(Con\002guratio) n(n) p
Fp 83 w(No) n(w) g(you) g(just) g(ha) n(v) o(e) g(to) g(run) f(the) i
(\223./con) n(\002gure\224) e(progr) n(am) h(with) h(the) f(appr) n
(opriate) 150 432 y(con\002gu) n(ration) 19 b(directi) n(v) m(es) h
(which) f(we) g(discussed) g(in) h(the) f(preceed) n(ing) g(sections,) g
(for) g(an) g(apache) f(module) g(you') l(d) g(do) h(the) 150
532 y(follo) n(win) n(g:) p Fk 270 734 a(#) 39 b(./configure) f
(--enable-trans) n(-sid) i(--with-m) n(ysql) g(--enable) n(-trans-sid) f
(--disable) n(-magic-quotes) 150 813 y(--with-imap) f(--with-opens) n
(sl) 150 892 y(--with-apxs) p Fp 150 1095 a(Remember) 19
b(that) h(to) h(comp) n(ile) g(a) g(script/cg) n(i) g(v) o(ersion) e
(you') -6 b(d) 21 b(need) e(to) h(change) f(that) i(line) f(to:) p
Fk 309 1297 a(#) 40 b(./configure) e(--enable-tran) n(s-sid) h
(--with-mysql) g(--enabl) n(e-trans-sid) g(--disabl) n(e-magic-quotes)
150 1376 y(--with-imap) f(--with-opens) n(sl) p Fn 150
1700 a(2.2.1) n(.3) 82 b(Compilation) p Fp 150 1879 a(T) -7
b(o) 20 b(compile) g(you) f(need) g(to) i(run) e(the) h(comman) n(d) h
(\223mak) m(e\224:) p Fk 309 2082 a(#) 40 b(make) p Fn
150 2326 a(2.2.1) n(.4) 82 b(Installation) p Fp 150 2506
a(T) -7 b(o) 20 b(install) h(your) e(ne) n(w) h(PHP) h(packag) n(e) g
(you) e(need) h(to) g(run) f(the) i(follo) l(wing) f(comma) n(nd:) p
Fk 309 2709 a(#) 40 b(make) f(install) p Fn 150 2953
a(2.2.1) n(.5) 82 b(Compiling) 21 b(the) f(php) h(module) g(on) g
(RedHat) e(7.x,) g(step) i(by) f(step) p Fp 150 3133
a(First) h(do) n(wn) n(load) f(the) g(source) g(from) f(www) -5
b(.ph) n(p.net.) 24 b(Y) -9 b(ou) 20 b(should) f(get) h(a) h(\002le) g
(called) f(somethin) n(g) g(lik) o(e) 150 3257 y(php-) n(4.0.6) n(.tar)
-5 b(.gz) 150 3480 y(First,) 21 b(unp) n(ack) f(the) g(tarball:) p
Fk 150 3604 a($) 40 b(tar) f(-xzf) g(php-4.0.6.tar) n(.gz) p
Fp 150 3827 a(No) n(w) -5 b(,) 19 b(enter) h(the) g(source) g(directo) n
(ry) p Fk 150 3951 a($) 40 b(cd) f(php-4.0.6) p Fp 150
4174 a(Apply) 19 b(the) i(k) o(erb) n(eros) f(w) o(orkaro) n(und) f(if)
i(necessary) e(\(se) i(chapter) e(2.2.) n(1.2) h(for) g(mor) n(e) h
(info\)) n(:) p Fk 150 4298 a($) 40 b(export) f(LDFLAGS=) n
("-L/usr/kerber) n(os/lib) g(-lkrb5) g(-lgssapi_krb) n(5) h(-lpam") p
Fp 150 4521 a(Run) 20 b(the) g(con\002gu) n(re) h(script:) p
Fk 150 4624 a($) 40 b(./configu) n(re) g(--with-apx) n(s=/usr/sbin/a) n
(pxs) g(--enable-f) n(tp) g(--enable-t) n(rans-sid) f(--with-conf) n
(ig-file-) 150 4703 y(path=/etc/h) n(ttpd) h(--with-m) n(ysql=/usr) f
(--with-pgs) n(ql=/usr) g(--enable-inl) n(ine-optimizat) n(ion) h
(--with-ttf) 150 4782 y(--with-gd) f(--enabl) n(e-gd-native-tt) n(f) h
(--with-imap) e(--includedir) n(=/usr) i(--with-o) n(penssl=/usr) f
(--with-) 150 4861 y(zlib-dir=/u) n(sr) h(--with-ope) n(nssl=shared,/) n
(usr) p Fp 150 5063 a(Compile) 20 b(the) g(modu) n(le:) p
Fk 150 5187 a($) 40 b(make) p Fp 150 5410 a(Install) 20
b(the) h(mod) n(ule,) f(either) g(autom) n(aticly) h(or) f(manu) n
(ally) -5 b(.) 150 5510 y(Manually) 19 b(:) p Fk 150
5613 a($) 40 b(su) p 150 5723 V Fp 1871 5823 a(10) p
90 rotate dyy eop
%%Page: 11 12
11 11 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 150
333 a(#) 40 b(cp) f(.libs/libphp) n(.so) h(/usr/lib/a) n(pache) p
Fp 150 455 a(Automa) n(ticly:) p Fk 150 556 a($) g(su) 150
678 y(#) g(make) f(install) p Fp 150 900 a(Restart) 21
b(apache) n(:) p Fk 150 1022 a(#) 40 b(/etc/rc.d) n(/init.d/httpd) e
(restart) p Fp 150 1244 a(V) -9 b(erify) 19 b(that) i(e) n(v) o(e) n
(rything) e(went) h(OK.) 150 1344 y(V) -9 b(erify) 19
b(that) i(apach) n(e) g(w) o(as) g(able) f(to) g(start:) p
Fk 150 1466 a(#) 40 b(ps) f(ax) h(|) g(grep) f(httpd) p
Fp 150 1688 a(Check) 20 b(the) g(apache) f(log) p Fk
150 1789 a(#) 40 b(tail) f(-f) h(50) f(/var/log/ht) n(tpd/error_log) p
Fp 150 1990 a(IMPOR) -5 b(T) d(ANT) 150 2113 y(When) 23
b(compilin) n(g) h(php) n(,) h(please) e(read) g(chapter) f(2.6.) 34
b(Especially) -5 b(,) 23 b(tak) o(e) h(note) f(of) g(chapte) n(r) h
(2.6.2) n(.4.) 34 b(It) 24 b(might) f(sa) n(v) o(e) g(you) 150
2212 y(for) d(hou) n(rs) h(with) f(deb) n(ug) n(ging) p
Fl 150 2513 a(2.3) 119 b(A) m(pache) 31 b(Con\002guration) p
Fp 150 2721 a(If) 25 b(you) g(don) n(') o(t) g(w) o(ant) h(to) f(chang)
n(e) h(the) f(Apache) g(con\002g) n(uration,) h(go) e(to) i(chapter) e
(2.) 40 b(Please) 26 b(tak) o(e) g(notice) f(of) g(the) g(re) n(write)
150 2821 y(rules.) g(The) o(y) 19 b(ha) n(v) o(e) h(been) f(chang) n
(ed) h(since) h(the) f(pre) n(vio) n(usly) g(v) o(ersion) n(s.) p
Fh 150 3079 a(2.3.1) 99 b(Dual) 25 b(V) l(irtual) g(Host) p
Fn 150 3257 a(2.3.1) n(.1) 82 b(Con\002guring) 20 b(Thr) o(ough) g
(httpd.conf) p Fp 150 3435 a(This) 25 b(set) h(up) f(is) h(based) e(on)
h(ha) n(ving) f(tw) o(o) h(dif) n(fer) n(ent) g(virtual) g(hosts) g
(for) f(your) g(administratio) n(n) i(back) n(-end) e(and) h(the) g
(main) 150 3535 y(site.) 50 b(The) 28 b(main) f(site) j(w) o(ould) d
(typically) g(be) h(kno) n(wn) f(as) i(\223www) -5 b(.yo) n(ursite.com)
n(\224) 29 b(and) f(the) g(admin) n(istration) g(w) o(ould) g(be) 150
3634 y(\223admin) n(.your) n(site.com\224;) 20 b(the) g(names) g(are) g
(up) g(to) g(you) n(,) h(theore) n(tically) g(you) e(could) g(ha) n(v) o
(e) g(dif) n(feren) n(t) i(names,) e(for) h(e) o(xamp) n(le) 150
3734 y(\223mysite.yo) n(ursite.com) n(\224) h(and) e
(\223administration) n(.mysite.co) n(m\224.) 150 3856
y(The) 28 b(virtual) g(host) g(is) i(con\002g) n(ured) e(throu) n(gh) g
(the) h(\223httpd) n(.conf) s(\224) g(\002le) g(which) f(is) h(the) g
(main) f(con\002g) n(uration) g(of) g(Apach) n(e.) 150
3956 y(F) o(ollo) n(wing) g(is) i(an) f(e) o(xam) n(ple) g(of) g(such) g
(a) g(host,) i(modify) d(it) i(to) f(re\003ect) g(you) n(r) h(o) n(wn) e
(installation) h(and) f(prefere) n(nces,) k(b) n(ut) 150
4055 y(befor) n(e) e(that) g(be) f(sure) g(to) h(add) f(the) g
(\223NameV) -5 b(irtualSer) n(v) o(er\224) 29 b(directi) n(v) m(e) h
(to) g(the) f(con\002gu) n(ration) g(\002le.) 53 b(The) 29
b(directi) n(v) o(e) g(is) 150 4155 y(\223NameV) -5 b(irtu) n(alServ) o
(er) 20 b(ip-add) n(ress\224) i(where) e(the) h(ip) g(add) n(ress) h
(is) g(the) e(address) h(where) f(the) h(serv) o(er) f(will) h(recei) n
(v) o(e) f(requ) n(ests) 150 4255 y(\(http://http) n(d.apach) n(e.or) o
(g) n(/docs/mo) n(d/core.h) n(tml#nam) n(e) n(virtualh) n(ost\).) 150
4377 y(Y) -9 b(ou) 27 b(should) f(consider) h(using) g(the) g(utility) g
(which) g(we) h(ha) n(v) o(e) f(online) g(for) f(creating) h(the) g
(con\002gu) n(ration.) 46 b(The) 28 b(URL) g(is) 150
4476 y(http://de) n(v) m(eloper) -7 b(.ez.no/vir) n(tualhost) 19
b(it) h(will) g(gener) n(ate) g(a) f(setup) g(with) h(the) f(latest) h
(needed) e(infor) n(mation.) 24 b(The) 19 b(presente) n(d) 150
4576 y(con\002gu) n(ration) h(here) n(in) h(migh) n(t) g(be) f
(slightly) g(outdated) n(,) h(so) f(we) h(recom) n(mend) f(the) g
(onlin) n(e) h(tool.) p Fn 150 4801 a(User) g(Site) p
Fc 222 w(#) 35 b(User) f(site) 289 4890 y(<VirtualHost) g(your.ip.ad) n
(dr.no>) 359 4979 y(<Directory) g(/your/docr) n(oot>) 429
5068 y(Options) g(FollowSymLi) n(nks) 429 5157 y(AllowOverrid) n(e) h
(None) 359 5246 y(</Directory>) 359 5335 y(RewriteEngine) e(On) 359
5546 y(RewriteRule) h(.*/ezmedi) n(acatalogue/catal) n(ogue/\(.*\)$) g
(/your/docro) n(ot/ezmediacatalo) n(gue/catalogue/$) n(1) h
([T="applicati) n(on/oct-) 150 5613 y(stream",L]) p 150
5723 V Fp 1871 5823 a(11) p 90 rotate dyy eop
%%Page: 12 13
12 12 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fc 359
333 a(RewriteRule) 34 b(^/stats/s) n(tore/\(.*\).gif$) 68
b(/your/docroot/e) n(zstats/user/sto) n(restats.php) 34
b([L]) 359 424 y(RewriteRule) g(^/fileman) n(ager/filedownloa) n
(d/\([^/]+\)/\(.*\)$) 68 b(/your/docroot) n(/ezfilemanager/) n
(files/$1) 34 b([T="applicatio) n(n/oct-) 150 490 y(stream",L]) 359
581 y(RewriteRule) g(^/xmlrpc.) n(*$) h(/your/docroot) n
(/index_xmlrpc.p) n(hp) g([L]) 359 672 y(RewriteRule) f(!\\.\(gif|c) n
(ss|jpg|png|jar\)$) f(/your/docroot/) n(index.php) 359
763 y(ServerAdmin) h(your.e-ma) n(il@address) 359 854
y(DocumentRoot) g(/your/ap) n(ache/documentroo) n(t/publish_dist) 359
945 y(ServerName) g(your.domai) n(n.com) 289 1036 y(</VirtualHost>) p
Fn 150 1261 a(Admin) 21 b(Site) p Fk 163 w(#) 39 b(Admin) h(site) 230
1364 y(<VirtualH) n(ost) g(your.ip.a) n(ddr.no>) p Fc
309 1455 a(<Directory) 34 b(/your/docroo) n(t>) 429 1546
y(Options) g(FollowSymLi) n(nks) 429 1637 y(AllowOverrid) n(e) h(None)
309 1728 y(</Directory>) 309 1819 y(RewriteEngine) f(On) 289
1910 y(RewriteRule) g(.*/ezmediac) n(atalogue/catalog) n(ue/\(.*\)$) g
(/your/docroot) n(/ezmediacatalogu) n(e/catalogue/$1) f
([T="application) n(/oct-) 150 1976 y(stream",L]) 309
2067 y(RewriteRule) h(!\\.\(gif|css) n(|jpg|png|jar\)) g(/your/doc) n
(root/index_admi) n(n.php) p Fk 309 2171 a(ServerAdmin) 39
b(your_mai) n(l@domain.no) 309 2274 y(DocumentRoot) f(/your/apache/d) n
(ocumentroot/p) n(ublish_dist) 309 2378 y(ServerName) h(admin.you) n
(rdomain.org) 230 2481 y(</Virtual) n(Host>) p Fp 150
2684 a(The) 18 b(forma) n(t) i(of) e(the) g(\223httpd.co) n(nf) 5
b(\224) 18 b(\002le) h(is) g(co) o(v) o(er) n(ed) g(at) g(http://http) n
(d.apach) n(e.or) o(g) n(/docs/) f(for) g(a) h(complete) f(und) n
(erstandin) n(g) 150 2784 y(of) i(the) g(abo) o(v) m(e) h(info) n
(rmation) e(you') o(ll) h(need) f(to) i(read) e(that) h(docum) n
(entation.) 150 2908 y(The) g(directo) n(ry) g(\223/your) n(/docroo) n
(t/\224) h(is) g(the) f(director) n(y) h(where) e(you) h(e) o(xtr) n
(acted) g(eZ) h(pub) n(lish.) p Fn 150 3153 a(Err) o(or) c(Checking) p
Fp 83 w(Y) -9 b(ou) 17 b(can) h(check) e(that) i(e) n(v) o(ery) n
(thing) f(is) i(corre) n(ct) g(with) f(you) n(r) g(re) n(write) f
(rules) h(by) f(runn) n(ing) h(\223apach) n(e) g(-s\224,) 150
3253 y(which) 23 b(will) i(check) e(for) g(virtua) n(l) i(hosts.) 36
b(Ther) n(e) 24 b(should) f(also) h(be) g(an) g(erro) n(r) g(log) g
(\(con) n(sult) g(the) g(apache) f(docu) n(mentation) n(\)) 150
3353 y(which) d(you) f(can) h(read) g(to) g(check) f(for) h(error) n
(s.) p Fn 150 3598 a(Explanation) j(of) h(the) g(Rewrite) g(Rules) p
Fp 83 w(A) g(re) n(write) g(rule) f(contains) h(three) f(ar) o(gu) n
(ments.) 36 b(The) 24 b(third) f(ar) o(g) n(ument) g(is) i(op-) 150
3698 y(tional.) j(The) 20 b(\002rst) i(ar) o(gu) n(ment) f(describes) g
(a) g(\(re) o(g) g(e) o(xp) p Fe 1686 3667 a(5) p Fp
1719 3698 a(\)) h(pattern) e(which) h(is) h(applied) e(to) h(the) h
(URI.) f(If) g(the) g(URI) h(match) f(the) 150 3797 y(re) o(gu) n(lar) h
(e) o(xpr) n(ession,) g(the) g(URI) g(is) g(substituted) f(with) h(the)
g(second) f(ar) o(g) n(ument) g(.) 29 b(A) 23 b(last) f(ar) o(gu) n
(ment) f(can) h(be) f(used) h(to) f(gi) n(v) o(e) 150
3897 y(mod_) n(re) n(write) i(special) h(\003ags) f(so) h(that) g(it')
-5 b(s) 24 b(beha) n(vio) n(ur) f(will) i(dif) n(f) n(er) f(from) e
(the) i(def) o(au) n(lt.) 36 b(The) 23 b(syntax) f(for) h(a) h(re) n
(write) f(rule) 150 3996 y(can) d(be) g(written) g(in) g(this) h
(genera) n(l) g(form:) p Fk 349 4121 a(RewriteRule) 38
b(Pattern) h(Substitution) f([FLAGS]) p Fp 150 4324 a(The) 20
b(re) n(write) g(rules) g(for) f(eZ) i(pub) n(lish) g(do) f(the) g
(follo) n(win) n(g:) p Fk 150 4481 a(RewriteRule) 38
b(.*/ezmediaca) n(talogue/catal) n(ogue/\(.*\)$) h(/your/doc) n
(root/ezmediaca) n(talogue/catal) n(ogue/$1) 150 4560
y([T="applica) n(tion/oct-stre) n(am",L]) p Fp 150 4685
a(This) 30 b(re) n(write) g(rule) g(states) i(that) e(e) n(v) o(ery) f
(URLs) i(containin) n(g) g(the) f(string) g(\223) p Fk(/ezmedia) n
(catalogue/cata) n(logue/) p Fp(\224) g(shall) 150 4784
y(be) d(serv) o(ed) f(from) g(\223) p Fk(/your/docro) n(ot/ezmediacat) n
(alogue/catalo) n(gue/) p Fp(\224.) 46 b(The) 27 b(\223) p
Fk(.*) p Fp(\224) g(means) g(zero) f(or) h(more) f(char) n(-) 150
4884 y(acters) h(of) g(an) o(y) f(type.) 45 b(When) 27
b(this) h(is) g(written) f(in) g(paren) n(thesis) h(lik) o(e) f(at) h
(the) f(end) f(of) h(the) g(ar) o(gu) n(ment,) h(these) g(char) n
(acters) 150 4983 y(in) d(inserted) g(in) g(the) h(v) n(ar) n(iable) g
($1.) 39 b(The) 25 b(result) g(of) g(this) h(is) g(that) f(the) h
(\002lename) e(is) i(inserted) f(into) g(the) g(v) n(ariable) f($1.) 40
b(The) 150 5083 y(trailing) 31 b($) g(in) g(the) g(pattern) g(ar) o(g) n
(ument) g(is) h(a) f(special) h(meanin) n(g) f(in) h(a) f(re) o(gular) f
(e) o(xpr) n(ession.) 58 b(It) 32 b(is) g(the) f(a) h(symbo) n(l) g
(for) 150 5183 y(the) 25 b(end) g(of) g(the) g(line.) 41
b(In) 25 b(the) g(substitution) g(ar) o(g) n(ument,) g(the) h(conten) n
(t) g(of) f(v) n(ariab) n(le) h($1) f(is) h(then) f(append) n(ed) g(to)
h(the) f(path) 150 5282 y(\223) p Fk(/your/docr) n(oot/ezmediaca) n
(talogue/catal) n(ogue/) p Fp(\224) 20 b(so) h(that) f(the) g(correct) g
(\002le) g(is) i(serv) o(ed) n(.) 150 5382 y(An) k(result) f(of) g
(this) h(re) n(write) f(rule) h(is) g(that) g(a) g(\002le) g(in) g(the)
f(mediacatalo) n(g) h(will) g(be) g(serv) o(e) n(d) g(indepe) n(ndet) f
(if) h(which) f(user) h(is) 150 5482 y(logge) n(t) 20
b(on.) k(Permissions) 19 b(on) f(the) h(media) f(\002le) h(will) h(not)
e(check) o(ed) g(if) h(the) g(user) f(kno) n(ws) g(the) h(\002lename.)
24 b(This) 19 b(will) g(be) g(\002x) o(ed) p 150 5534
1410 4 v Fg 240 5589 a(5) p Ff 270 5613 a(F) o(or) d(an) i(introdu) r
(ction) g(to) f(re) o(gul) r(ar) g(e) o(xpre) r(ssions,) f(tak) o(e) j
(a) e(look) h(at) f(http:) r(//ze) r(z.or) o(g/art) r(icle) r(/arti) r
(cle) n(v) r(ie) n(w/1) r(1/) p 150 5723 3525 4 v Fp
1871 5823 a(12) p 90 rotate dyy eop
%%Page: 13 14
13 13 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(in) 20 b(a) h(later) f(v) o(ersion) f(of) h(eZ) g(publish.) p
Fc 359 518 a(RewriteRule) 34 b(^/stats/s) n(tore/\(.*\).gif$) 68
b(/your/docroot/e) n(zstats/user/sto) n(restats.php) 34
b([L]) p Fp 150 703 a(This) 23 b(says) h(that) f(e) n(v) o(ery) n
(thing) g(serv) o(ed) f(from) g(\223/stats/store/\224) i(should) e(be) h
(serv) o(ed) f(by) h(the) g(storestats.php) f(script.) 34
b(This) 24 b(is) 150 802 y(used) c(by) g(the) g(statistical) h(modu) n
(le) p Fc 359 887 a(RewriteRule) 34 b(^/fileman) n(ager/filedownloa) n
(d/\([^/]+\)/\(.*\)$) 68 b(/your/docroot) n(/ezfilemanager/) n
(files/$1) 34 b([T="applicatio) n(n/oct-) 150 954 y(stream",L]) p
Fp 150 1139 a(This) c(says) g(that) g(e) n(v) o(ery) n(thing) g(serv) o
(ed) f(fro) n(m) h(\223/\002lemanager) n(/\002ledo) n(wnlo) n(ad/\224) g
(should) f(be) h(redire) n(cted) g(to) g(fetch) g(info) n(r) n(-) 150
1238 y(mation) c(from) h(\223pub) n(lish_dist/ez\002leman) n
(ager/\002les\224.) 46 b(In) 27 b(other) g(w) o(ords,) h(when) f(peop) n
(le) h(do) n(wnlo) n(ads) g(a) f(\002le) h(from) f(the) 150
1338 y(\002lemanag) n(er) m(,) 20 b(the) g(\002le) h(is) g(serv) o(ed) f
(fro) n(m) h(the) f(directo) n(ry) g(speci\002ed) g(in) h(the) f
(second) f(part.) 150 1457 y(The) j(\223\210\224) g(just) h(after) f
(\223Re) n(writeRule\224) g(says) h(that) f(e) n(v) o(erty) n(thing) g
(which) g(starts) h(with) f(this,) h(in) g(other) e(w) o(ords) h(it) h
(is) g(a) g(start) g(of) 150 1556 y(line) f(mark) m(er) -5
b(.) 30 b(When) 21 b(w) o(orking) f(with) i(an) g(URL) g(that) g(is) g
(from) f(the) g(root) g(of) g(your) g(site,) h(ie.) 30
b(the) 21 b(part) h(fro) n(m) g(the) g(\002rst) g(slash) 150
1656 y(after) e(you) n(r) h(dom) n(ain) g(name) n(.) 150
1774 y(The) f(\223$\224) g(sign) g(is) h(used) f(to) g(mark) g(the) g
(end) g(of) g(line,) g(in) g(orde) n(r) h(to) f(rememb) n(er) h(the) f
(full) g(line.) 150 1893 y(The) f(part) p Fc 20 w(\223[T="appli) n
(cation/oct-stre) n(am",L]\224) p Fp 20 w(means) g(that) h(e) n(v) o
(ery) n(thing) f(which) g(is) i(matched) d(shall) j(be) e(of) h(the) f
(speci\002c) 150 1992 y(mime) k(type) g(\(\223app) n(lication/oct-) n
(stream\224,) h(ie.) 34 b(binary) 22 b(do) n(wnlo) n(ad\).) 34
b(The) 23 b(\223,L) -8 b(\224) 23 b(part) g(means) g(stop) g(the) g(re)
n(write) g(proce) n(ss) 150 2092 y(and) d(don) n(') o(t) g(apply) f(an)
o(y) h(more) f(re) n(write) h(rules) g(if) h(this) f(re) n(write) g
(rule) g(matches) g(.) p Fc 359 2277 a(RewriteRule) 34
b(^/xmlrpc.) n(*$) h(/your/docroot) n(/index_xmlrpc.p) n(hp) g([L]) p
Fp 150 2395 a(This) 17 b(re) n(write) g(rule) g(is) h(required) e(if) h
(you) g(w) o(ant) g(to) h(conn) n(ect) g(to) f(your) f(eZ) i(pub) n
(lish) g(site) g(with) f(eZ) h(pub) n(lish) g(Desktop) f(Edition) n(.)
150 2495 y(eZ) 27 b(pub) n(lish) h(Desktop) e(Edition) g(is) h(a) h
(GUI) e(client) h(for) f(Linux) g(and) g(W) m(indo) n(ws.) 44
b(W) m(ith) 27 b(this) h(applica) n(tion) f(you) f(can) g(edit) 150
2595 y(articles) 21 b(in) f(a) g(WYSIWYG) i(en) m(v) n(ironme) n(nt,) e
(no) g(need) g(to) g(rememb) n(er) g(the) h(dif) n(f) n(erent) f(tags.)
150 2713 y(The) g(last) h(re) n(write) f(rule) p Fc 359
2799 a(RewriteRule) 34 b(!\\.\(gif|c) n(ss|jpg|png|jar\)$) f
(/your/docroot/) n(index.php) p Fp 150 2983 a(is) 24
b(found) e(in) i(both) e(sites) j(\(admin) d(and) h(user\).) 35
b(This) 23 b(means) g(that) h(e) n(v) o(ery) e(\002le,) j(e) o(xcep) n
(t) f(gif,) g(css,) h(jpg) f(and) e(png) h(\(and) g(\002les) 150
3083 y(matched) d(against) h(the) g(pre) n(vio) n(us) h(rule) f(when) g
(in) h(the) f(user) g(site\)) h(should) e(be) i(redire) n(cted) g(to) f
(the) h(\002le) g(in) f(the) h(second) e(part,) 150 3183
y(ie.) 36 b(the) 24 b(inde) o(x.) n(php) f(or) h(inde) o(x) n(_admin) n
(.php) f(\002le.) 36 b(The) 24 b(reason) f(for) g(this) i(is) f(that) g
(we) h(don) n(') o(t) f(w) o(ant) g(an) o(y) n(one) g(trying) f(to) h
(get) 150 3282 y(direct) c(access) h(to) f(an) o(yth) n(ing) g(which) g
(migh) n(t) h(be) f(sensiti) n(v) o(e,) g(or) g(re) n(v) o(ea) n(ling) g
(about) g(the) g(site') -5 b(s) 21 b(operatio) n(n.) 150
3401 y(If) g(you) g(comp) n(iled) g(PHP) i(with) e(magic) g(quo) n
(tes;) i(or) e(other) g(softw) o(are) g(relies) g(on) g(PHP) h(using) f
(magic) g(quo) n(tes) i(you) d(can) h(add) 150 3500 y(the) f(follo) n
(win) n(g) h(line) f(into) g(each) g(virtual) f(host) i(section:) p
Fk 309 3698 a(php_flag) 39 b(magic_quote) n(s_gpc) h(off) 309
3796 y(php_flag) f(magic_quote) n(s_runtime) g(off) p
Fn 150 4109 a(2.3.1) n(.2) 82 b(Con\002guring) 20 b(php.ini) p
Fp 150 4284 a(Magic) g(quo) n(tes) h(may) f(also) h(be) f(turn) n(ed) h
(of) f(in) g(php) n(.) 26 b(This) 20 b(will) h(disable) f(magic) g(quo)
n(tes:) p Fc 150 4369 a(magic_quotes) n(_gpc) 35 b(=) g(Off) 150
4454 y(magic_quotes) n(_runtime=) f(Off) p Fn 150 4689
a(2.3.1) n(.3) 82 b(Con\002guring) 20 b(Thr) o(ough) g(.htaccess) p
Fp 150 4863 a(At) 25 b(present,) h(con) n(\002guring) e(the) h(re) n
(write) f(rules) h(in) g(.htaccess) g(\002les) g(is) h(not) f(supp) n
(orted.) 39 b(Ho) n(we) n(v) m(er) m(,) 25 b(you) f(may) h(switch) g
(of) 150 4963 y(magic) 20 b(quo) n(tes) h(in) g(an) f(.htacce) n(ss) i
(\002le.) p Fb 150 5081 a(Note:) j(Y) -8 b(ou) 21 b(must) f(set) h(up) f
(apa) n(c) o(he) g(to) g(accept) g(this.) p Fn 150 5316
a(User) j(Site) p Fp 83 w(In) f(your) f(docum) n(ent) i(roo) n(t) h
(\(/path) n(/to/inde) o(x) n(.php) n(/\)) f(create) f(a) h(\002le) h
(called) e(".htaccess") g(contain) n(ing) h(the) f(fol-) 150
5415 y(lo) n(wing) d(te) o(xt:) p Fk 309 5613 a(php_flag) 39
b(magic_quote) n(s_gpc) h(off) p 150 5723 V Fp 1871 5823
a(13) p 90 rotate dyy eop
%%Page: 14 15
14 14 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fl 150
333 a(2.4) 119 b(eZ) 30 b(publi) r(sh) f(Installation) p
Fh 150 560 a(2.4.1) 99 b(Pr) n(ogram) 25 b(Files) p Fp
150 740 a(The) 18 b(ne) o(x) n(t) h(step) g(is) g(to) f(install) h(the)
f(eZ) g(pub) n(lish) h(packag) n(e) g(in) f(you) n(r) h(docu) n(ment) f
(root) f(directory) -7 b(.) 24 b(First) 19 b(you) f(need) f(to) h
(unpac) n(k) 150 840 y(the) i(softw) o(are) g(in) g(a) h(tempo) n(rary)
f(directo) n(ry:) p Fk 309 1043 a(#) 40 b(cd) g(/tmp) 309
1147 y(#) g(tar) g(zxvf) f(/path/to/) n(ezpublish-2.0) n(.tar.gz) p
Fp 150 1350 a(The) 20 b(ne) o(x) n(t) h(step) g(is) g(to) f(mo) o(v) o
(e) f(the) h(\002les) h(to) g(you) n(r) g(docu) n(ment) f(root:) p
Fk 309 1554 a(#) 40 b(mv) g(/tmp/pub) n(lish_dist) f(/your/apac) n
(he/documentroo) n(t) p Fp 150 1757 a(When) 22 b(all) h(this) g(is) g
(don) n(e) g(you) e(need) h(to) g(tell) h(eZ) g(pub) n(lish) g(a) g
(little) g(abou) n(t) g(the) f(site) i(you) n(') l(re) e(runn) n(ing.)
31 b(Y) -9 b(ou') m(ll) 23 b(need) f(to) g(edit) 150
1857 y(the) e(\223site.ini\224) g(\002le) h(which) f(you) f(will) i
(\002nd) f(in) g(the) h(docu) n(ment) f(root:) p Fk 309
2060 a(#) 40 b(cd) g(/your/ap) n(ache/documentr) n(oot) 309
2164 y(#) g(vi) g(site.ini) p Fp 150 2368 a(Instead) 24
b(of) h(vi) g(you) f(can) g(use) i(you) n(r) f(prefer) n(red) g(te) o
(xt) f(editor) -5 b(.) 39 b(Y) -9 b(ou') o(ll) 24 b(need) h(to) g(add) f
(infor) n(mation) g(about) g(the) h(usernam) n(e,) 150
2467 y(hostnam) n(e) j(and) f(passw) o(ord) g(of) g(your) f(database.)
47 b(More) 27 b(info) n(rmation) g(on) g(what) g(you) g(can) g(do) g
(with) h(\223site.ini\224) f(can) h(be) 150 2567 y(foun) n(d) 20
b(in) h(the) f(\223eZ) g(publish) f(Customisation) h(Guide\224.) 150
2691 y(The) g(ne) o(x) n(t) h(importan) n(t) g(step) f(is) i(to) e(run)
f(the) i(script) f(\223mod) n(\002x.sh\224.) p Fk 309
2895 a(#) 40 b(./modfix.sh) p Fh 150 3236 a(2.4.2) 99
b(Database) p Fp 150 3417 a(Some) 31 b(people) f(might) h(prefer) f(to)
i(use) g(php) n(MyAdmin) e(\(http://www) -5 b(.) n(phpwizar) n
(d.net/pr) n(ojects/phpM) n(yAdmin) n(/\)) 32 b(for) 150
3516 y(most) 20 b(of) g(this) h(part;) f(we) g(can) g(not) g(help) g
(you) f(with) i(installation) e(of) h(that) h(pro) n(gram,) e(thoug) n
(h.) p Fn 150 3762 a(2.4.2) n(.1) 82 b(First) 21 b(time) f
(installation) g(\(MySQL\)) p Fp 150 3943 a(No) n(w) f(you) g(need) f
(to) i(create) f(a) h(databa) n(se) g(in) g(MySQL,) f(the) g(def) o
(ault) g(name) g(we) g(use) h(is) g(publish,) e(b) n(ut) i(you) e(can) h
(change) f(that) 150 4042 y(to) i(whate) n(v) o(er) f(pleases) i(you) n
(.) p Fk 309 4246 a(#) 40 b(mysqladmin) e(create) h(publish) p
Fp 150 4449 a(Add) 23 b(a) h(publish) f(user) g(in) h(MySQL.) f(T) -7
b(o) 24 b(add) f(a) h(user) f(you) g(can) h(use) f(the) h(MySQL) f
(client) h(to) g(log) f(on) g(to) h(mysql) f(and) g(then) 150
4549 y(create) d(the) g(user:) p Fk 309 4752 a(#) 40
b(mysql) f(>) h(grant) f(all) g(on) h(publish.*) e(to) i(publish@loc) n
(alhost) 309 4877 y(identified) f(by) g("secret";) p
Fp 150 5101 a(where) 22 b(secret) h(is) g(your) f(passw) o(ord.) 31
b(Then) 22 b(you) g(need) g(to) h(add) f(the) h(def) o(au) n(lt) g(eZ) g
(publish) f(data) g(into) h(you) n(r) g(ne) n(wly) f(created) 150
5201 y(database:) p Fk 309 5404 a(#) 40 b(mysql) f(-uroot) g(-p) h
(publish) f(<) g(sql/publish_) n(mysql.sql) p 150 5723
V Fp 1871 5823 a(14) p 90 rotate dyy eop
%%Page: 15 16
15 15 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(Adding) 22 b(Pr) o(e-De\002ned) f(Data) p Fp 82
w(If) h(you) e(w) o(ant) i(to) g(add) f(the) h(pre-d) n(e\002ned) f
(data) h(of) g(the) f(distrib) n(ution) g(you) g(shou) n(ldn') o(t) g
(add) 150 432 y(an) o(y) e(data) h(manually) f(to) i(the) f(site) h
(befo) n(re) g(e) o(x) o(e) n(cuting) f(these) g(comma) n(nds.) 150
556 y(First) h(we) g(need) e(to) h(add) g(\002les) h(and) f(images) g
(which) f(are) i(need) n(ed) f(by) g(the) g(database.) p
Fk 309 759 a(#) 40 b(tar) g(zpxvf) f(data.tar) n(.gz) p
Fp 150 962 a(Then) 19 b(we) i(need) e(to) i(run) e(\223mod\002x) n
(.sh\224) i(to) f(mak) o(e) g(sure) g(that) g(e) n(v) o(ery) n(thing) f
(is) j(read) n(able.) p Fk 309 1164 a(#) 40 b(./modfix.sh) p
Fp 150 1367 a(Then) 19 b(we) i(need) e(to) i(send) f(the) g(SQL) g
(data) h(into) e(the) i(databa) n(se:) p Fk 309 1570
a(#) 40 b(mysql) f(-upublish) g(-ppublish) f(publish) h(<) h(sql/data_)
n(mysql.sql) p Fp 150 1772 a(Finally) 20 b(we) h(run) e(clearcach) n(e)
p Fe 1005 1742 a(6) p Fp 1059 1772 a(to) i(mak) o(e) e(sure) h(that) h
(e) n(v) o(er) n(ything) e(presented) g(is) i(cached) e(correctly:) p
Fk 309 1975 a(#) 40 b(./clearcach) n(e.sh) p Fn 150 2220
a(2.4.2) n(.2) 82 b(P) n(ostgr) o(eSQ) n(L) 21 b(con\002guratio) n(n) p
Fp 150 2400 a(Impo) n(rtant) f(note) g(re) o(ga) n(rding) f(PostgreSQL)
h(suppo) n(rt) h(in) f(eZ) g(publish:) 150 2524 y(PostgreSQL) g(has) g
(one) g(limitation) f(which) h(is) h(not) f(good) f(for) g(eZ) i(pub) n
(lish:) 150 2647 y(Max) f(length) f(of) h(indenti\002er) n(s) i(used) d
(in) i(the) f(database,) f(table) h(names,) g(column) f(names) h(etc) g
(is) h(def) o(ault) f(set) h(to) f(32.) 150 2771 y(eZ) g(publish) g
(uses) g(names) g(which) g(sometimes) g(are) g(long) n(er) m(,) g(e.g:)
25 b(eZImag) n(eCatalogue_) n(ImageV) -9 b(a) n(riationGro) n(up) 150
2895 y(Theref) n(ore) 20 b(you) f(need) h(to) g(recomp) n(ile) h
(PostgreSQL) f(to) g(suppo) n(rt) h(a) f(lar) o(ger) f(v) n(alue) h(by)
f(altering:) 358 3099 y(#de) n(\002ne) i(N) m(AMED) m(A) -9
b(T) f(ALEN) 21 b(64) 150 3302 y(in) f(the) h(\002le) f(:) 26
b(src/include/p) n(ostgres_e) o(x) n(t.h) p Fn 150 3547
a(2.4.2) n(.3) 82 b(P) n(ostgr) o(eSQ) n(L) 21 b(setup) p
Fp 150 3727 a(On) k(last) h(con\002gu) n(ration) f(chan) n(ge) g(is) h
(necessary) -5 b(.) 39 b(This) 25 b(will) h(allo) n(w) f(TCP-IP) g
(connectio) n(ns) h(to) f(the) g(database,) h(not) e(only) 150
3826 y(unix) 19 b(sock) o(ets.) 150 3950 y(In) 31 b(pqsql-) n
(root/data) n(/postmaster) -5 b(.opts) 31 b(\(fo) n(r) h(instance) e
(/v) n(ar/lib/pg) n(sql/data/postma) n(ster) -5 b(.opts\)) 31
b(you) f(need) h(to) g(apply) f(a) 150 4050 y(\223-i\224) 20
b(paramete) n(r) -5 b(.) 26 b(The) 20 b(conten) n(t) h(of) f(the) g
(\002le) h(will) g(then) f(be) g(lik) o(e) g(this:) p
Fc 150 4140 a(/usr/bin/pos) n(tmaster) 34 b('-D') h('/var/lib/) n
(pgsql/data/') f('-i') p Fn 150 4385 a(2.4.2) n(.4) 82
b(First) 21 b(time) f(installation) g(\(P) n(ostg) n(r) o(eSQL\)) p
Fp 150 4565 a(Login) f(as) i(user) f(postgre) n(s) p
Fk 309 4668 a(#) 40 b(su) g(-) f(postgres) p Fp 150 4871
a(Create) 20 b(a) h(database) p Fk 309 4974 a($) 40 b(createdb) f
(publish) p Fp 150 5176 a(Create) 20 b(a) h(dabase) f(user) p
Fk 309 5280 a($) 40 b(createuser) e(publish) h(-W) p
Fp 150 5482 a(Create) 20 b(tables) p 150 5534 1410 4
v Fg 240 5589 a(6) p Ff 270 5613 a(A) c(ne) n(w) i(featur) r(e) f(in) g
(eZ) g(publish) h(2.2) e(is) h(the) h(possibil) r(ity) g(of) e(cle) r
(aring) i(the) g(cache) h(from) d(the) i(admin) g(site) p
150 5723 3525 4 v Fp 1871 5823 a(15) p 90 rotate dyy
eop
%%Page: 16 17
16 16 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 309
333 a($) 40 b(psql) f(-Upublish) g(<sql/data_) n(mysql.sql) p
Fp 150 533 a(Y) -9 b(ou) 20 b(also) h(need) f(to) h(enable) f
(PostgreSQL) g(in) h(site.ini.) 27 b(Change) 20 b(the\224) h(DatabaseI)
n(mplemen) n(tation\224) g(con\002g) n(uration) f(so) h(it) 150
633 y(reads:) 358 825 y(DatabaseI) n(mplemen) n(tation=po) n(stgresql) p
Fn 150 1065 a(2.4.2) n(.5) 82 b(Updating) 20 b(the) h(Installatio) n(n)
p Fp 150 1243 a(This) h(section) g(is) g(for) g(users) g(who) f(are) h
(upd) n(ating) g(from) f(a) h(pre) n(v) n(ious) g(v) o(ersion) f(of) h
(eZ) g(pub) n(lish.) 31 b(Ther) n(e) 23 b(shou) n(ld) f(be) g(se) n(v) o
(eral) 150 1343 y(\002les) 31 b(ending) e(with) h(\223.sql\224) g(in) h
(the) f(directo) n(ry) g(\223upda) n(tes\224.) 56 b(Run) 30
b(the) g(\002les) h(needed) e(to) h(update) f(your) g(v) o(ersion) g
(to) i(the) 150 1443 y(curren) n(t.) 26 b(Y) -9 b(ou) 19
b(need) h(to) g(apply) f(all) i(the) f(updates) g(for) f(e) n(v) o(ery)
g(v) o(ersion) g(since) h(your) f(v) o(ersion) n(.) p
Fh 150 1700 a(2.4.3) 99 b(Setting) 26 b(up) f(the) h(cr) n(onjob) g
(job) p Fp 150 1878 a(eZ) 20 b(publish) g(has) g(a) h(cron) n(tab) f
(script.) 150 2000 y(In) g(orde) n(r) h(to) f(edit) g(your) f(crontab) n
(,) i(type) f(:) p Fc 150 2089 a($) 35 b(crontab) f(-e) p
Fp 150 2210 a(Y) -9 b(ou) 19 b(will) h(then) f(be) g(editing) f(a) i
(\002le) g(in) g(a) f(te) o(xt) g(editor) g(\(which) f(editor) h(is) h
(depend) n(end) f(on) g(you) n(r) h(system) f(con\002gu) n(ration\).) 24
b(In) 150 2310 y(this) d(\002le) g(add) e(the) h(follo) n(wing) f(line)
p Fc 150 2399 a(0) 35 b(23) f(*) h(*) g(*) g(cd) f(/your/docroot) n(;) h
(/usr/bin/php) f(cron.php) p Fp 150 2521 a(No) n(w) -5
b(,) 19 b(sa) n(v) o(e) i(and) e(e) o(xit) h(the) h(te) o(xt) f(editor)
150 2642 y(Please) h(replace) e(\223/your) n(/docroo) n(t\224) i(with) f
(your) f(real) h(docum) n(ent) g(root.) p Fl 150 2942
a(2.5) 119 b(No) o(w) 30 b(What?) p Fp 150 3150 a(After) 25
b(installing) g(eZ) g(pub) n(lish) h(you) e(can) h(test) h(your) e
(site) i(throu) n(gh) f(the) g(URL) p Fk 26 w(http://ww) n
(w.yoursite.com) n(/) p Fp 26 w(and) f(you) 150 3250
y(can) j(administrate) g(you) n(r) h(site) h(fro) n(m) f(the) g(URL) p
Fk 28 w(http://a) n(dmin.yoursite.) n(com/) p Fp(,) h(of) f(cour) n
(se,) i(if) e(you) e(did) i(an) o(y) n(thing) 150 3349
y(dif) n(fer) n(ent) 21 b(the) f(names) g(of) g(the) g(admin) f(and) h
(the) g(pub) n(lic) h(site) g(might) f(be) g(dif) n(fer) n(ent.) p
Fb 150 3471 a(NO) m(TE:) p Fp 21 w(The) g(def) o(ault) g(user) h(name) f
(and) g(passw) o(ord) g(for) g(you) n(r) h(site) h(will) f(be) g(admin)
n(/publish.) 26 b(Remembe) n(r) 21 b(to) g(chang) n(e) h(the) 150
3571 y(passw) o(ord.) 150 3693 y(The) i(ne) o(xt) g(manu) n(al) h(you) f
(should) f(read) h(is) i(the) e(\223eZ) h(pub) n(lish) g(Customisation)
f(Guide\224,) h(it) g(tells) g(you) f(ho) n(w) g(to) g(con\002gu) n(re)
150 3792 y(the) c(softw) o(are) f(to) h(use) f(the) h(functio) n
(nality) g(you) e(w) o(ant,) i(as) g(well) g(as) h(ho) n(w) e(you) g
(chan) n(ge) h(the) g(templa) n(tes) h(to) f(suit) g(you) n(r) g
(needs.) 150 3914 y(When) 27 b(you') -6 b(re) 28 b(\002nished) f(with) g
(the) h(design) f(and) g(the) g(initial) h(testing) f(you) g(can) g
(head) g(o) o(v) o(e) n(r) h(to) p Fk 27 w(http://zez.or) n(g/) p
Fp 28 w(for) 150 4014 y(articles) 20 b(about) f(commun) n(ity) h(b) n
(uilding) f(as) i(well) f(as) h(prog) n(ramming) n(,) f(or) g(you) f
(can) h(visit) p Fk 21 w(http://dev) n(eloper.ez.no) p
Fp 19 w(for) 150 4114 y(upda) n(tes,) f(articles) e(about) g(eZ) g
(publish) f(and) h(ho) n(w) g(to) g(w) o(ork) g(with) g(it,) i(as) f
(well) g(as) g(k) o(eep) n(ing) f(abreast) g(of) g(ne) n(w) g(de) n(v) o
(elo) n(pments.) p Fh 150 4371 a(2.5.1) 99 b(P) n(ost) 24
b(Install) h(Checklist) p Fp 254 4549 a(1.) 41 b(Does) 20
b(Apache) f(run?) 254 4710 y(2.) 41 b(Does) 20 b(PHP) h(run/w) o(o) n
(rk) f(as) h(an) f(Apache) g(mod) n(ule?) 254 4870 y(3.) 41
b(Does) 20 b(MySQL) g(run) n(?) 254 5031 y(4.) 41 b(Can) 20
b(you) f(access) i(your) e(virtual) h(hosts) g(at) h(all?) 254
5192 y(5.) 41 b(Does) 20 b(the) g(user) g(site) h(w) o(ork?) 254
5353 y(6.) 41 b(Does) 20 b(the) g(admin) f(site) j(w) o(ork) n(?) 254
5513 y(7.) 41 b(Consider) 22 b(this:) 31 b(all) 23 b(eZ) g(pub) n(lish)
h(sites) g(has) f(an) f(admin) g(site,) i(perhap) n(s) g(you) e(should)
f(call) j(the) e(admin) g(host) h(some-) 358 5613 y(thing) c(dif) n
(fer) n(ent) i(than) e(admin?) p 150 5723 V 1871 5823
a(16) p 90 rotate dyy eop
%%Page: 17 18
17 17 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 254
333 a(8.) 41 b(Check) 19 b(that) g(you') -6 b(v) o(e) 19
b(do) n(wnlo) n(aded) g(and) g(read) g(the) g(con\002gu) n(ration) g
(manu) n(al.) 26 b(A) 19 b(quick) g(tip) h(is) g(to) f(read) g(throug) n
(h) h(the) 358 432 y(\002le) g(\223site.ini\224) h(and) e(change) g(an)
o(y) h(e-ma) n(il) h(addresses,) f(passw) o(ords) g(etc.) 25
b(to) 20 b(\002t) h(your) e(o) n(wn) h(choices.) 254
598 y(9.) 41 b(Log) 15 b(in) i(on) f(you) n(r) h(admin) f(site) h(\() p
Fk(http://) n(admin.yoursite) n(.com/) p Fp(\).) 23 b(Y) -9
b(ou) 16 b(will) h(be) g(presente) n(d) g(with) g(a) f(page) g(which)
358 698 y(will) g(list) h(an) o(y) f(install) g(prob) n(lems.) 24
b(If) 16 b(an) o(y) f(proble) n(ms) i(appear) e(read) g(the) h(error) f
(message) h(presented) f(and) g(follo) n(w) g(an) o(y) 358
798 y(instructio) n(ns.) 29 b(If) 21 b(that) h(f) o(ails,) g(read) f
(the) g(F) -6 b(A) h(Q.) 22 b(Then) f(go) g(to) p Fk
21 w(http://devel) n(oper.ez.no) p Fp 21 w(and) g(search) g(the) g
(foru) n(m) 358 897 y(for) c(an) o(yo) n(ne) i(who) f(ha) n(v) o(e) g
(had) f(the) i(same) f(proble) n(m.) 25 b(Also) 19 b(check) e(the) i(b)
n(ug) f(list) h(for) f(an) o(y) f(open) h(b) n(ugs) g(co) o(v) m(ering)
g(you) n(r) 358 997 y(pro) n(blem.) 25 b(Finally) 20
b(you) f(should) g(re) o(gister) h(to) g(the) g(mailing) g(list) h(and)
f(try) g(asking) f(for) h(help) f(there.) 212 1163 y(10.) 41
b(If) 19 b(e) n(v) o(er) n(ything) f(is) i(okay) f(go) g(to) g(the) g
(\223user\224) g(modu) n(le) h(and) f(chang) n(e) h(the) f(e-mail) g
(addre) n(ss) i(of) e(the) g(site) h(administrato) n(r) 358
1262 y(immed) n(iatly) -5 b(.) 212 1429 y(11.) 41 b(Chang) n(e) 21
b(the) f(passw) o(ord) g(of) g(the) g(admin) n(istration) g(user) g(to)
h(someth) n(ing) f(only) g(you) f(kno) n(w) -7 b(.) 212
1595 y(12.) 41 b(Start) 29 b(bro) l(wsing) g(the) f(public) g(part) h
(of) f(your) f(site,) 32 b(just) d(to) g(check) f(that) h(e) n(v) o(e) n
(rything) f(is) h(w) o(orking) n(;) 34 b(some) 28 b(of) h(the) 358
1694 y(articles) 20 b(supplied) f(as) i(def) o(ault) f(will) h(info) n
(rm) f(you) g(abo) n(ut) h(featur) n(es) g(of) f(the) g(softw) o(are.)
212 1860 y(13.) 41 b(Check) 19 b(that) i(Imag) n(eMagick) f(is) h(w) o
(ork) n(ing.) k(T) m(ry) 20 b(to) g(upload) f(an) h(image) g(to) g
(your) f(site.) p Fl 150 2165 a(2.6) 119 b(T) -9 b(r) n(oubleshooting) p
Fh 150 2392 a(2.6.1) 99 b(Pr) n(oblems) 25 b(During) g(Installation) p
Fn 150 2573 a(2.6.1) n(.1) 82 b(Missin) r(g) 20 b(Compiler/Can) g(not) g
(Compile) h(\(C++/C\)) p Fp 150 2754 a(When) k(comp) n(iling) h(php) e
(and) g(other) h(suppo) n(rt) h(pro) n(grams) f(\(lik) o(e) g(ImageM) n
(agick\)) g(you) f(need) g(the) i(GCC) g(compiler) -7
b(.) 41 b(It) 26 b(is) 150 2853 y(recom) n(mended) j(that) h(you) f
(use) i(the) f(GCC) h(comp) n(iler) g(which) e(w) o(as) i(shipped) e
(with) h(your) f(Linux) g(distro/un) n(ix) i(system.) 150
2953 y(In) 24 b(the) g(introdu) n(ction) g(\(see) g(chapter) g(1\)) g
(it) h(listed) f(some) g(sites) i(where) d(you) h(can) g(do) n(wn) n
(load) g(pre-co) n(mpiled) g(v) o(er) n(sions) h(of) 150
3052 y(softw) o(are) 20 b(for) f(some) h(dif) n(feren) n(t) h(Unix) f
(v) o(er) n(sions.) 26 b(Please) 20 b(note) g(that) g(you) g(must) g
(comp) n(ile) h(php) f(on) f(your) g(o) n(wn.) p Fn 150
3298 a(2.6.1) n(.2) 82 b(I) 21 b(am) g(gett) n(ing) g(linking) g(err) o
(or) n(s) g(r) o(egarding) e(k) o(erber) o(os) h(when) h(trying) f(to) g
(b) n(uild) h(PHP) p Fp 150 3479 a(The) 16 b(PHP) i(mod) n(ule) f(you) e
(ha) n(v) o(e) h(compiled) f(will) j(be) e(link) o(ed) g(again) n(s) i
(k) o(erb) n(eros.) 24 b(This) 17 b(may) f(cause) g(some) h(linkin) n
(g) g(prob) n(lems) 150 3579 y(on) 27 b(RedHat) h(Linux) n(.) 48
b(The) 28 b(w) o(ork) n(aroun) n(d) g(for) f(this) h(problem) e(is) j
(to) f(type) f(this) h(comma) n(nd) g(befo) n(re) g(you) f(comp) n
(ile.) 48 b(See) 150 3678 y(chapter) 19 b(2.2.1) n(.2) h(for) g(mor) n
(e) h(info\)) e(:) p Fk 150 3782 a($) 40 b(export) f(LDFLAGS=) n
("-L/usr/kerber) n(os/lib) g(-lkrb5) g(-lgssapi_krb) n(5) h(-lpam") p
Fh 150 4045 a(2.6.2) 99 b(Pr) n(oblems) 25 b(After) h(Installatio) n(n)
p Fn 150 4225 a(2.6.2) n(.1) 82 b(P) n(ermission) 21
b(Denied) p Fa 150 4397 a(Warning:) 88 b(fopen\("site) n(.ini","r+"\))
150 4514 y(Permissio) n(n) 45 b(denied) f(in) g(classes/INIF) n
(ile.php) g(on) h(line) f(80) p Fp 150 4638 a(If) 20
b(you) f(get) i(this) f(error) f(message) h(you) g(need) f(to) h(run) g
(the) g(\223mod\002x) n(.sh\224) g(script.) p Fn 150
4884 a(2.6.2) n(.2) 82 b(Can) 21 b(not) f(see) h(Images) p
Fp 150 5065 a(Image) n(Magick) d(is) h(not) f(w) o(orking) n(,) h(mak) o
(e) f(sure) h(that) f(it) h(is) h(w) o(ork) n(ing) f(by) e(using) h
(the) h(comm) n(and) f(line) h(comm) n(and) f(\223con) m(v) m(ert\224.)
p Fn 150 5311 a(2.6.2) n(.3) 82 b(W) -5 b(ar) o(ning) 20
b(about) f(T) -8 b(emp) 22 b(Dir) o(ecto) n(ry) p Fp
150 5491 a(If) e(you) f(get) i(an) o(y) e(such) h(w) o(arning) f(you) g
(need) h(to) g(set) h(the) f(temp) g(director) n(y) g(in) h(php) n
(.ini.) p 150 5723 V 1871 5823 a(17) p 90 rotate dyy
eop
%%Page: 18 19
18 18 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(2.6.2) n(.4) 82 b(After) 20 b(installing) g(my) h(new) g(php) g
(module,) f(apache) g(dies) h(immediately) -6 b(.) p
Fp 150 513 a(RedHat) 30 b(as) g(released) f(ne) n(w) g(v) o(ersio) n
(ns) h(of) f(the) h(open) n(ssl) h(pack) n(ages) f(for) f(RedHat) g
(7.x) p Fe 2665 483 a(7) p Fp 2697 513 a(.) 53 b(If) 30
b(these) f(erratas) g(is) i(installed) 150 613 y(befor) n(e) 24
b(you) e(compile) h(php) n(,) i(you) n(r) f(php) e(modu) n(le) i(will) g
(be) f(link) o(ed) g(again) n(s) i(these.) 34 b(This) 24
b(will) g(ho) n(we) l(v) o(er) f(brak) o(e) f(mod_ssl,) 150
712 y(which) e(is) h(link) o(ed) e(to) i(the) f(old) g(open) n(ssl) h
(libraries.) k(There) 19 b(are) i(tw) o(o) f(dif) n(fer) n(ent) h(w) o
(ays) f(to) g(\002x) h(this:) 150 812 y(Uninstall) f(mod_) n(ssl:) 150
937 y(#) g(rpm) g(-e) g(mod_) n(ssl) 150 1136 y(Or) g(you) g(may) f(do)
n(wnlo) n(ad) h(the) h(apach) n(e) g(source) e(rpm) h(from) f(redha) n
(t.) 26 b(Then) 19 b(recomp) n(ile) i(and) f(install) g(it.) 150
1360 y(If) g(this) h(doesn) n(') o(t) f(help,) g(look) f(for) h(clues) g
(in) h(/v) n(ar/lo) n(g/httpd/e) n(rror_) n(messages) p
Fl 150 1665 a(2.7) 119 b(Installing) 30 b(on) g(RA) -5
b(Q) 30 b(3) p Fb 150 1876 a(Installing) 19 b(ezPublish) h(on) f(r) o
(aq3) h(without) g(messing) g(up) g(the) g(GUI) g(or) h(voidin) n(g) g
(the) f(warr) o(anty) -5 b(.) p Fp 150 2000 a(This) 20
b(is) g(untested) f(by) h(eZ) f(systems,) h(and) f(we) h(pro) o(v) n
(ide) g(this) g(\223as) h(is\224) f(without) f(an) o(y) g(form) f(of) i
(guar) n(antee) g(or) f(endo) n(rsement,) 150 2100 y(either) h(e) o(xp)
n(licitly) h(or) f(implicitly) -5 b(.) 150 2224 y(First,) 21
b(add) e(the) i(dom) n(ain) f(into) g(the) h(DNS,) f(b) n(ut) g(do) g
(not) g(create) g(a) h(virtu) n(al) g(site.) 150 2349
y(Log) f(in) g(by) g(telnet) g(\(install) g(SSH) h(unless) g(you) e
(are) h(desperate) f(to) i(get) f(hack) o(ed) n(\).) 150
2473 y(Put) h(the) f(pub) n(lish) h(\002les) g(in) f(the) h(directo) n
(ry) f(you) f(w) o(ant) i(to) f(use,) g(I) h(used) f(/hom) n(e/sites/e)
o(xtrasites/mysite/web) 150 2598 y(Install) g(mysql) g(3.23) f(or) h
(later) g(by) f(rpm,) h(there) f(is) i(one) f(out) g(there.) k(MySQL) c
(\(http://www) -5 b(.) n(mysql.co) n(m\)) 20 b(v) o(ersion) f(3.23) g
(or) 150 2698 y(later) h(if) h(you) e(w) o(ant) h(to) h(comp) n(ile) 150
2822 y(No) n(w) e(you) g(need) f(to) i(create) f(a) h(databa) n(se) g
(in) g(MySQL,) f(the) g(def) o(ault) g(name) g(we) g(use) h(is) g
(publish,) e(b) n(ut) i(you) e(can) h(change) f(that) 150
2922 y(to) i(whate) n(v) o(er) f(pleases) i(you) n(.) p
Fk 309 3125 a(#) 40 b(mysql) f(-uroot) g(-p) h(publish) f(<) g
(sql/publish.) n(sql) p Fp 150 3328 a(Add) 23 b(a) h(publish) f(user) g
(in) h(MySQL.) f(T) -7 b(o) 24 b(add) f(a) h(user) f(you) g(can) h(use)
f(the) h(MySQL) f(client) h(to) g(log) f(on) g(to) h(mysql) f(and) g
(then) 150 3428 y(create) d(the) g(user:) p Fk 309 3632
a(#) 40 b(mysql>grant) e(all) i(on) f(publish.*) g(to) g(publish@local)
n(host) 309 3735 y(identified) g(by) g("secret";) p Fp
150 3939 a(where) 22 b(secret) h(is) g(your) f(passw) o(ord.) 31
b(Then) 22 b(you) g(need) g(to) h(add) f(the) h(def) o(au) n(lt) g(eZ) g
(publish) f(data) g(into) h(you) n(r) g(ne) n(wly) f(created) 150
4038 y(database:) p Fk 309 4242 a(#) 40 b(mysql) f(-uroot) g(-p) h
(publish) f(<) g(sql/publish.) n(sql) p Fp 150 4445 a(Then) 19
b(get:) p Fi 275 4653 a(\017) p Fp 41 w(http://www) -5
b(.) n(freesoftw) o(ar) n(e.com/p) n(ub/info) n(zip/zlib/) 20
b(\(zlib) m(.tar) -7 b(.gz\)) p Fi 275 4819 a(\017) p
Fp 41 w(http://www) i(.) n(boutell.c) n(om/gd) 19 b(\(gd-1) n(.8.4.) n
(tar) -5 b(.gz\)) p Fi 275 4985 a(\017) p Fp 41 w(ftp://ftp) n(.uu.n) n
(et/graph) n(ics/jpe) o(g/jpe) o(g) n(src.v6b) g(.tar) g(.gz) 20
b(\(jpe) o(g) n(src.v6b) -5 b(.tar) g(.gz\)) p Fi 275
5151 a(\017) p Fp 41 w(http://www) g(.) n(php.) n(net) 21
b(\(ph) n(p-4.0) n(.4pl1.) n(tar) -5 b(.gz\)) 150 5358
y(Delete) 20 b(all) h(gd.h) e(\002les) i(on) f(your) f(system.) 25
b(Y) -9 b(ou) 20 b(can) g(\002nd) g(them) g(using) n(:) p
150 5511 1410 4 v Fg 240 5565 a(7) p Ff 270 5589 a(The) c(probl) r(em) g
(descr) r(ibed) i(here) f(may) g(only) h(apply) g(to) g(RedHat) g(7.0) p
150 5723 3525 4 v Fp 1871 5823 a(18) p 90 rotate dyy
eop
%%Page: 19 20
19 19 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 309
333 a(#) 40 b(find) f(/) h(-name) f(gd.h) p Fp 150 536
a(If) 20 b(there) g(are) g(more) f(than) h(one,) f(then) h(delete) g
(all) h(of) f(them.) 150 660 y(No) n(w) g(add) g(the) g(follo) n(win) n
(g) g(line) h(to) f(the) g(/etc/ld.so.con) n(f) g(\002le:) p
Fk 309 863 a(/usr/local/li) n(b) p Fp 150 1066 a(Sa) n(v) o(e) g(the) g
(\002le,) h(and) f(run) n(:) p Fk 309 1269 a(#) 40 b(/sbin/ldcon) n
(fig) p Fp 150 1472 a(This) 20 b(w) o(as) h(an) g(impo) n(rtant) f
(part,) g(becau) n(se) h(Apache) f(need) n(s) h(this) g(dir) f(to) g
(\002nd) g(the) h(corr) n(ect) g(mod) n(ules.) 150 1596
y(Extract) f(the) g(zlib) g(archi) n(v) m(e:) p Fk 309
1799 a(#) 40 b(tar) g(-zxvf) f(zlib.tar) n(.gz) h(#) g(cd) f
(zlib-1.1.3) p Fp 150 2002 a(And) 20 b(install) g(it:) p
Fk 309 2226 a(#) 40 b(./configure) e(--shared) 309 2329
y(#) i(make) 309 2432 y(#) g(make) f(install) p Fp 150
2635 a(No) n(w) 20 b(install) h(the) f(JPEG-6b,) f(doing) g(the) h
(follo) n(wing) n(:) p Fk 309 2838 a(#) 40 b(tar) g(-zxvf) f(jpegsrc.) n
(v6b.tar.gz) 309 2942 y(#) h(cd) g(jpeg-6b) 309 3045
y(#) g(./configure) e(--enable-shar) n(ed) 309 3149 y(#) i(make) 309
3252 y(#) g(make) f(install) p Fp 150 3455 a(Install) 20
b(the) h(PNG) f(library) p Fk 309 3658 a(#) 40 b(wget) f(http://www.li)
n(bpng.org/pub/) n(png/src/libpng) n(-1.0.9.tar.gz) p
Fp 150 3861 a(Then) 19 b(compile) h(the) g(packa) n(ge.) 150
3985 y(Get) h(Imag) n(emagick) e(ImageMa) n(gick) h(\(http://www) -5
b(.) n(imagemag) n(ick.or) o(g) n(/\)) 20 b(ne) n(west) g(v) o(ersion) f
(Do) n(wnload) g(and) g(then:) p Fk 309 4188 a(#) 40
b(tar) g(-zxvf) f(Imagemag) n(ick-xxx) 309 4291 y(#) h(cd) g(Imagemag) n
(ick-xxx) 309 4395 y(#) g(./configure) 309 4498 y(#) g(make) 309
4602 y(#) g(make) f(install) p Fp 150 4805 a(Then) 19
b(go) h(one) g(directo) n(ry) g(back,) f(and) h(e) o(xtract) g(the) g
(GD) g(archi) n(v) o(e) f(using:) p Fk 309 5008 a(#) 40
b(tar) g(-zxvf) f(gd-xxx) 309 5111 y(#) h(cd) g(gd-xxx) p
Fp 150 5314 a(No) n(w) 29 b(edit) g(the) g(Mak) o(e\002le) f(\(using) g
(vi) h(or) g(pico\)) f(and) g(check) g(which) g(modules) g(you) g(w) o
(ant.) 51 b(I) 29 b(remo) o(v) m(ed) g(the) g(Freetyp) n(e) 150
5414 y(Librar) n(y) 19 b(\(-DHA) -11 b(VE_) n(LIBFREETYPE) 18
b(/) h(-lfreetyp) n(e\).) 25 b(After) 18 b(makin) n(g) h(the) f(chang) n
(es) h(sa) n(v) o(e) g(the) f(\002le) h(and) f(go) g(back) g(to) h(the)
150 5513 y(shell.) 25 b(No) n(w) 20 b(compile) g(GD:) p
150 5723 V 1871 5823 a(19) p 90 rotate dyy eop
%%Page: 20 21
20 20 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 309
333 a(#) 40 b(make) 309 447 y(#) g(make) f(install) p
Fp 150 662 a(If) 24 b(this) h(is) g(gi) n(vin) n(g) g(an) o(y) e(error)
n(s,) j(just) f(remo) m(v) o(e) f(the) g(mod) n(ules) h(you) e(don') m
(t) i(ha) n(v) o(e) e(\(b) n(ut) h(don) n(') o(t) g(remo) o(v) m(e) h
(the) f(JPEG) g(lib) h(-) f(we) 150 761 y(need) 19 b(that) i(one) e(!)
26 b(:\)\)) f(\)) 150 885 y(No) n(w) 20 b(go) g(back) f(one) h(dir) m
(,) f(and) h(e) o(xtract) f(PHP4:) p Fa 309 1099 a(#) 45
b(tar) f(-zxvf) g(php-4.0.4pl1) n(.tar.gz) 309 1214 y(#) h(cd) g
(php-4.0) n(.4pl1) p Fp 150 1428 a(First) 21 b(remo) o(v) m(e) f(an) o
(y) g(cache:) p Fk 309 1630 a(#) 40 b(rm) g(config.c) n(ache) 309
1732 y(#) g(make) f(clean) 309 1835 y(#./configure) f(--with-mysql) h
(\\) 309 1937 y(--with-apxs=/) n(usr/sbin/apxs) f(\\) 309
2039 y(--with-system) n(-regex) h(\\) 309 2142 y(--with-zlib) g(\\) 309
2244 y(--enable-safe) n(-mode) h(\\) 309 2346 y(--with-gdbm) f(\\) 309
2449 y(--enable-sysv) n(sem) h(\\) 309 2551 y(--with-ftp) f(\\) 309
2653 y(--with-config) n(-file-path=/et) n(c/httpd/conf/) f(\\) 309
2756 y(--with-exec-d) n(ir=/usr/sbin/h) n(ttpd) i(\\) 309
2858 y(--enable-tran) n(s-sid) 309 2960 y(#) g(make) 309
3063 y(#) g(make) f(install) p Fp 150 3265 a(run) 19
b(/sbin/ldcon) n(\002g) i(again) n(.) 150 3388 y(Apache:) j(\(Y) -9
b(our) 19 b(milage) h(may) g(v) n(ary) -7 b(,) 20 b(be) g(w) o(ary) g
(of) g(paths\)) 150 3511 y(edit) g(/etc/httpd/co) n(nf/httpd) n(.conf) f
(and) h(add) g(the) g(Load) n(modules) g(lines) g(lik) o(e) h(this:) p
Fk 309 3713 a(#) 40 b(Extra) f(Modules) 309 3815 y(LoadModule) g
(php_modul) n(e) h(modules/mod) n(_php.so) 309 3917 y(LoadModule) f
(php3_modu) n(le) h(modules/li) n(bphp3.so) 309 4020
y(LoadModule) f(perl_modu) n(le) h(/usr/lib/a) n(pache/libperl.) n(so)
309 4122 y(LoadModule) f(php4_modu) n(le) h(/usr/lib/a) n
(pache/libphp4.) n(so) 309 4224 y(LoadModule) f(php4_modu) n(le) h
(lib/apache) n(/libphp4.so) p Fp 150 4426 a(#) 20 b(Reconstructio) n(n)
h(of) f(the) g(comp) n(lete) h(modu) n(le) g(list) g(from) e(all) i(a) n
(v) n(ailable) f(mod) n(ules) 150 4549 y(#) g(\(static) h(and) f
(shared) f(ones\)) h(to) g(achie) n(v) o(e) f(corre) n(ct) i(modu) n
(le) g(e) o(x) o(ecu) n(tion) f(order) -7 b(.) 150 4672
y(#) 20 b([WHENEVER) g(Y) n(OU) h(CHANGE) f(THE) g(LO) m(ADMODULE) g
(SECTION) g(ABO) l(VE) h(UPD) m(A) -9 b(TE) 19 b(THIS,) h(T) o(OO]) p
Fk 309 4874 a(ClearModuleLi) n(st) 309 4977 y(#) 40 b(Extra) f(Modules)
309 5079 y(AddModule) g(mod_php.c) 309 5181 y(AddModule) g(mod_php3.c)
309 5284 y(AddModule) g(mod_perl.c) 309 5398 y(AddModule) g(mod_php4.c)
p Fp 150 5613 a(Add) 20 b(the) g(second) f(line) i(belo) l(w) g(line) f
(belo) n(w) g(the) g(re) n(write) g(stuf) n(f,) g(abo) m(v) o(e) g(the)
g(<V) -5 b(irtualho) n(st>) 21 b(directi) n(v) o(e) n(s.) p
150 5723 V 1871 5823 a(20) p 90 rotate dyy eop
%%Page: 21 22
21 21 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(NameV) -5 b(irtua) n(lHost) 21 b(216.) n(97.67) n(.4) f(Includ) n
(e) h(/etc/httpd/c) n(onf/e) o(x) n(trasites.conf) f(<V) -5
b(irtualHo) n(st) 21 b(216.9) n(7.67) n(.4>) 150 457
y(create) f(this) h(includ) n(e) g(\002le) g(and) e(in) i(it) g(put) e
(the) i(apach) n(e) g(vitual) f(serv) o(er) f(directi) n(v) o(e) n(s) i
(for) f(you) n(r) h(site.) 150 582 y(F) o(or) f(e) o(xam) n(ple:) p
Fk 309 785 a(#) 40 b(User) f(site) 309 889 y(<VirtualHost) f(yourIP>)
389 993 y(ServerName) g(yourdomain.org) 389 1096 y(ServerAlias) g
(www.yourdomai) n(n.org) 389 1200 y(<Directory) g(/your/site/roo) n
(t/>) 469 1304 y(Options) h(FollowSy) n(mLinks) 469 1408
y(AllowOver) n(ride) h(None) 389 1512 y(</Directory) n(>) 389
1615 y(RewriteEngi) n(ne) g(On) p Fc 399 1707 a(RewriteRule) 33
b(^/stats/store/\(.) n(*\).gif$) 69 b(/your/site/roo) n
(t/ezstats/user/) n(storestats.php) 33 b([L]) 399 1798
y(RewriteRule) g(^/filemanager/fi) n(ledownload/\([^/) n(]+\)/\(.*\)$)
69 b(/your/site/r) n(oot/ezfilemanag) n(er/files/$1) 34
b([T="applica) n(tion/oct-) 150 1864 y(stream",L]) 394
1956 y(RewriteRule) g(.*/ezmed) n(iacatalogue/cata) n(logue/\(.*\)$) g
(/your/docr) n(oot/ezmediacatal) n(ogue/catalogue/) n($1) h
([T="applicat) n(ion/oct-) 150 2022 y(stream",L]) 394
2113 y(RewriteRule) f(^/xmlrpc) n(.*$) h(/your/docroo) n
(t/index_xmlrpc.) n(php) g([L]) 399 2205 y(RewriteRule) e
(!\\.\(gif|css|jpg|) n(png|jar\)$) h(/your/site/ro) n(ot/index.php) p
Fk 389 2309 a(ServerAdmin) k(your_mail@dom) n(ain.no) 389
2412 y(DocumentRoo) n(t) i(/your/site/r) n(oot/) 309
2516 y(</VirtualHost) n(>) 309 2699 y(#) g(Admin) f(site) 309
2803 y(<VirtualHost) f(admin.yourdoma) n(in.org>) 389
2906 y(<Directory) g(/your/site/roo) n(t>) 469 3010 y(Options) h
(FollowSy) n(mLinks) 469 3114 y(AllowOver) n(ride) h(None) 389
3218 y(</Directory) n(>) 389 3321 y(RewriteEngi) n(ne) g(On) p
Fc 399 3413 a(RewriteRule) 33 b(^/filemanager/fi) n(ledownload/\([^/) n
(]+\)/\(.*\)$) 69 b(/your/site/r) n(oot/ezfilemanag) n(er/files/$1) 34
b([T="applica) n(tion/oct-) 150 3479 y(stream",L]) 150
3546 y(RewriteRule) f(.*/ezmediacatal) n(ogue/catalogue/\() n(.*\)$) i
(/your/docr) n(oot/ezmediacata) n(logue/catalogue) n(/$1) g
([T="applicat) n(ion/oct-) 150 3612 y(stream",L]) 389
3703 y(RewriteRule) f(!\\.\(gif|) n(css|jpg|png|jar\)) f
(/your/site/roo) n(t/index_admin.p) n(hp) p Fk 389 3807
a(ServerAdmin) 38 b(your_mail@dom) n(ain.no) 389 3911
y(DocumentRoo) n(t) i(/your/site/r) n(oot) 389 4015 y(ServerName) e
(admin.yourdoma) n(in.org) 389 4118 y(ServerAlias) g(admin.yourdom) n
(ain.org) 309 4222 y(</VirtualHost) n(>) p Fp 150 4426
a(restart) 20 b(apache:) p Fk 309 4629 a(#) 40 b(/etc/rc.d/i) n
(nit.d/httpd) f(stop) p Fp 150 4832 a(w) o(ait) 21 b(a) g(fe) n(w) f
(second) n(s) h(then) p Fk 309 5036 a(#) 40 b(/etc/rc.d/i) n
(nit.d/httpd) f(start) p Fp 150 5239 a(Then) 19 b(cho) n(wn) g(httpd.h)
n(ttpd) h(*) h(on) e(both) h(the) g(doma) n(in) h(and) e(admin.d) n
(omain) g(directories) h(to) g(get) g(it) h(to) f(w) o(ork.) 150
5364 y(If) g(all) h(is) g(well,) f(your) f(site) i(should) f(w) o(ork) n
(.) p 150 5723 V 1871 5823 a(21) p 90 rotate dyy eop
%%Page: 22 23
22 22 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fh 150
333 a(2.7.1) 99 b(Getting) 25 b(SSL) h(to) f(W) -7 b(ork) p
Fp 150 512 a(This) 22 b(is) h(a) g(bit) f(tough) n(er!) 31
b(Enable) 21 b(SSL) i(for) f(the) g(site) h(in) f(your) f(GUI.) h
(Generate) f(your) g(certi\002cates.) 31 b(Disable) 23
b(SSL) f(in) h(the) 150 612 y(GUI.) d(Add) g(this) g(to) h(the) f(end) g
(of) g(you) n(r) h(e) o(xtr) n(asites.conf) p Fk 309
714 a(#attempt) 39 b(to) h(modify) 309 817 y(SSL) g(Listen) f
(xxx.xxx.x) n(xx.xxx:443) 309 919 y(<VirtualHost) f(xxx.xxx.xxx.xx) n
(x:443>) 469 1022 y(ServerAdm) n(in) i(ubong) 469 1124
y(DocumentR) n(oot) g(/home/site) n(s/yoursite/we) n(b) 469
1226 y(<Director) n(y) g(/home/sites/) n(yoursite/web>) 628
1329 y(Options) f(FollowSymLi) n(nks) 628 1431 y(AllowOverrid) n(e) h
(None) 469 1534 y(</Directo) n(ry>) 469 1636 y(SSLEngine) e(on) 469
1739 y(SSLCertif) n(icateFile) h(/home/site) n(s/yoursite/cer) n
(ts/certificat) n(e) 469 1841 y(SSLCertif) n(icateKeyFile) g(/home/s) n
(ites/yoursite/) n(certs/key) 469 1944 y(AddHandle) n(r) h
(server-parse) n(d) g(.shtml) 469 2046 y(AddType) f(text/htm) n(l) h
(.shtml) 469 2149 y(AddHandle) n(r) g(cgi-wrapper) e(.cgi) 469
2251 y(AddHandle) n(r) i(cgi-wrapper) e(.pl) 469 2354
y(RewriteEn) n(gine) i(On) 469 2456 y(RewriteRu) n(le) g(!\\.\(gif|css)
n(|jpg|png\)$) f(/home/sit) n(es/public.edg) n(e.ai/web/inde) n(x.php)
469 2559 y(ErrorLog) f(/home/sites/yo) n(ursite/logs/e) n(rror_log) 469
2661 y(TransferL) n(og) i(/home/sites) n(/yoursite/log) n(s/access_log)
309 2764 y(</VirtualHost) n(>) p Fp 150 2887 a(This) 20
b(should) g(w) o(ork) n(.) 26 b(IF) 20 b(you) g(can') o(t) f(get) h
(it,) h(gi) n(v) o(e) e(me) h(an) g(email) h(and) e(I') o(ll) i(help) e
(if) i(I) f(ha) n(v) o(e) g(time:) 25 b(chris@net.ai) p
Fl 150 3190 a(2.8) 119 b(Installing) 30 b(on) g(W) n(indo) o(ws) p
Fp 150 3399 a(This) 22 b(infor) n(mation) f(is) i(contr) n(ib) n(uted) e
(by) h(Marco) e(Zinn) i(for) f(the) g(2.1.0) f(release,) i(so) g(it) h
(migh) n(t) g(be) e(slightly) h(outd) n(ated.) 29 b(This) 150
3499 y(is) 19 b(untested) d(by) i(eZ) f(systems,) i(and) e(we) h(pro) o
(v) n(ide) g(this) g("as) g(is") g(without) f(an) o(y) g(form) g(of) g
(guara) n(ntee) h(or) f(endor) n(sement,) h(either) 150
3598 y(e) o(xplicitly) h(or) h(implicitly) -5 b(.) p
Fh 150 3858 a(2.8.1) 99 b(Requir) n(emen) r(ts) 25 b(and) g(notes) p
Fp 150 4038 a(In) 20 b(orde) n(r) h(to) f(install) h(ezPublish) f(on) f
(a) i(windo) n(w) n(s) g(system,) g(you) e(need) g(to) i(do) n(wn) n
(load) f(and) f(install) p Fi 275 4237 a(\017) p Fp 41
w(the) h(apach) n(e) h(webserv) o(e) n(r) p Fi 275 4401
a(\017) p Fp 41 w(php) n(4) p Fi 275 4564 a(\017) p Fp
41 w(MySQL) e(database) h(serv) o(er) p Fi 275 4728 a(\017) p
Fp 41 w(php) n(MyAdm) n(in) h(\(op) n(tional,) f(b) n(ut) g(I) h(recom)
n(mend) e(it) i(o) o(v) o(er) e(using) h(mySQL) f(from) h(the) g(comm) n
(and) g(line\)) p Fi 275 4891 a(\017) p Fp 41 w(Imag) n(emagick) 150
5091 y(If) g(you) f(already) g(ha) n(v) o(e) h(installed) g(all) h
(this,) f(you) g(may) f(skip) i(to) f(the) g(ne) o(xt) g(section) g
(and) f(go) h(and) g(install) g(ezPublish.) 150 5214
y(Note) 32 b(that) h(this) g(installation) f(w) o(as) i(don) n(e) f(on)
f(a) h(windo) n(ws) f(98) g(second) g(edition) f(system) i(with) g
(ezPublish) f(2.1) n(.) 63 b(F) o(or) 150 5314 y(W) m(indo) n(ws) 22
b(NT) h(and) f(2000) g(you) f(may) i(to) g(do) f(some) g(more) g(or) h
(other) f(settings,) h(because) f(of) h(the) f(access) i(righ) n(ts) g
(situation) 150 5414 y(\(\002le) 17 b(permissions) g(in) g(the) g
(\002le) h(system\)) f(and) g(the) g(possibility) g(to) g(run) f
(services) i(indep) n(endan) n(t) g(from) e(a) i(user) f(being) f
(logge) n(d) 150 5513 y(in.) 36 b(If) 24 b(you) f(ha) n(v) o(e) g(the) h
(choice,) g(do) f(not) h(use) g(a) g(windo) n(w) n(s) h(system) f(for) f
(a) i(pro) n(duction) e(system!) 36 b(I'm) 23 b(using) g(this) i(just) f
(for) 150 5613 y(de) n(v) o(e) n(lopmen) n(t) d(purpo) n(ses) g(on) f
(my) g(laptop) n(.) p 150 5723 V 1871 5823 a(22) p 90 rotate
dyy eop
%%Page: 23 24
23 23 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(I) 24 b(will) g(describ) n(e) g(the) g(installation) f(steps) h
(and) e(sho) n(w) i(some) f(small) h(tests) g(to) g(see) g(if) f(all) h
(went) g(\002ne.) 34 b(Of) 24 b(cour) n(se) g(you) f(will) 150
432 y(need) c(\(root\)) g(access) i(to) f(the) h(system) f(if) h(you) e
(need) g(to) i(install) f(an) o(ythin) n(g.) 150 656
y(If) h(you) g(ha) n(v) o(e) f(ne) n(v) o(er) g(installed) h(and) g
(con\002gu) n(red) g(softw) o(are) g(using) g(te) o(xt) g(\002les,) h
(you) f(migh) n(t) h(run) f(into) g(trou) n(ble) h(setting) f(this) 150
756 y(up.) k(Y) -9 b(ou) 19 b(need) h(to) g(install) h(a) g(web) f
(serv) o(er) -5 b(,) 21 b(a) f(database) g(serv) o(er) -5
b(,) 21 b(some) f(tools) g(and) g(the) g(ezPublish) g(app) n(lication) g
(itself.) 26 b(It') -5 b(s) 150 856 y(not) 20 b(that) g(hard,) f(b) n
(ut) h(it) h(is) g(more) f(than) g(clickin) n(g) h(on) f(a) g(big) g
("Install") g(b) n(utton.) 150 1080 y(The) e(installation) g(guides) g
(are) g(partially) g(copied) f(from) h(the) g(install) h(te) o(xts) g
(of) f(the) h(softw) o(are) f(pack) n(ages.) 25 b(Y) -9
b(ou) 18 b(should) f(read) 150 1179 y(the) j(full) g(docu) n(mentation)
f(for) g(a) i(speci\002c) f(softw) o(are,) g(if) g(you) f(run) g(into) h
(troub) n(le) h(or) f(ha) n(v) o(e) f(an) o(y) g(problem) n(s) i(with) f
(my) g(notes.) p Fh 150 1442 a(2.8.2) 99 b(A) n(pache) p
Fp 150 1623 a(Get) 21 b(the) f(win32) f(binary) g(of) h(the) g(Apache) f
(webserv) o(er) g(v) o(ersion) g(1.13) n(.19) h(from) f(http://www) -5
b(.a) n(pache.o) n(r) o(g/) 150 1747 y(Note) 25 b(that) g(the) g(binar)
n(y) g(is) h(a) g(MSI) f(Binary) f(Distrib) n(ution) g(P) o(ackage) g
(and) h(you) f(need) g(the) h(MSI) g(installer) g(applicatio) n(n) g
(in) 150 1847 y(order) c(to) h(install) g(this) g(package) n(.) 31
b(Users) 22 b(of) g(W) m(indo) n(ws) f(NT) h(4.0,) g(95) f(and) h(98) f
(must) h(do) n(wn) n(load) g(the) g(MSI) g(installer) g(fro) n(m) 150
1946 y(the) e(website,) g(if) h(it) g(w) o(as) g(not) f(alread) n(y) h
(installed) f(by) g(ano) n(ther) g(produ) n(ct') -5 b(s) 21
b(installation.) 150 2171 y(When) e(installing) f(apache) n(,) i(ha) n
(v) o(e) e(you) n(r) h(netw) o(ork) f(dom) n(ain) h(ready) f(and) g
(choo) n(se) i(a) f(nice) g(name) f(for) g(you) n(r) h(ne) n(w) g
(webserv) o(e) n(r) -5 b(.) 150 2270 y(If) 18 b(you) f(plan) g(to) h
(use) g(the) g(webserv) m(er) g(for) f(more) g(than) g(just) i
(ezPublish) e(\(ie:) 24 b(phpM) n(yAdmin,) 17 b(bro) n(wsing) f(the) i
(apache) f(docs,) 150 2370 y(...\),) j(you) f(should) h(choo) n(se) h
(a) g(serv) o(er) f(name) g(that) g(is) i(indep) n(endant) e(from) f
(the) i(host) f(names) g(of) h(the) f(ezPublish) g(installation) 150
2469 y(later) -5 b(.) 150 2594 y(If) 25 b(you) f(just) h(set) h(this) g
(up) e(on) h(a) g(stand-alo) n(ne) g(PC) h(or) f(a) g(small) h(netw) o
(or) n(k,) g(you) e(could) g(use) i(my) -5 b(.) n(intranet) 24
b(as) i(the) f(netw) o(or) n(k) 150 2694 y(doma) n(in) 30
b(and) f(apach) n(e.my) -5 b(.) n(intranet) 29 b(as) h(the) f(serv) o
(er) g(name) n(.) 53 b(Y) -9 b(ou) 29 b(need) g(to) g(choo) n(se) i(an)
e(email) g(adress) g(for) g(the) g(serv) o(er) 150 2793
y(admin.) 150 3017 y(Start) k(the) f(installer) h(and) f(choo) n(se) h
(to) g(run) f(apach) n(e) h(as) g(a) g(service,) i(if) e(you) f(lik) o
(e.) 62 b(Choose) 32 b("Complete) g(Install") g(and) 150
3117 y(chang) n(e) 24 b(the) f(destination) f(fold) n(er) h(to) h
("C:\\".) 34 b(This) 23 b(will) h(install) f(apache) f(in) h
(C:\\apache) g(and) f(the) h(docum) n(ents) h(will) f(be) g(in) 150
3217 y(C:\\apache\\htd) n(ocs) e(\(=do) n(croot\)) n(.) 150
3441 y(Y) -9 b(our) 24 b(apach) n(e) h(no) n(w) f(needs) g(to) h(be) f
(told) g(to) h(use) g(the) f(re) n(write) g(modu) n(le,) i(so) f(we) g
(can) f(use) h(the) f(re) n(write) g(rules) h(later) -5
b(.) 38 b(Open) 150 3540 y(C:\\Apache\\con) n(f\\httpd) n(.conf) 28
b(with) g(your) g(w) o(ord) n(pad) g(\(I) h(reco) n(mmend) e(to) i
(create) f(a) h(shortcut) f(on) g(the) g(desktop) f(to) i(this) 150
3640 y(\002le\).) 24 b(Remo) o(v) o(e) 17 b(the) h(comme) n(nt) g(sign)
g("#") g(from) f(the) h(line) g("Load) n(Module) f(re) n(write_) n
(module) g(modu) n(les/mod_r) n(e) n(write.so") 150 3740
y(and) j(sa) n(v) o(e) g(the) g(\002le.) p Fn 150 3986
a(Err) o(or) g(Checking) g(A) n(pache:) p Fp 150 4166
a(Start) 26 b(Apach) n(e) g(from) f(the) g(menu) f(or) h(mak) o(e) g(a)
h(shortcu) n(t) g(to) g(C:\\apache\\ap) n(ache.e) o(x) m(e) g(on) f
(the) g(desktop) f(\(recomm) n(ended) n(\)) 150 4266
y(and) 16 b(doub) n(le-click.) 23 b(If) 17 b(all) g(went) g(\002ne,) g
(a) g(DOS) g(box) f(should) f(pop) h(up) g(and) g(sho) n(w) h("Apach) n
(e/1.3.1) n(9) g(\(W) m(in32) n(\)) g(runn) n(ing....) n(".) 150
4490 y(Fire) k(up) f(you) n(r) h(webbro) l(wser) g(on) f(this) h
(machin) n(e) g(and) f(open) g(http://loca) n(lhost/) h(.) 26
b(This) 21 b(should) f(display) g(a) g(welcome) g(page) 150
4590 y(with) g(a) h(link) f(to) g(the) g(apache) g(docs.) 150
4714 y(Stop) h(Apache) g(by) g(selecting) h(\(fo) n(cussing\)) f(the) h
(DOS) g(box) f(windo) l(w) h(again) f(and) g(pressing) g(CTRL-C) h
(\(tak) o(es) g(some) f(sec-) 150 4814 y(onds\)) n(.) p
Fh 150 5076 a(2.8.3) 99 b(PHP4) p Fp 150 5257 a(Get) 21
b(the) f(PHP4) h(windo) n(ws) f(binar) n(y) h(from) e(http://www) -5
b(.p) n(hp.net/.) 25 b(I) c(used) f(PHP) h(4.0.4) n(.pl1.) k(Y) -9
b(ou) 20 b(need) g(a) h(binar) n(y) g(v) o(ersio) n(n) 150
5357 y(with) f(a) h(serv) o(er) e(API) i(v) o(ersio) n(n) g(for) e
(apache,) g(as) i(we) g(will) g(use) f(PHP) h(as) g(an) f(apache) f
(module) n(.) 150 5581 y(Extract) c(the) g(zip) h(\002le) g(to) f
(C:\\php,) h(using) f(folde) n(r) h(names.) 23 b(No) n(w) 15
b(mo) o(v) o(e) f(php4) n(ts.dll) i(to) g(the) f(C:\\windo) n
(ws\\system) g(directo) n(ry) -5 b(.) p 150 5723 V 1871
5823 a(23) p 90 rotate dyy eop
%%Page: 24 25
24 24 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(Stop) 20 b(the) g(Apache) g(W) -7 b(ebserv) o(er) i(,) 20
b(if) h(it) g(is) g(runn) n(ing.) k(Edit) 20 b(the) g(httpd.) n(conf) g
(and) f(put) h(in) h(these) f(lines:) p Fk 150 436 a(#) 40
b(for) f(the) h(apache) e(module) 150 540 y(LoadModule) g(php4_module) h
(c:/php/s) n(api/php4apach) n(e.dll) 150 644 y(AddType) g(applicati) n
(on/x-httpd-php) f(.php) h(.php3) 150 852 y(<IfModule) g(mod_dir) n
(.c>) 309 955 y(DirectoryInde) n(x) h(index.html) f(index.p) n(hp) h
(index.php3) 150 1059 y(</IfModule>) p Fp 150 1262 a(The) 24
b(AddT) -7 b(y) n(pe) 25 b(line) f(might) f(be) i(alread) n(y) g(in) f
(there) g(\(search) f(for) h("PHP) h(4"\),) f(be) g(sure) g(to) h(remo)
m(v) o(e) f(the) g("#".) 37 b(The) 24 b(Load) n(-) 150
1362 y(Modu) n(le) d(line) f(should) f(be) i(created) e(belo) n(w) h
(the) g(other) f(LoadMo) n(dule) h(lines.) 150 1586 y(This) 27
b(will) g(load) g(the) f(PHP4) h(module,) g(when) f(apache) g(is) i
(started) e(and) h(link) f(.php) g(and) g(.php) n(3) h(\002les) h(to) e
(the) h(PHP) h(mod) n(-) 150 1686 y(ule.) f(The) 21 b(e) o(xpa) n
(nsion) g(of) g(the) g(Director) n(yInd) n(e) o(x) g(entry) f(\(which) g
(already) g(is) i(in) f(the) g(con\002g) f(\002le\)) i(is) f(not) g(be)
g(necessary) f(for) 150 1786 y(ezPublish.) k(Adding) 19
b(inde) o(x) n(.php) g(and) h(inde) o(x) n(.php3) f(just) i(mak) o(es) f
(life) g(with) g(php) g(tools) g(easier) -5 b(.) 150
2010 y(Cop) o(y) 28 b(the) g(php) n(.ini-dist) g(from) f(C:\\PHP) i(to)
g(C:\\windo) n(ws,) g(rename) e(it) i(to) f(php.) n(ini,) i(and) e
(edit) g(the) g(php.) n(ini) h(to) f(\002t) h(you) n(r) 150
2109 y(needs.) c(Y) -9 b(ou) 19 b(will) i(need) f(at) g(least) h(these)
g(entries:) p Fk 150 2213 a(magic_quote) n(s_gpc) 318
b(=) 279 b(Off) 150 2317 y(extension_d) n(ir) 120 b(=) 278
b(C:\\php\\extens) n(ions) 150 2441 y(session.sav) n(e_path) 358
b(=) 40 b(C:\\window) n(s\\temp) p Fp 150 2666 a(Magic) 24
b(Quotes) f(must) h(be) g(of) n(f) f(for) h(ezPublish) f(2.1.) 36
b(Y) -9 b(ou) 23 b(also) h(must) g(enable) f(this) i(libary) e(by) h
(remo) m(ving) f(the) h(comme) n(nt) 150 2765 y(sign) c('#') g(in) g
(its) h(line.) k(The) 20 b(sa) n(v) o(epath) f(must) i(be) f(set) h(to)
f(some) g(local) g(directory) f(for) g(tempora) n(ry) h(\002les.) 150
2890 y(Restart) f(the) g(Apach) n(e) g(serv) o(er) -5
b(.) 24 b(If) 18 b(all) i(is) f(\002ne,) g(it) g(should) e(display) h
("Apache) n(/1.3.19) f(\(W) m(in32) n(\)) i(PHP/4.0.1) n(pl1) g(run) n
(ning..) n(.") 150 2989 y(no) n(w) -5 b(.) p Fn 150 3235
a(Err) o(or) 20 b(Checking) g(PHP) g(and) h(A) n(pache:) p
Fp 150 3416 a(Create) f(a) h(te) o(xt) f(\002le) h(called) f(test.php) f
(in) i(C:\\apache\\h) n(tdocs.) 150 3540 y(The) f(\002le) h(must) f
(contain) n(:) p Fk 150 3644 a(<?) 150 3748 y(phpinfo\(\);) 150
3852 y(?>) p Fp 150 4055 a(Sa) n(v) o(e) 28 b(the) f(\002le) i(and) e
(open) f(it) j(via) e(http://localho) n(st/test.php.) 47
b(This) 28 b(should) e(display) h(some) h(infor) n(mation) f(about) g
(you) n(r) 150 4155 y(PHP) -9 b(.) 21 b(If) g(your) f(webbr) n(o) n
(wser) h(display) f(the) h(conten) n(ts) h(of) f(the) g(\002le) g(or) g
(prom) n(pts) h(you) e(sa) n(v) o(e) h(the) g(\002le) g(some) n(where) n
(,) h(the) f(PHP) 150 4254 y(inte) o(gr) n(ation) f(did) g(not) g(w) o
(ork.) p Fh 150 4517 a(2.8.4) 99 b(MySQL) p Fp 150 4698
a(Get) 21 b(the) f(standard) f(binary) h(\(tarb) n(all\)) h(distrib) n
(ution) e(for) h(W) m(indo) n(w) n(s) i(95/9) n(8/NT/200) n(0) f(for) e
(intel) i(from) e(www) -5 b(.mysq) n(l.com.) 150 4797
y(I'm) 20 b(run) n(ning) g(v) o(er) n(sion) h(3.2) n(3.35a) e(here,) h
(b) n(ut) g(ne) n(wer) f(v) o(ersions) h(shou) n(ld) h(be) f(a) n(v) n
(ailable.) 150 4922 y(Extract) g(the) g(\002le) h(to) f(some) g(tempo) n
(rary) g(dir) g(and) g(run) f(the) h(setup.) 25 b(Install) 20
b(to) h(C:\\MySQL) f(using) g("T) -7 b(ypica) n(l) 21
b(Install".) 150 5046 y(Create) k(a) h(shortcu) n(t) g(to) f
(C:\\mysql\\bin\\winm) n(ysqladm) n(in.e) o(x) o(e) f(on) h(you) n(r) h
(deskto) n(p) g(and) e(run) g(it.) 41 b(At) 25 b(the) h(v) o(er) n(y) f
(\002rst) h(start,) 150 5146 y(a) d("Quick) g(Setup") f(windo) l(w) i
(should) e(pop) g(up.) 32 b(Enter) 22 b(a) i(userna) n(me) f(and) g(a) g
(passw) o(ort) g(for) f(the) h(MySQL) f(Serv) o(er) g(access.) 150
5245 y(Use) f("publish") f(for) g(both) g(user) g(name) h(and) f(passw)
o(ord) g(to) h(simplify) f(the) g(rest) i(of) e(the) h(installation.) 26
b(This) 21 b(will) g(create) g(the) 150 5345 y(my) -5
b(.) n(ini) 21 b(\002le) g(in) f(C:\\windo) n(ws) 150
5470 y(There) f(should) h(be) g(a) g(traf) n(\002c) g(light) g(in) h
(the) f(system) g(tray) g(\(left) g(of) g(the) g(time) h(display) n
(\).) 26 b(It) 20 b(should) f(go) h(green) f(no) n(w) -5
b(.) p 150 5723 V 1871 5823 a(24) p 90 rotate dyy eop
%%Page: 25 26
25 25 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(Right-click) 19 b(on) h(the) g(traf) n(\002c) f(lights,) h
(select) h("Sho) n(w) e(me") h(from) f(the) h(pop) n(-up) f(menu.) 24
b(Go) c(to) g("my) -5 b(.in) n(i) 21 b(setup",) e(and) h("pick) n(-) 150
432 y(up) g(and) g(edit) h(my) -5 b(.) n(ini) 21 b(v) n(alues".) k
(Choose) c(the) f(serv) o(er) g(you) f(w) o(ant) i(to) g(use;) g(pro) n
(bably) f(mysqld-) n(nt) h(on) f(NT) h(and) f(mysqld) n(-opt) 150
532 y(on) g(W) m(in9x) f(\(using) h(the) g(radio) f(b) n(uttons\).) 24
b(Choose) c("Sa) n(v) o(e) g(Modi\002catio) n(n") 150
655 y(If) j(you) e(w) o(ant) i(to) g(load) f(mysql) h(on) f(startup,) g
(choose) g('Create) h(ShortCut) f(on) g(Start) h(Menu'.) 32
b(Note) 23 b(that) f(you) g(might) g(ha) n(v) o(e) 150
755 y(to) e(put) g(a) h(link) f(to) g(apache.) n(e) o(x) o(e) g(in) g
(the) g(startup) g(menu) f(group) n(,) i(too,) e(if) i(you) e(w) o(ant)
h(the) g(whole) g(system) g(to) h(run) e(at) i(startup) 150
878 y(Right-Click) f(on) g(the) h(traf) n(\002c) f(lights,) h(Choo) n
(se) h("W) m(in9x) d("->) i("Shutd) n(o) n(wn) f(Both") h(in) g(ord) n
(er) g(to) f(stop) h(the) f(database) g(serv) o(er) 150
977 y(and) g(the) g(W) m(inMySQLAd) n(min) g(tool.) p
Fn 150 1220 a(Err) o(or) g(Checking) g(MySQL:) p Fp 150
1399 a(Restart) g(the) f(database) g(serv) o(er) g(by) g(starting) g(W)
m(inMySQL) n(admin:) 24 b(a) c(windo) n(w) e(should) h(sho) n(w) g(up) g
(and) f(minimize) h(to) h(tray) -5 b(.) 150 1499 y(The) 21
b(T) m(raf) n(\002c) g(lights) h(should) f(go) g(green.) 28
b(This) 22 b(means) g(that) f(the) h(MySQL) f(daemon) f(\(serv) o(er\))
h(is) h(up) f(and) g(runnin) n(g,) h(using) 150 1598
y(your) d(ne) n(w) h(my) -5 b(.) n(ini) 21 b(v) n(alues.) p
Fh 150 1858 a(2.8.5) 99 b(phpMyAdmin) p Fp 150 2037 a(In) 28
b(order) f(to) i(ha) n(v) o(e) f(some) g(kind) g(of) g(nice) g(interf) o
(ace) g(to) g(your) g(MySQL) g(databa) n(se) i(serv) o(er) d(and) h(in)
h(ord) n(er) g(to) f(access) i(its) 150 2137 y(databases) 23
b(and) g(tables,) i(you) d(should) h(install) h(phpMy) n(Admin.) 34
b(I) 24 b(rely) f(on) h(it) g(later) m(,) g(when) f(installing) g
(ezPublish.) 35 b(Note) 150 2236 y(that) 26 b(using) f(phpM) n(yAdmin) g
(without) g(furth) n(er) h(security) f(measureme) n(nts) i(is) f(al) o
(w) o(ays) h(some) e(sort) h(of) f(security) h(risc,) h(be-) 150
2336 y(cause) 20 b(it) h(allo) n(ws) g(access) f(to) h(you) n(r) g(v) n
(alu) n(able) g(datab) n(ases) g(throug) n(h) f(a) h(web) f(bro) n
(wser) -7 b(.) 150 2559 y(Get) 20 b(phpM) n(yAdmin) f(fro) n(m) h
(http://www) -5 b(.p) n(hpwizard) n(.net/) 20 b(.) 25
b(Select) 20 b(the) f(zip) h(v) o(ersion) e(with) i(php) f(e) o(xten) n
(sions.) 25 b(I'm) 19 b(using) 150 2658 y(v) o(ersion) g(2.1.) n(0.) 150
2881 y(Extract) c(the) g(zip-\002le) g(to) g(your) f(docu) n(ment) h
(root,) h(using) e(folder) g(names.) 23 b(This) 16 b(puts) f(php) n
(MyAdmin) f(to) h(C:\\apache\\htdo) n(cs\\phpMy) n(Admin.) p
Fn 150 3124 a(Err) o(or) 20 b(Checking) g(phpMyAdmin) i(and) e(MySQL:) p
Fp 150 3303 a(Note) i(that) g(this) g(test) h(seems) f(to) g(w) o(ork) f
(only) -5 b(,) 21 b(when) g(your) g(def) o(au) n(lt) i(serv) o(er) e
(\(apac) n(he.my) -5 b(.) n(intranet\)) 21 b(is) i(alread) n(y) f
(translated) 150 3403 y(to) g(the) f(right) g(IP) h(adress.) 30
b(See) 22 b(\2232.8) n(.7) g(Determin) n(g) g(and) f(publishin) n(g) h
(you) n(r) g(host) g(names") f(on) g(ho) n(w) g(to) h(do) f(this) h(or)
g(do) f(this) 150 3502 y(test) g(later) -5 b(.) 150 3725
y(When) 15 b(Apache) f(and) h(MySQL) g(serv) o(er) n(s) i(are) e(run) n
(ning,) h(\002re) f(up) g(you) n(r) h(bro) l(wser) g(and) e(open) h
(http://loca) n(lhost/php) n(MyAdmin) 150 3824 y(.) 24
b(This) 18 b(shou) n(ld) f(sho) n(w) g(the) g(UI) g(of) g(php) n
(MyAdmin) f(and) g(allo) n(w) h(you) f(do) h(bro) l(wse) h(a) f(bit) g
(in) g(tw) o(o) g(MySQLs) g(databases.) 24 b("test") 150
3924 y(is) f(a) g(test-databa) n(se,) h(while) e("mysql") f(is) j(the) e
(MySQL) g(datab) n(ase) h(itself,) g(containig) e(users) h(and) g
(access) h(rights) f(etc.) 31 b(Y) -9 b(ou) 150 4024
y(should) 20 b(not) h(mess) h(to) g(much) e(with) i(this,) g(b) n(ut) f
(you) g(should) f(be) h(able) h(to) f(\002nd) g(a) h(user) f(called) g
("publish") g(in) g(the) h(user) f(table.) 150 4123 y(This) f(one) g
(is) h(necessary) f(for) f(furthe) n(r) i(installation) f(of) g(ezPub) n
(lish.) 150 4246 y(Also) h(be) n(w) o(ar) n(e) g(that) f("drop) n(") h
(means) f("delete"!) p Fh 150 4506 a(2.8.6) 99 b(ImageMagick) p
Fp 150 4685 a(Get) 20 b(the) f(ImageMag) n(ick) h(windo) l(ws) g
(binary) f(\(Im) n(ageMagick) n(-win2k.) n(zip\)) g(from) g(www) -5
b(.imag) n(emagick) n(.or) o(g) 18 b(and) h(e) o(xtract) 150
4785 y(it) i(to) f(C:\\,) h(using) f(folder) f(names.) 25
b(This) 20 b(installs) h(Image) n(Magick) f(to) g(the) g
(C:\\ImageMagick) n(-win2k) f(director) n(y) -5 b(.) 150
5007 y(No) n(w) 31 b(specify) f(in) h(the) g(site.ini) h(where) e(to) h
(\002nd) g(the) g(con) m(v) m(ert) g(prog) n(ram) g(of) g(Imag) n
(eMagick.) 57 b(In) 31 b(site.ini) g(chang) n(e) h(the) 150
5107 y(Image) n(Con) m(v) o(er) n(sionProgr) n(am) 20
b(line) h(to) f(read) p Fk 150 5209 a(ImageConver) n(sionProgram=C) n
(:\\ImageMagick) n(-win2k\\convert) n(.exe) 40 b(.) p
Fp 150 5411 a(This) 22 b(w) o(orks) g(great) g(for) g(me.) 31
b(The) 22 b(read) n(me) h(of) f(Imag) n(eMagick) g(tell) g(you) g(to) g
(use) h(en) m(v) n(ironme) n(nt) g(v) n(ariab) n(les.) 32
b(If) 22 b(you) f(w) o(ant) 150 5511 y(to) f(try) g(this,) h(add) e
(the) i(follo) l(wing) f(lines) h(to) f(your) f(autoe) o(x) m(ec.bat,) g
(sa) n(v) o(e) i(and) e(reboo) n(t:) p Fk 150 5613 a(set) 39
b(MAGICK_HOME=C) n(:\\ImageMagick-) n(win2k) p 150 5723
V Fp 1871 5823 a(25) p 90 rotate dyy eop
%%Page: 26 27
26 26 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 150
333 a(set) 39 b(PATH=C:\\Image) n(Magick-win2k) p Fp
150 536 a(If) 18 b(you) f(already) h(ha) n(v) o(e) f(set) i(a) g(the) f
(P) -8 b(A) f(TH) 19 b(v) n(ariab) n(le,) g(you) f(ha) n(v) o(e) f(to) i
(e) o(xp) n(and) f(your) f(path) h(by) g(the) g(ImageM) n(agick) g
(applicatio) n(n) 150 636 y(director) n(y) -5 b(.) p
Fn 150 882 a(Err) o(or) 20 b(Checking) g(ImageMagick:) p
Fp 150 1062 a(Note) f(that) g(you) f(can) h(do) f(this) h(test) h(only)
-5 b(,) 18 b(when) g(you) g(ha) n(v) o(e) h(set) g(up) g(and) f
(con\002gu) n(red) h(ezPublish) f(comple) n(tely) -5
b(,) 19 b(that) g(is) h(after) 150 1162 y(2.8.1) n(0.) 29
b(In) 22 b(ord) n(er) g(to) g(test) g(ImageM) n(agick,) f(log) h(in) f
(to) h(the) g(admin) f(site,) h(choose) f(the) g(article) h(modu) n
(le,) g(choose) f(to) h(create) 150 1261 y(a) h(ne) n(w) f(article,) h
(type) g(some) f(te) o(xt) h(and) f(click) g(on) g(the) h([images]) f
(b) n(utton) n(.) 33 b(On) 23 b(the) f(ne) o(xt) g(screen) g(click) h
([Add) f(Imag) n(e]) h(and) 150 1361 y(uploa) n(d) e(some) f(grap) n
(hic) g(\002le.) 26 b(ImageM) n(agick) 20 b(w) o(orks,) f(when) h(you) f
(see) i(a) g(thum) n(bnail) f(of) g(the) g(image) g(you) f(just) i
(uplo) n(aded.) 150 1461 y(T) m(ry) f(this) g(with) h(the) f(commo) n
(n) g(graph) n(ic) h(form) n(ats) g(\(JPG,) g(PNG,) g(GIF\).) p
Fh 150 1723 a(2.8.7) 99 b(Determing) 25 b(and) h(publishing) f(y) n
(our) g(host) g(names) p Fp 150 1904 a(F) o(or) f(ezPublish,) h(you) e
(need) h(tw) o(o) h(virtual) f(hosts,) h(one) f(for) g(the) h(user) f
(site,) i(the) f(othe) n(r) g(for) f(the) g(admin) g(site.) 39
b(Y) -9 b(ou) 24 b(shou) n(ld) 150 2003 y(mak) o(e) 19
b(up) g(your) g(mind) g(on) g(ho) n(w) g(you) f(w) o(ant) i(to) g(call)
g(these) g(no) n(w) -5 b(.) 24 b(The) o(y) 18 b(should) h(be) g(dif) n
(fere) n(nt) h(from) f(the) g(apache) g(\(def) o(au) n(lt\)) 150
2103 y(serv) o(er) g(name.) 150 2327 y(If) i(you) f(called) g(your) g
(apache) g(\(def) o(au) n(lt\)) h(serv) o(er) f(apache.m) n(y) -5
b(.intr) n(anet,) 21 b(you) f(might) g(w) o(ant) h(to) g(call) g(your) f
(ezPublish) g(hosts) 150 2427 y(somethin) n(g) h(lik) o(e) f(ez.my) -5
b(.) n(intranet) 19 b(and) h(ezadmin) n(.my) -5 b(.in) n(tranet.) 150
2651 y(In) 22 b(order) f(to) i(ha) n(v) o(e) e(ezPublish) h(runn) n
(ing,) h(you) e(need) h(to) g(translate) g(these) h(host) f(names) g
(to) h(the) f(IP-Adre) n(ss) i(of) e(the) g(system) 150
2751 y(the) e(apache) f(serv) o(er) h(is) h(runn) n(ing) f(on.) 150
2975 y(If) c(you) g(are) h(using) f(a) h(stand-) n(alone) f(PC,) i(tak)
o(e) e(127.0) n(.0.1) g(as) h(your) e(IP) i(adress.) 24
b(Using) 16 b(a) h(LAN,) g(you) f(will) h(\002nd) f(your) f(IP) i(with)
150 3074 y(the) 24 b(tool) g(ipcon) n(\002g) g(\(run) f(in) h(a) h(DOS)
f(box\).) 36 b(If) 23 b(you) h(are) f(using) h(a) g(small) h(pri) n(v) l
(ate) g(LAN,) f(you) n(r) g(IP) h(migh) n(t) g(be) f(somethin) n(g) 150
3174 y(lik) o(e) c(192.1) n(68.xx) n(x.xx) n(x.) 150
3398 y(A) g(com) n(pan) o(y) e(LAN) h(proba) n(bly) g(will) h(use) f(a)
g(Domain) f(Name) h(Serv) o(er) f(\(DNS\).) h(If) g(that') -5
b(s) 19 b(the) g(case,) h(contac) n(t) g(your) e(netw) o(or) n(k) 150
3498 y(admin) h(for) h(inserting) f(the) h(ne) n(w) g(host) h(name) n
(s.) 150 3722 y(All) 28 b(others) f(\(inclu) n(ding) g(stand-alo) n(ne)
h(PCs\)) g(must) f(use) h(the) f(hosts) h(\002le:) 40
b(If) 27 b(you) g(did) g(not) g(use) g(this) h(\002le) g(yet,) h(cop) o
(y) e(the) 150 3822 y(hosts.sam) 20 b(sample) g(\002le) h(to) f(hosts) h
(\(witho) n(ut) g(e) o(xten) n(sion\).) k(hosts) 20 b(\002les) h(are) f
(in) h(you) n(r) g(windo) l(ws) g(director) n(y) -5 b(.) 150
4046 y(Open) 20 b(the) g(hosts) g(\002le) h(with) f(your) f(notepad) n
(.) 150 4270 y(If) h(your) f(are) h(using) g(the) g("localho) n(sts") i
(IP) e(adress) g(127.0) n(.0.1,) f(enter) h(the) g(follo) n(win) n(g) h
(lines:) p Fk 150 4374 a(127.0.0.1) 278 b(localhos) n(t) 150
4478 y(127.0.0.1) g(apache.m) n(y.intranet) 150 4581
y(127.0.0.1) g(ez.my.in) n(tranet) 150 4685 y(127.0.0.1) g(ezadmin.) n
(my.intranet) p Fp 150 4888 a(This) 22 b(links) f(all) h(the) f(used) g
(host) h(name) n(s) h(to) e(the) g(IP) h(adress) g(127) n(.0.0.) n(1.)
29 b(When) 21 b(using) g(a) h(small) f(LAN,) h(use) f(your) f(detected)
150 4988 y(IP) 26 b(adress) g(instead) f(of) h(127) n(.0.0.) n(1) g(in)
g(the) g(last) g(three) g(lines) g(\(lea) n(v) o(e) f(localho) n(st) i
(as) f(it) h(is\)) f(and) f(mak) o(e) g(sure) h(to) g(mak) o(e) f(this)
150 5088 y(hosts) 19 b(entries) g(on) g(an) o(y) f(client) i(system,) f
(from) f(which) h(you) f(w) o(ant) h(to) g(access) h(your) e(webserv) o
(e) n(r) h(and) g(ezPublish) g(later) g(\(that) 150 5187
y(prob) n(ably) h(is) h(an) o(y) e(PC) j(in) e(the) g(LAN\).) 150
5412 y(Note) g(that) g(you) f(do) g(ha) n(v) o(e) g(to) h(restart) g
(windo) l(ws) h(or) e(the) h(serv) o(ers) f(in) h(order) f(to) h(tak) o
(e) g(the) g(chan) n(ges) g(in) g(the) g(hosts) g(\002le) h(to) f(tak) o
(e) 150 5511 y(ef) n(fect.) p 150 5723 V 1871 5823 a(26) p
90 rotate dyy eop
%%Page: 27 28
27 27 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(Err) o(or) 20 b(Checking) g(hosts) h(settings:) p
Fp 150 513 a(Open) h(you) g(webbr) n(o) n(wser) h(and) f(load) g
(http://apa) n(che.my) -7 b(.intrane) n(t.) 33 b(The) 23
b(bro) l(wser) g(should) f(sho) n(w) g(the) h(apach) n(e) g(welcome) 150
613 y(screen.) 29 b(Repeat) 21 b(this) i(for) e(e) n(v) o(er) n(y) h
(host) f(name) g(you) g(just) h(entered) f(\(ez.m) n(y) -5
b(.intran) n(et) 22 b(and) f(ezadmin) n(.my) -5 b(.in) n(tranet\)) 21
b(and) g(for) 150 712 y(e) n(v) o(ery) e(client.) p Fh
150 975 a(2.8.8) 99 b(eZ) 25 b(pub) r(lish) f(2.2.x) p
Fn 150 1156 a(Unpacking) c(the) h(\002les) p Fp 150 1336
a(Extract) 35 b(the) h(ezpu) n(blish) g(\002le) g(to) g
(C:\\Apache\\htd) n(ocs\\) g(,) k(using) 35 b(folde) n(r) h(names.) 71
b(This) 36 b(will) g(gi) n(v) o(e) f(you) g(all) h(\002les) g(in) 150
1436 y(C:\\Apache\\htd) n(ocs\\ezpub) n(lish_2_2) n(_x) 16
b(\(x) f(is) i(replaced) e(with) h(the) g(curren) n(t) h(eZ) f(pub) n
(lish) h(v) o(ersion) n(\).) 24 b(Put) 16 b(createdir) n(s.bat) g(in)
150 1535 y(C:\\Apache\\htd) n(ocs\\ezpub) n(lish_2_2) n(_x) j(and) g
(run) f(it.) 25 b(This) 20 b(creates) f(the) g(cache) g(directo) n
(ries.) 25 b(If) 19 b(your) f(did) h(not) g(uses) h(pub) n(-) 150
1635 y(lish/publish) j(as) h(your) f(MySQL) g(user/passw) o(ord) g
(settings,) h(open) f(site.ini,) i(and) e(just) h(change) f(the) g
(user) h(and) f(passw) o(ord) 150 1735 y(lines) e(to) f(match) g(you) n
(r) h(settings.) p Fn 150 1981 a(Err) o(or) f(Checking:) p
Fp 150 2161 a(While) e(apache) e(and) h(MySQL) g(serv) o(ers) g(are) h
(run) n(ning,) f(open) g(http://loca) n(lhost/ezpub) n(lish_2_2) n(_x) g
(in) h(you) n(r) g(webbro) l(wser) -5 b(.) 150 2261 y(This) 20
b(should) g(gi) n(v) o(e) f(you) g(an) h("could) f(not) h(connec) n(t) h
(to) g(datab) n(ase) g(...) k(no) 20 b(database) g(selected".) 150
2485 y(That') -5 b(s) 25 b(\002ne.) 41 b(It) 25 b(sho) n(ws) g(that) h
(PHP) g(ran) f(the) g(inde) o(x) n(.php) f(of) h(the) h(ezPub) n(lish) g
(installation) f(and) g(tried) g(to) g(conne) n(ct) h(to) g(the) 150
2585 y(database) c(serv) o(er) -5 b(.) 33 b(Connecting) 22
b(to) h(the) g(serv) o(er) f(w) o(as) i(okay) -7 b(,) 24
b(b) n(ut) f(the) g(database) f("publish") g(could) g(not) h(be) g(fou)
n(nd,) g(as) h(we) 150 2684 y(did) c(not) g(yet) g(create) g(it.) p
Fh 150 2947 a(2.8.9) 99 b(Cr) n(eating) 25 b(the) h(database) p
Fp 150 3127 a(Open) h(http://apach) n(e.my) -5 b(.in) n(tranet/ph) n
(pMyAdm) n(in) 28 b(in) h(you) n(r) f(webbro) l(wser) -5
b(.) 50 b(Create) 28 b(a) h(ne) n(w) e(database) h(named) f("pub) n(-)
150 3227 y(lish".) 150 3451 y(Run) 15 b(a) h(SQL) f(query) f(and) h
(choo) n(se) h(to) g(load) e(it) i(from) e(a) i(te) o(xt\002le.) 23
b(Bro) n(wse) 16 b(to) f(C:\\apache\\htd) n(ocs\\ezpub) n(lish_2_2) n
(_x\\sql\\pu) n(blish.sql) 150 3551 y(and) k(con\002rm) f(with) i
("Go".) k(This) c(should) e(tak) o(e) i(a) g(while) f(as) i(the) e
(tables) h(are) f(created) g(and) g(some) g(data) g(is) i(inserted.) j
(Check) 150 3650 y(the) c(\002rst) h(line,) f(if) h(the) f(e) o(x) o
(ec) n(ution) g(of) g(the) g(SQL) h(quer) n(y) f(w) o(as) h
(successful.) p Fn 150 3896 a(Err) o(or) f(Checking:) p
Fp 150 4077 a(In) 31 b(you) n(r) g(webbro) l(wser) m(,) i(open) d
(http://apach) n(e.my) -5 b(.) n(intranet/ezp) n(ublish_2) n(_2_x) n(.)
58 b(This) 31 b(should) f(gi) n(v) o(e) g(you) g(nearly) g(the) 150
4177 y(kno) n(w) n(n) 21 b(ezPublish) e(screen.) 150
4301 y(Note) 24 b(that) h(you) f(cann) n(ot) h(access) g(the) f(admin) g
(site) h(yet) g(and) f(the) g(user) g(site) i(will) f(not) f(w) o(ork) g
(v) o(ery) f(much) h(\(links,) h(missing) 150 4401 y(graph) n(ics) c
(etc\).) k(W) -7 b(e) 21 b(ha) n(v) o(e) f(not) g(yet) g(set) h(the) f
(virtual) g(hosts.) 25 b(But) c(we) f(will) h(no) n(w) -5
b(.) p Fh 150 4663 a(2.8.10) 99 b(V) l(irtual) 25 b(hosts) g(and) g(r) n
(ewrite) h(rules) p Fp 150 4844 a(I) 20 b(will) h(gi) n(v) o(e) e(you) g
(a) h(quick) f(sample,) g(ho) n(w) h(to) g(set) g(up) g(apache) f(to) h
(use) g(virtual) f(hosts) h(and) g(re) n(write) f(rules) h(as) h(we) f
(need) f(them) 150 4943 y(for) h(ezPub) n(lish) h(to) g(w) o(ork) n(.)
150 5168 y(A) 29 b(goo) n(d) f(e) o(xplana) n(tion) g(of) g(the) g
(virtual) g(host) g(and) g(re) n(write) f(rule) h(concep) n(t) h(is) g
(in) f(chapter) f(4) i(of) f(the) g(installation) g(guid) n(e) 150
5267 y(\(Apach) n(e) 21 b(con\002gu) n(ration\)) e(and) h(of) g(cour) n
(se) h(in) f(the) h(apach) n(e) g(docu) n(mentation) e(itself.) 150
5491 y(Open) 33 b(your) g(httpd) n(.conf) g(and) g(search) h(for) f
("NameV) -5 b(irtu) n(alHost".) 66 b(Y) -9 b(ou) 33 b(need) h(to) g
(enab) n(le) h(V) -5 b(irtualHo) n(sts) 35 b(using) f(the) 150
5591 y(NameV) -5 b(irtua) n(lHosts) 23 b(directi) n(v) o(e) e(and) h
(create) f(three) h(virtual) f(hosts.) 31 b(The) 22 b(\002rst) h(is) g
(the) f(def) o(au) n(lt) h(host) f(for) f(this) i(web) f(serv) o(er) m
(,) p 150 5723 V 1871 5823 a(27) p 90 rotate dyy eop
%%Page: 28 29
28 28 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fp 150
333 a(second) 23 b(is) j(the) e(ezPublish) f(user) i(site,) g(third) f
(is) h(the) f(ezPublish) g(admin) f(site.) 38 b(Y) -9
b(ou) 24 b(can) g(omit) g(the) g(\002rst,) i(if) f(you) e(are) h(just)
150 432 y(runn) n(ing) c(ezPublish) g(on) g(the) g(system,) h(b) n(ut) f
(you) g(will) h(not) f(be) g(able) g(to) h(access) g(phpM) n(yAdmin) n
(,) g(the) g(apach) n(e) g(docu) n(menta-) 150 532 y(tion) f(or) g(an) o
(y) n(thing) g(else) h(then.) 150 756 y(Cop) o(y) e(these) g(lines) g
(into) g(httpd.) n(conf) g(and) f(sa) n(v) o(e.) 25 b(If) 19
b(you) f(did) g(not) h(follo) n(w) f(my) h(suggestion) n(s) h(for) e
(folder) g(names) h(of) g(apach) n(e) 150 856 y(and) h(for) f(the) h
(host) h(name) n(s,) g(you) e(need) h(to) g(mak) o(e) g(the) g(appro) n
(priate) g(chang) n(es) h(here.) p Fk 150 1084 a(#) 150
1188 y(#) 40 b(Use) f(name-based) f(virtual) h(hosting.) 150
1292 y(#) 150 1395 y(NameVirtual) n(Host) h(apache.m) n(y.intranet) 150
1603 y(#) g(Server) f(default) f(site) i(\(default) e(server\)) 150
1707 y(<VirtualHos) n(t) i(apache.my.i) n(ntranet>) 150
1810 y(DocumentRoo) n(t) g(C:/Apache/h) n(tdocs) 150
1914 y(ServerName) e(apache.my.int) n(ranet) 150 2018
y(</VirtualHo) n(st>) 150 2329 y(#) i(ezPublish) e(User) h(site) 150
2433 y(<VirtualHos) n(t) h(ez.my.intra) n(net>) 150 2537
y(<Directory) e(C:/Apache/htd) n(ocs/ezpublish) n(_2_2_x>) 230
2641 y(Options) h(FollowS) n(ymLinks) g(Indexes) g(ExecCGI) 230
2744 y(AllowOver) n(ride) h(None) 150 2848 y(</Directory) n(>) 150
3056 y(RewriteEngi) n(ne) g(On) 150 3160 y(#RewriteLog) e(rewrite_user)
n(.log) 150 3263 y(#RewriteLog) n(Level) h(9) 150 3367
y(RewriteRule) f(^/stats/stor) n(e/\(.*\).gif$) h(/ezstats) n
(/user/storest) n(ats.php) g([S=3]) 150 3446 y(RewriteRule) f
(.*/ezmediaca) n(talogue/catal) n(ogue/\(.*\)$) 79 b(/var/www) n
(/publish/ezmed) n(iacatalogue/c) n(atalogue/$1) 150
3525 y([T="applica) n(tion/oct-stre) n(am",S=2]) 150
3629 y(#) 40 b(The) f(lines) g(above) g(should) g(appear) g(on) h(the) f
(same) g(line) h(in) f(your) g(configuration) f(file!) 150
3732 y(RewriteRule) g(^/filemanage) n(r/filedownloa) n
(d/\([^/]+\)/\(.*\)) n($) 150 3836 y(/ezfilemana) n(ger/files/$1) g
([T="applicati) n(on/oct-stream") n(,S=1]) 150 3940 y(#) i(The) f
(lines) g(above) g(should) g(appear) g(on) h(the) f(same) g(line) h(in)
f(your) g(configuration) f(file!) 150 4044 y(RewriteRule) g
(!\\.\(gif|css|) n(jpg|png\)$) h(/index.php) 150 4251
y(DocumentRoo) n(t) h(C:/Apache/h) n(tdocs/ezpubli) n(sh_2_2_x) 150
4355 y(ServerName) e(ez.my.intrane) n(t) 150 4459 y(</VirtualHo) n(st>)
150 4770 y(#) i(ezPublish) e(Admin) h(site) 150 4874
y(<VirtualHos) n(t) h(ezadmin.my.) n(intranet>) 150 4978
y(<Directory) e(C:/Apache/htd) n(ocs/ezpublish) n(_2_2_x>) 230
5082 y(Options) h(FollowS) n(ymLinks) g(Indexes) g(ExecCGI) 230
5185 y(AllowOver) n(ride) h(None) 150 5289 y(</Directory) n(>) 150
5497 y(RewriteEngi) n(ne) g(On) 150 5600 y(#RewriteLog) e(rewrite_admi)
n(n.log) p 150 5723 V Fp 1871 5823 a(28) p 90 rotate
dyy eop
%%Page: 29 30
29 29 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fk 150
333 a(#RewriteLog) n(Level) 39 b(9) 150 436 y(RewriteRule) f
(.*/ezmediaca) n(talogue/catal) n(ogue/\(.*\)$) 79 b(/var/www) n
(/publish/ezmed) n(iacatalogue/c) n(atalogue/$1) 150
515 y([T="applica) n(tion/oct-stre) n(am",S=1]) 150 619
y(RewriteRule) 38 b(!\\.\(gif|css|) n(jpg|png\)$) h(/index_adm) n
(in.php) 150 827 y(DocumentRoo) n(t) h(C:/Apache/h) n(tdocs/ezpubli) n
(sh_2_2_x) 150 930 y(ServerName) e(ezadmin.my.in) n(tranet) 150
1034 y(</VirtualHo) n(st>) p Fp 150 1341 a(Y) -9 b(ou) 25
b(can) h(check) f(you) n(r) h(V) -5 b(irtualHost) 26
b(con\002g) n(uration) f(by) g(runn) n(ing) h(apach) n(e) h(-S) f(from)
f(the) g(comman) n(d) h(line.) 42 b(If) 26 b(you) f(are) 150
1441 y(ha) n(ving) 19 b(troub) n(le) i(with) f(the) h(re) n(write) e
(rules,) h(you) g(can) g(enab) n(le) h(the) f(Re) n(writeLog) g(direc) n
(ti) n(v) o(es) h(for) e(a) i(time) f(for) g(deb) n(ug) n(ging.) p
Fn 150 1687 a(Err) o(or) g(Checking:) p Fp 150 1868 a(In) 31
b(your) f(webbro) l(wser) m(,) k(open) d(http://ez.m) n(y) -5
b(.intr) n(anet.) 59 b(This) 32 b(should) e(gi) n(v) o(e) h(you) g(the)
g(ezPublish) g(screen.) 58 b(Graphics) 150 1967 y(should) 26
b(be) g(there,) i(links) e(should) g(be) g(w) o(orking) n(,) j(althou) n
(gh) d(there) g(is) i(no) e(conten) n(t) i(in) e(the) h(database) f
(yet.) 44 b(W) -7 b(e) 28 b(will) f(add) 150 2067 y(some) 20
b(in) g(a) h(minute.) 150 2191 y(Y) -9 b(ou) 21 b(can) h(access) g(the)
g(admin) f(site) h(throug) n(h) g(http://ezadm) n(in.my) -5
b(.) n(intranet.) 29 b(Y) -9 b(ou) 21 b(can) h(log) f(in) h(using) f
("admin") g(as) h(a) h(user) 150 2291 y(and) d("pub) n(lish") h(as) g
(the) f(passw) o(ord) n(.) p Fh 150 2553 a(2.8.11) 99
b(Sample) 25 b(data) p Fp 150 2734 a(In) 20 b(orde) n(r) h(to) f(ha) n
(v) o(e) g(somethin) n(g) g(to) h(play) f(with,) g(you) f(may) h(w) o
(ant) g(to) g(insert) h(some) f(sample) g(data.) 150
2958 y(Expan) n(d) 30 b(the) h(data.tar) -7 b(.gz) 31
b(\002le) f(to) h(C:/Apache/htd) n(ocs/ezpub) n(lish_2_2) n(_x,) h
(using) e(folde) n(r) h(names.) 55 b(This) 30 b(will) h(create) 150
3058 y(some) 20 b(image) g(\002les) h(and) e(some) h(do) n(wnlo) n(ads)
h(for) e(the) i(sample) f(data.) 150 3282 y(No) n(w) 15
b(we) h(need) e(to) i(insert) f(the) g(data) g(itself) h(into) f(the) g
(database.) 23 b(There) n(fore) 15 b(open) f(http://apach) n(e.my) -5
b(.) n(intranet/p) n(hpMyAd) n(min,) 150 3382 y(select) 18
b(the) f(database) g("pub) n(lish") h(by) f(clicking) f(on) h(it) h(in)
g(the) f(left) h(frame) n(,) h(scroll) e(do) n(wn) f(past) i(the) f
(list) i(of) e(tables) g(in) h(the) f(right) 150 3481
y(frame) d(and) h(run) f(a) i(SQL) g(quer) n(y) -5 b(.) 23
b(Choose) 15 b(to) g(load) g(it) h(from) e(a) i(te) o(xt\002le.) 23
b(Bro) n(wse) 15 b(to) h(C:\\apache\\h) n(tdocs\\ezpu) n(blish_2_) n
(2_x\\sql\\da) n(ta.sql) 150 3581 y(and) k(con\002r) n(m) h(with) f
("Go".) 25 b(Again) 19 b(check) g(the) i(\002rst) f(line,) h(if) f(the)
g(e) o(x) o(ecu) n(tion) g(of) g(the) g(SQL) h(quer) n(y) g(w) o(as) g
(successful.) 150 3805 y(This) 26 b(is) g(just) g(the) f(same) h
(proced) n(ure) f(lik) o(e) h(the) f(\002rst-time-creatin) n(g) h(of) f
(the) g(database) g(\(see) h(1.3.2) n(\),) h(only) d(with) i(data.sql)
150 3905 y(instead) 20 b(of) g(pub) n(lish.sql.) p Fn
150 4151 a(Err) o(or) g(Checking:) p Fp 150 4331 a(In) 31
b(your) g(webbr) n(o) n(wser) m(,) j(open) d(http://ez.m) n(y) -5
b(.intra) n(net.) 60 b(This) 32 b(should) f(gi) n(v) o(e) g(you) f(the)
i(ezPublish) f(screen,) j(no) n(w) d(with) 150 4431 y(sample) 20
b(articles.) p Fh 150 4693 a(2.8.12) 99 b(eZ) 25 b(publish) h(and) f
(IIS) p Fp 150 4874 a(Not) 18 b(v) o(ery) f(much) g(inform) n(ation) h
(is) h(a) n(v) n(ailable) f(for) f(this) i(webserv) o(e) n(r) -5
b(.) 25 b(W) -7 b(e) 19 b(ha) n(v) o(e) f(ho) n(we) n(v) m(er) g(recei)
n(v) o(ed) f(repo) n(rts) i(that) f(since) h(IIS) 150
4974 y(does) h(not) g(ha) n(v) o(e) f(a) i(mod_) n(re) n(write) f(modu)
n(le) h(you) e(may) h(use) g(this) h(hack) p Fe 2134
4943 a(8) p Fp 2187 4974 a(instead:) p 150 5027 1410
4 v Fg 240 5082 a(8) p Ff 270 5106 a(Since) 16 b(eZ) f(publish) h(no) n
(w) g(can) g(be) f(run) h(without) g(mod_re) n(w) r(rite) g(you) f(may)
h(tak) o(e) g(look) g(at) g(chap) r(ter) f(3) g(as) h(it) f(may) h(pro)
o(vide) g(you) g(with) g(a) f(bett) r(er) g(soluti) r(on) p
150 5723 3525 4 v Fp 1871 5823 a(29) p 90 rotate dyy
eop
%%Page: 30 31
30 30 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fn 150
333 a(IIS) 22 b(Con\002gura) n(tion:) p Fp 150 513 a(-) e(Create) h
(the) f(virtual) g(hosts) g(for) g(IIS.) g(\(on) n(ly) h(tested) f(on) g
(win20) n(00\)) 150 638 y(\(here) f(comes) h(the) g(not) g(so) h(ele) o
(ga) n(nt) g(part\)) 150 762 y(-) f(In) g(the) h(virtu) n(al) g(hosts) f
(con\002g) g(for) f(the) i(user) f(site,) g(change) f(the) i(custom) e
(error) n(s) p Fe 2455 732 a(9) p Fp 2510 762 a(for) g(404) h(and) f
(405) g(to:) 254 887 y(Message) h(type:) 25 b(URL) 254
1011 y(URL:) c(/inde) o(x) n(.php) 150 1136 y(-) f(In) g(the) h(virtu) n
(al) g(hosts) f(con\002g) g(for) f(the) i(admin) e(site,) i(chan) n(ge)
g(the) f(custom) f(errors) h(for) f(404) h(and) f(405) h(to:) 254
1260 y(Message) g(type:) 25 b(URL) 254 1385 y(URL:) c(/inde) o(x) n
(_adm) n(in.php) 150 1509 y(\(if) f(you) f(encoun) n(t) i(500-) n(err) f
(you) f(may) h(need) g(to) g(rebo) n(ot) h(the) f(serv) o(er) m(,) f
(Uhhh) n(..) 26 b(I) 20 b(lo) o(v) o(e) f(MS,) 150 1634
y(it) i(gi) n(v) o(es) f(me) g(a) g(lot) h(of) f(cofee) f(brak) o(es.)
25 b(eZPub) n(lish) c(runin) n(g) g(on) e(IIS) i(is) g(unstable) n(\)) p
Fl 150 2064 a(2.9) 119 b(Mandrak) o(e) p Fp 150 2274
a(Thank) n(s) 21 b(to) g(Mark) e(Polsen) h(for) g(gi) n(vin) n(g) h(us)
f(this) h(infor) n(mation.) 150 2399 y(This) f(is) g(untested) f(by) h
(eZ) f(systems,) h(and) f(we) h(pro) o(v) n(ide) g(this) g(\223as) h
(is\224) f(without) f(an) o(y) g(form) f(of) i(guar) n(antee) g(or) f
(endo) n(rsement,) 150 2498 y(either) h(e) o(xp) n(licitly) h(or) f
(implicitly) -5 b(.) p Fh 150 2761 a(2.9.1) 99 b(Do) o(wnload) 25
b(the) g(F) n(ollo) o(wi) n(ng) p Fp 150 2941 a(Do) n(wnlo) n(ad) c
(what) f(you) f(need) g(from) p Fk 20 w(http://d) n(eveloper.ez.n) n
(o/filemanager/) n(list/23/) p Fp 20 w(and) h(install) g(the) h(rpm) n
(s!) 150 3066 y(That') -5 b(s) 20 b(all;) h(read) f(the) g(manu) n(al) h
(from) e(the) i(start) f(after) g(that,) g(and) g(install) h(eZ) f(pub)
n(lish) h(as) g(described) n(.) p 150 5455 1410 4 v Fg
240 5510 a(9) p Ff 270 5534 a(The) 15 b(eZ) h(publi) r(sh) f(de) n(v) q
(elope) r(rs) g(w) o(ant) i(to) g(point) g(out) f(that) i(this) e(does)
h(NO) m(T) e(seem) h(to) g(be) h(a) f(secure) h(w) o(orka) r(round.) j
(This) c(w) o(orkar) r(ound) g(should) h(not) f(be) 150
5613 y(used) h(in) h(an) f(en) m(vi) r(ronment) h(where) f(the) h(serv)
o(er) g(might) g(be) f(e) o(xposed) h(to) g(untruste) r(d) e(users) h
(\(i.e) h(the) g(interne) r(t\)) p 150 5723 3525 4 v
Fp 1871 5823 a(30) p 90 rotate dyy eop
%%Page: 31 32
31 31 bop Fm 150 980 a(Chapter) 44 b(3) p Fo 150 1420
a(Installi) r(ng) 52 b(eZ) f(publish) h(without) g(virtual) 150
1669 y(hosts) g(and) g(mod_r) l(ewrite) p Fp 150 2126
a(Installing) 19 b(eZ) i(pub) n(lish) g(this) g(w) o(ay) f(has) g(se) n
(v) o(eral) g(adv) n(an) n(tages:) p Fi 275 2333 a(\017) p
Fp 41 w(no) f(root) h(rights) g(need) n(ed) p Fi 275
2500 a(\017) p Fp 41 w(no) f(virtual/du) n(al) i(hosts) f(or) g(mod_) n
(re) n(write) g(needed) p Fi 275 2666 a(\017) p Fp 41
w(no) f(subdom) n(ains) i(neede) n(d) p Fi 275 2832 a(\017) p
Fp 41 w(no) e(change) g(of) h(Apache) f(con\002gu) n(ration) h(needed) p
Fi 275 2998 a(\017) p Fp 41 w(installation) f(in) i(subdir) n(ectories)
f(possible) p Fi 275 3164 a(\017) p Fp 41 w(you) f(can) h(k) o(eep) g
(you) n(r) g(old) g(docum) n(ents) h(on) f(the) g(serv) o(er) 150
3371 y(The) g(disadv) n(a) n(ntages) g(are:) p Fi 275
3579 a(\017) p Fp 41 w(the) g(URLs) h(will) g(be) f("[...]) n(/inde) o
(x.) n(php/article) n(/articleedit/[...]) n(") h(instead) f(of) g
("[...) n(]/article/articleedit/[) n(...]") p Fi 275
3745 a(\017) p Fp 41 w(ne) n(w) g(featur) n(e) h(in) f(2.2,) f(so) i
(it') -5 b(s) 21 b(not) f(as) h(well) g(tested) f(as) h(norm) n(al) g
(dual) f(hosts) g(install) p Fl 150 4050 a(3.1) 119 b(Pr) n(er) n
(equisites) p Fp 150 4260 a(The) 20 b(follo) n(win) n(g) g(softw) o
(are) g(must) g(be) h(run) n(ning) f(on) f(your) g(serv) o(er) h(and) f
(you) h(must) g(ha) n(v) o(e) f(permissions) h(to) g(use) h(it:) p
Fi 275 4468 a(\017) p Fp 41 w(PHP) g(\() p Fd(http) n(://www.php.) n
(net) p Fp(\)) f(v) o(ersion) f(4.0.4) n(pl1) h(or) g(later) -5
b(.) p Fi 275 4634 a(\017) p Fp 41 w(A) 20 b(suppor) n(ted) g
(database:) p Fn 457 4817 a(\226) p Fp 41 w(MySQL) g(\() p
Fd(http://) n(www.mysql.c) n(om) p Fp(\)) g(v) o(ersion) f(3.23) g(or) h
(later) p Fn 457 4950 a(\226) p Fp 41 w(PostgreSQL) g(\() p
Fd(http:/) n(/www.postgr) n(esql.org) p Fp(\)) f(v) o(ersion) g(7.1.3) g
(or) h(later) 150 5157 y(The) g(follo) n(win) n(g) g(softw) o(are) g
(is) h(optiona) n(l,) g(b) n(ut) f(requir) n(ed) h(for) e(some) h(modu)
n(les) h(of) f(eZ) g(publish:) p Fi 275 5365 a(\017) p
Fp 41 w(Imag) n(eMagick) 32 b(\() p Fd(http:) n(//www.imag) n
(emagick.org) p Fp -2 w(\)) h(ne) n(west) f(v) o(ersion) g(\(Need) n
(ed) h(by) f(eZ) g(article,) j(eZ) 358 5464 y(image) 19
b(catalogu) n(e,) i(and) f(all) g(modu) n(les) h(using) f(images.) 25
b(Y) -9 b(ou) 19 b(need) h(only) f(the) h(comman) n(d) h(line) f(v) o
(ersion) n(.\)) 1871 5823 y(31) p 90 rotate dyy eop
%%Page: 32 33
32 32 bop 150 138 a
 currentpoint currentpoint translate 0.42603 0.42603 scale neg exch
neg exch translate
 150 138 a @beginspecial 0 @llx 0
@lly 169 @urx 39 @ury 1690 @rwi @setspecial
%%BeginDocument: /home/vl/cvs/projects/php/publish22_branch/installation//screenshots/2.0/ezsystems.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (ezsystems.eps)
%%CreationDate: (Thu Jan 25 18:40:15 2001)
%%BoundingBox: 0 0 169 39
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 0
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 170 40
userdict begin
%%BeginData:
DisplayImage
0 0
170 40
12.000000
170 40
1
0
0
16
ffffff
000000
f08c00
bbbbbb
8a8a8a
454545
9d9d9d
efefef
111111
212121
666666
555555
cfcfcf
313131
767676
dfdfdf
00a900a900a900a900a90005011900890005011900890005010100150101008900050101
001501010089000501010015010100890005010100150101008900050101001501010089
000501010015010100190400010a0400002a04010035000501010015010100190400010a
0400002a01010035000501010015010100220600010008000c00002a0101003500050101
00070113000c070003010700000c0c00080001000300000a070003010f00001207000301
0f0000050101000907000301070000090700030100040f0003000c000007070003010f00
00060005010100070113000a0c000500010305000f000009070008000100040000090c00
0500010308000a000000070001010f0000040f000101070000000c000500010308000a00
000103000106030000020c000500010305000f000003010107000a000102080006000000
03000d00010209000c0000030c000500010308000a0000040005010100070101020f0101
00090c00080001000b000401090001000800070000080d0001000a0000090c0008000100
0b0004010500010100010a00010004000004040001000a0000000c00080001000b000401
0500010100010c000500010105030c0000010c00080001000b0004010900010008000700
000201010800010009000500090001010a0001010d00050008000100090000020c000800
01000b0004010500010100040005010100070101020f0101000909000100060000030b00
0100040000070a0001000d00000a0a000100040000030700040000010300010009000004
090001000c0000000a000100040000030700040000030101000609000100060000030b00
01000400000201010d0003000002050001010b000f000001070008000100060000010a00
0100040000030700040000040005010100070101020f01010008060001000a0000040c00
01000d0000060400010009000700000a05000100060000080d0001000600000206000100
0d000001050001000600000901010005060001000a0000040c0001000d00000201010004
06000100050000040a00010004000001050001000600000a0005010100070101020f0101
00080a00010004000305010100050300010008000c00000b0e0001000900060007000006
06000100050000020b000100060000010e0001000900060007000007010100050a000100
040003050101000201010004030001000500000404000100040000010e00010009000600
070000080005010100070101020f010100080500010900040c00080001000600000c0700
0d00010209000b00060000030700080001000f0000000f0001000800000207000d000102
09000b000600000401010005050001090002010100040300010005000004040001000400
000107000d00010209000b00060000050005010100070101020f01010008050001000400
0307000307000d0001000400000f06000b00090001020d0000030a0001000e0000000400
01000e00000406000b00090001020d000003010100050500010004000307000201010004
0300010005000004040001000400000306000b00090001020d0000040005010100070101
020f010100080a0001000600000b0b0001000b0000130700060008000100060000020c00
010008000000090001000f000007070006000800010006000002010100050a0001000600
000a01010004030001000500000404000100040000060700060008000100060000030005
010100070101020f01010008060001000500000a0e0001000d0007000015040001000400
0003050001000b0001000b00000a040001000400000201010005060001000500000a0101
00040300010005000004040001000400000804000100040000030005010100070101020f
010100080700080001000e00000403000e0000010600010008000f00000f0a0006000004
0b0001000600000306000102060000030a00060000040b00010006000002090001000300
00040700080001000e00000403000e000002010100040300010005000004040001000400
00010a00060000040b000100060000030005010100070101020f010100090c0008000100
09000e0004000e0009000100050000010500010a050000060500010009000a0004010d00
01000d00000508000100090000040500010009000a0004010d0001000d00000304000100
08000e0004000d00030000010c000800010009000e0004000e0009000100050000020101
0004030001000500000404000100040000010500010009000a0004010d0001000d000004
0005010100070101020f0101000a0c000b0001040b00060000010500010a050000060600
0b0001040a00070000050a0001000400000406000b0001040a000700000307000b000103
030000020c000b0001040b00060000020101000403000100050000040400010004000001
06000b0001040a00070000040005010100070101020f0101000d0302001b030200070700
0800010007000007030200080f000301070000060302001c030200070005010b020f0101
0037040001000a00004a0005010b020f01010037090001000c00004a000f0101020f0101
0036060001000d00004b000f0101020f01010036060004000300004b000f01130085000f
0113008500a900a900a900a900a9
%%EndData
end
%%PageTrailer
%%Trailer
%%BoundingBox: 0 0 169 39
%%EOF

%%EndDocument
@endspecial 150 138 a
 currentpoint currentpoint translate 1 0.42603 div 1 0.42603 div scale
neg exch neg exch translate
 150 138 a 150 172 3525 4 v Fl 150
333 a(3.2) 119 b(eZ) 30 b(publi) r(sh) f(installation) p
Fh 150 560 a(3.2.1) 99 b(Installing) 24 b(in) h(one) g(dir) n(ector) r
(y) f(\(Recommend) r(ed) h(install\)) p Fn 150 740 a(3.2.1) n(.1) 82
b(Installing) 21 b(the) f(\002les) h(f) n(or) f(eZ) h(publish) p
Fp 254 921 a(1.) 41 b(Extra) n(ct) 19 b(the) f(eZ) g(publish) f
(\002les) i(\(if) g(you) e(w) o(ant) h(some) g(e) o(xam) n(ple) h
(data,) f(e) o(xtr) n(act) p Fk 19 w(data.tar.g) n(z) p
Fp 19 w(too\)) f(and) h(if) g(the) o(y) g(are) 358 1020
y(not) h(on) h(the) g(serv) o(er) g(yet,) g(transfer) f(them) h(to) g
(the) g(serv) o(er) g(in) g(a) h(directo) n(ry) f(of) g(your) f
(choice.) 358 1120 y(\(e) o(x) n(ample:) p Fk 25 w(/home/userA) n
(/ezpublish) p Fp 20 w(reach) n(able) h(by) p Fk 20 w(http://www.y) n
(ourserver.com/) n(ezpublish) p Fp(\)) 254 1286 y(2.) 41
b(Cop) o(y) p Fk 16 w(installa) n(tion/htaccess) n(-nVH) p
Fp 17 w(to) p Fk 16 w(.htaccess) p Fp 16 w(in) 17 b(the) f(top) g
(director) n(y) h(of) f(your) f(eZ) i(pub) n(lish) g(installation.) 358
1386 y(\(e) o(x) n(ample:) p Fk 25 w(/home/userA) n(/ezpublish/.h) n
(taccess) p Fp(\)) 254 1552 y(3.) 41 b(Edit) 20 b(the) g(\002le) p
Fk 21 w(sitedir.i) n(ni) p Fp 21 w(and) g(set) h(the) f(righ) n(t) h
(director) n(y) -5 b(.) 358 1651 y(\(e) o(x) n(ample:) p
Fk 25 w(/home/userA) n(/ezpublish/) p Fp(\)) p Fn 150
1897 a(3.2.1) n(.2) 82 b(Database) 20 b(installatio) n(n) p
Fp 150 2078 a(If) g(you) f(ha) n(v) o(e) h(shell) h(access) f(to) h
(create) f(the) g(databa) n(se,) h(see) g(section) f(2.4.) n(2.) 254
2286 y(1.) 41 b(Create) 20 b(a) h(datab) n(ase) g(\(e.g.) p
Fk 24 w(publish) p Fp(\)) 254 2452 y(2.) 41 b(Create) 20
b(a) h(user) f(and) f(gi) n(v) o(e) h(him) g(perm) n(issions) h(to) f
(access) h(it) 254 2597 y(3.) 41 b(Create) 15 b(the) g(data) g
(structures) g(for) f(eZ) i(pub) n(lish) g(with) f(\002le) p
Fk 16 w(sql/publish_m) n(ysql.sql) p Fp 15 w(or) p Fk
15 w(sql/publis) n(h_postgresql.) n(sql) p Fp 254 2742
a(4.) 41 b(If) 22 b(you) f(e) o(xtracted) p Fk 21 w(data.tar.g) n(z) p
Fp 23 w(befor) n(e,) i(you) f(should) f(also) i(\002ll) g(the) f
(database) g(with) g(the) g(e) o(xample) f(data) h(in) h(\002le) p
Fk 358 2821 a(sql/data) n(_mysql.sql) p Fn 150 3067 a(3.2.1) n(.3) 82
b(Finishing) 21 b(the) g(install) p Fp 254 3248 a(1.) 41
b(Rename) p Fk 19 w(site.ini) p Fp 20 w(to) p Fk 20 w(site.ini.php) p
Fp 19 w(and) 20 b(edit) g(it.) 254 3414 y(2.) 41 b(T) -6
b(est) 20 b(if) h(you) e(can) h(access) p Fk 21 w(sitedir.ini) p
Fp 19 w(with) g(a) h(WWW) h(bro) n(wser) 358 3513 y(\(e) o(x) n(ample:)
p Fk 25 w(http://www.) n(yourserver.co) n(m/ezpublish/si) n(tedir.ini) p
Fp(\).) 358 3712 y(a\)) e(If) g(you) f(get) h(a) h(\223F) o(orb) n
(idden\224,) e(e) n(v) o(ery) n(thing) h(is) h(goo) n(d) g(and) e
(safe.) 358 3812 y(b\)) k(If) h(you) g(get) g(the) g(\002le,) h(then) f
(your) f(serv) o(er) g(doesn') o(t) g(obe) o(y) p Fk
23 w(.htacces) n(s) p Fp 25 w(\002les.) 38 b(T) m(ry) 23
b(the) h(ne) o(xt) g(install) h(in) f(section) 358 3912
y(3.2) n(.2,) g(it) g(is) g(much) e(safer) h(then.) 34
b(Otherwise) 23 b(you) f(can) i(still) g(use) f(eZ) h(pub) n(lish,) h
(b) n(ut) e(ha) n(v) o(e) g(to) g(remem) n(ber) g(that) h(it) g(is) 358
4011 y(not) 19 b(as) i(safe) g(as) g(it) g(cou) n(ld) g(be.) 254
4177 y(3.) 41 b(Finished!) n(!) 358 4277 y(Go) 27 b(to) p
Fk 28 w(http://www) n(.yourserver.c) n(om/ezpublish/) n(index_admin.ph)
n(p) p Fp(,) j(login) d(as) p Fk 28 w(admin) p Fp 28
w(with) g(passw) o(ord) p Fk 358 4377 a(publish) p Fp
27 w(and) g(chan) n(ge) h(you) n(r) g(passw) o(ord.) 46
b(Then) 27 b(go) g(to) p Fk 28 w(http://) n(www.yourserver) n
(.com/ezpublis) n(h) p Fp(.) 48 b(Ha) n(v) o(e) 358 4476
y(fun) n(.) p Fh 150 4739 a(3.2.2) 99 b(Installing) 20
b(with) h(shell) g(access) g(on) g(ser) o(v) o(er) g(and) g(tw) o(o) g
(separate) h(dir) n(ectories) g(f) n(or) e(eZ) i(pub-) 449
4855 y(lish) p Fp 150 5036 a(If) 28 b(you) f(ha) n(v) o(e) h(shell) g
(access) h(on) f(you) n(r) h(serv) o(e) n(r) g(and) e(you) h(ha) n(v) o
(e) f(the) h(possibility) g(to) g(create) g(director) n(ies) h(which) f
(are) g(not) 150 5135 y(accessible) 15 b(by) g(WWW) i(bro) n(wser) n
(s,) g(you) e(can) g(use) g(the) g(script) p Fk 16 w(ezinsta) n
(ller.sh) p Fp(.) 23 b(It) 16 b(will) g(ask) f(you) f(all) i(rele) n(v)
n(an) n(t) g(questions) 150 5235 y(and) k(install) g(eZ) h(pub) n(lish)
g(in) f(a) h(v) o(ery) e(secure) h(w) o(ay) -5 b(.) p
150 5723 V 1871 5823 a(32) p 90 rotate dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
