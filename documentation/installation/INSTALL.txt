

eZ publish 2.2 Installation Guide



The double squares and eZ are trademarks belonging to eZ
systems of Norway, registration number NO 981 601 564 (http://www.brreg.no/oppslag/enhet/detalj.ssc?orgnr=981601564).

All images and text herein is Copyright 2001 eZ systems.

eZ publish is a software package released under the GPL lisence
(http://www.gnu.org/copyleft/gpl.html), its primary point
of distribution and information is http://developer.ez.no/

Table of Contents

Chapter 1 Introduction
    1.1 Pre-Configured Hosting
    1.2 Pre-Configured Hardware
Chapter 2 Installing eZ publish (standard method)
    2.1 Prerequisites
        2.1.1 Needed Privileges
        2.1.2 Needed Software
        2.1.3 Which Software is Already Installed?
            2.1.3.1 Systems Using RPM
        2.1.4 Mandrake
        2.1.5 IRIX
        2.1.6 RAQ 3
        2.1.7 Windows
        2.1.8 Other Systems
        2.1.9 Installation of Required Software
        2.1.10 Important Notice
    2.2 Compile Configuration
        2.2.1 PHP
            2.2.1.1 Unpacking
            2.2.1.2 Configuration
            2.2.1.3 Compilation
            2.2.1.4 Installation
            2.2.1.5 Compiling the php module on RedHat 7.x, step by step
    2.3 Apache Configuration
        2.3.1 Dual Virtual Host
            2.3.1.1 Configuring Through httpd.conf
            2.3.1.2 Configuring php.ini
            2.3.1.3 Configuring Through .htaccess
    2.4 eZ publish Installation
        2.4.1 Program Files
        2.4.2 Database 
            2.4.2.1 First time installation (MySQL)
            2.4.2.2 PostgreSQL configuration
            2.4.2.3 PostgreSQL setup
            2.4.2.4 First time installation (PostgreSQL)
            2.4.2.5 Updating the Installation
        2.4.3 Setting up the cronjob job
    2.5 Now What?
        2.5.1 Post Install Checklist
    2.6 Troubleshooting
        2.6.1 Problems During Installation
            2.6.1.1 Missing Compiler/Can not Compile (C++/C)
            2.6.1.2 I am getting linking errors regarding kerberos when trying to build PHP
        2.6.2 Problems After Installation
            2.6.2.1 Permission Denied
            2.6.2.2 Can not see Images
            2.6.2.3 Warning about Temp Directory
            2.6.2.4 After installing my new php module, apache dies immediately.
    2.7 Installing on RAQ 3
        2.7.1 Getting SSL to Work
    2.8 Installing on Windows 
        2.8.1 Requirements and notes
        2.8.2 Apache
        2.8.3 PHP4
        2.8.4 MySQL
        2.8.5 phpMyAdmin
        2.8.6 ImageMagick
        2.8.7 Determing and publishing your host names
        2.8.8 eZ publish 2.2.x
        2.8.9 Creating the database
        2.8.10 Virtual hosts and rewrite rules
        2.8.11 Sample data
        2.8.12 eZ publish and IIS
    2.9 Mandrake
        2.9.1 Download the Following
Chapter 3 Installing eZ publish without virtual hosts and mod_rewrite
    3.1 Prerequisites
    3.2 eZ publish installation
        3.2.1 Installing in one directory (Recommended install)
            3.2.1.1 Installing the files for eZ publish
            3.2.1.2 Database installation
            3.2.1.3 Finishing the install
        3.2.2 Installing with shell access on server and two separate directories for eZ publish



Introduction<chptr: introduction>

"He who asks is a fool for five minutes, but he who does
not ask remains a fool forever."
-  Chinese proverb

eZ publish is a content management system, among a lot of
other things. This installation manual will try to cover
the job of installing eZ publish on your server.

Since version 2.2 eZ publish has a new possible way to be
installed: without virtual hosts and mod_rewrite. This makes
it possible for people, who don't have a dedicated server
or a specialized eZ publish hoster, to install eZ publish
on their accounts as long as they have PHP and a supported
database (e.g. mySQL or PostgreSQL). 

This opens some new options for installing:

If you have an account at a webhoster with PHP and mySQL,
your option should be chapter [chpt: nVH],
because you won't be able to install eZ publish as it's
explained in chapter [chpt: dedicated server].

If you have a dedicated server with Apache and mySQL already
running and you don't want to mess with the Apache configuration,
then chapter [chpt: nVH] might be of interest
of you. 

If you have a dedicated server and want some help on how
to install all needed software and eZ publish on it, then
chapter [chpt: dedicated server] is for you.

1.1 Pre-Configured Hosting

It is possible to get pre-configured hosting services where
you can install and manage your eZ publish site with ease.
Read more about our hosting partners at eZ systems web site
(http://ez.no/shop/hosting).

1.2 Pre-Configured Hardware

It is possible to order pre-configured hardware from eZ systems.
You can order through or web shop (http://shop.ez.no).

A line starting with a hash-sign "#"
are input from the user to the shell.

<chpt: dedicated server>Installing eZ publish (standard([footnote] An alternative install method is described in
chapter [chpt: nVH])  method)

This chapter is mainly intended for installation on a Red
Hat Linux system, but a lot of friendly people have contributed
information for installation on other operating systems,
take a look at chapter 2 and learn which systems those are.

Most of what is described here regarding Red Hat installation
can also be applied to other installations, especially if
your system uses RPM for installation. For other systems
you would need to do a lot of compiling yourself to make
this work, or apply the system's own package manager.

Finding packages can be done dirctly from vendor sites, though
you might not be guaranteed that you'll find the package
you need. In such instances you need to download the source
directly from the software developer.

Different distribution sites for different Unix systems are:

* Debian (http://www.debian.org/distrib/ftplist)

* Mandrake, see chapter [chptr: mandrake].

* IRIX (http://freeware.sgi.com/)

* Red Hat Linux (http://www.redhat.com/apps/download)

* SuSE Linux (http://www.suse.com/us/support/download/index.html)

* Sun (http://www.sunfreeware.com/)

The addresses to the software developers will be given where
appropriated in the text.

You can also try "The Written Word" (ftp://ftp.thewrittenword.com/packages/free/by-name/gcc-2.95.2/)
for binaries for Solaris 2.5.1, 2.6, 2.7/SPARC, 2.7/Intel,
IRIX 6.2, 6.5, Digital UNIX 4.0D, HP-UX 10.20, and HP-UX.

2.1 Prerequisites<chptr: pre-requisites>

2.1.1 Needed Privileges

For the standard installation of eZ publish you will need
to have the following privileges on your system:

* Access to Apache's httpd.conf for creating two virtual
  hosts, enabling the rewrite engine and creating rewrite
  rules. However, this is not needed if you want to run
  eZ publish in nVH mode. More information aboutthe nVH
  mode is available in chapter [chpt: nVH].

* Access to compiler, only needed if you can't use any of
  the pre-compiled packages available. (You will have to
  install the gcc compiler on your system, see chapter [chptr: introduction]
  for a list of sites providing software for different Unixes.)

* Access to a shell (You must run certain scripts during
  installation, and sometimes for maintenance.)

* Access to cron jobs (Only needed if you want to use the
  eZ news feed module for regular updates of headlines imported
  from other sites.)

* Access to Apache's modules

* Access to a MySQL or PostgreSQL database

* You might also need the privilege to add new libraries
  to your system.

2.1.2 Needed Software

You also need to download and install the following packages,
if they aren't present on your system already:

* A database. Currently, eZ publish suppports MySQL (http://www.mysql.com)
  version 3.23 or later and PostgreSQL (http://www.postgresql.org)
  version 7.1.3 or later.

* ImageMagick (http://www.imagemagick.org/) newest version
  (Needed by eZ article, eZ image catalogue, and all modules
  using images. You need only the command line version.)

* Apache (http://httpd.apache.org/) latest 1.3 release. (It
  is always recommended to run the latest Apache release,
  though eZ publish shouldn't be very picky with the Apache
  versions. We've used eZ publish with Apache 1.3.13, some
  have reported that Apache 1.3.9 isn't useful.)

* mod_rewrite. This apache module is included in all recent
  versions of RedHat Linux. If you use an other distro,
  you may need to recompile apache with mod_rewrite

* Any and all modules you need for apache in addition to
  mod_php. (http://modules.apache.org/)

* PHP (http://www.php.net/) version 4.0.4pl1 or later. Version
  4.0.6 is recommended. You need the source code version
  from this site, for windows you can just download the
  binary. (eZ publish uses references for objects and foreach
  loops. Only version 4.0.4pl1 and later supports both of
  these features satisfactorily.)

* eZ publish (http://developer.ez.no/) verision 2.0 or later
  stable releases.

The libraries and php are packaged pre-compiled for Linux
i386 on http://developer.ez.no. The software is listed in
the order of installation.

You should also find a list of RPMs at http://www.brandish.co.uk/phprpm

Important release note:

eZ publish version 2.2.2 does not require neither QDom or
libxml as previosly releases did. In this release, eZ publish
uses it own xml parser : eZ xml. Optioninal support for
libxml will probably be reintroduced in a future version
of eZ publish

2.1.3 Which Software is Already Installed?

2.1.3.1 Systems Using RPM

RPM is a system for distributing pre-compiled software. The
packages also contain pre-configured settings and initialisation
files, leaving almost nothing to the user, except deciding
what to install.

To check if a package is available on your system you can
run the following command (RPM based systems "rpm
-qa | grep <name of program/library>".
If you need to know where you can find the different files
from that package you can follow up on the previous command
with the following "rpm -ql <rpm name>".
RPM name is one of the returned names from the previous
command, example([footnote] A line starting with a hash-sign "#" are input
from the user to the shell.) :


    # rpm -qa | grep libxml

    libxml-1.8.7-80

    libxmld-1.8.7-80

    # rpm -ql libxml-1.8.7-80

    /usr/bin/xml-config

    /usr/lib/libxml.so.1

    /usr/lib/libxml.so.1.8.7

    /usr/share/doc/packages/libxml

    /usr/share/doc/packages/libxml/AUTHORS

    /usr/share/doc/packages/libxml/COPYING

    /usr/share/doc/packages/libxml/COPYING.LIB

    /usr/share/doc/packages/libxml/NEWS

    /usr/share/doc/packages/libxml/README

    /usr/share/doc/packages/libxml/TODO

2.1.4 Mandrake

First read chapter [chptr: mandrake],
then continue reading the manual from here.

2.1.5 IRIX

By accessing the software manager (you must be root) you
can get a list of installed software, scroll or search that
list to find the packages you're interested in. Double click
on the tabs to the left to get information about where specific
files are installed.

2.1.6 RAQ 3

There is a separate chapter [chptr: raq 3]
in this manual describing installation on a RAQ 3 server.
It was kindly provided by Chris Mason, 

2.1.7 Windows

Windows installation is described in its own chapter [chptr: windows].

2.1.8 Other Systems

On other systems you should read the documentation for that
system to learn how to find out what software is already
installed.

You could try to use the command "find"
to find the software. It is used thus: "find
. -name \*<program name>\*" from
the /usr/, /local/ , /lib/, /share/ directories. In extreme
cases you could try from the root of the system, but this
will take a long time and will also hog resources on your
computer. Therefore we urge you to learn how to use the
proper installation features of your system to find the
software already installed.

2.1.9 Installation of Required Software

If you've found pre-compiled versions of all the software
packaged for use with an installation tool, you just have
to install that software using the tool. Instructioins for
its usage is often found using the command "man
<installation tool name>" or by
reading your system's documentation or the supplier's website.

If you've had to download source code you will find instructions
on how to compile and install the software you've downloaded
at the software developer's website. This requires a bit
of knowledge and you should only undertake this if you feel
confident about the job.

This manual will only cover configuration of the software
needed and compilation of PHP to use the other software.

2.1.10 Important Notice

You should read all the README, INSTALL and similar files
found with the software packages you download. They often
contain tips on how to configure, compile and install the
software on your system. It will save you a lot of time
and aggravation if you follow instructions supplied with
the software.

If problems arise during installation of the software, please
turn to the suppliers support forums, mailing list archives
and FAQs, your questions will often be answered there. If
the supplier's forums doesn't seem to help you, you should
check the support forums at our site.

You should always do a search of the forums before posting
any questions.

2.2 Compile Configuration

2.2.1 PHP

Important : YOU NEED TO RECOMPILE PHP. No known Linux distros
does yet have all the php features required by eZ publish.
This means that you need to compile the php module from
source.
You may find precompiled binaries for your system at [http://developer.ez.no||the eZ publish web site, ].
Take a look at the "Contributions"
section in the download area.

2.2.1.1 Unpacking

After you have downloaded PHP you need to unpack it somewhere
where you can compile and configure the software. To unpack
run the command:


    # tar zxvf php-4.0.x.tar.gz


Where the x is the version of php you've downloaded. Then
you need to move into the directory you extracted php into:


    # cd php-4.0.x

2.2.1.2 Configuration<chptr: PHP configuration>

You'll need either an apache module or a command line (CGI)
version of PHP to use eZ publish on your website. We recommend
you use PHP as an apache module. You will also need the
command line version if you want to use the cron jobs for
periodical updates of the eZ news feed module.

Thus for our recommended installation of PHP you need both
the command line and module versions of PHP.

Common

Both the command line and apache module versions need to
have the following configurations added to the configuration
tool:

--enable-trans-sid This lets PHP use session id's which
  don't rely on cookies. It does not disable normal cookie
  based sessions.
  (http://www.php.net/manual/en/install.configure.php#install.configure.enable-trans-sid)

--with-mysql This tells PHP that the mysql functionality
  should be used.
  (http://www.php.net/manual/en/install.configure.php#install.configure.with-mysql)

--disable-magic-quotes This tells PHP to disable magic
  quotes by default. you can also turn this feature on and
  off on a directory by directory basis in either the ".htaccess"
  files (if you use them) or in the setup of the virtual
  server in "httpd.conf".

IMORTANT : From version 2.1([footnote] eZ publish versions prior to 2.1 required magic
quotes to be enabled)  onwards magic quotes must be turned off for eZ publish to
work properly.
(http://www.php.net/manual/en/install.configure.php#install.configure.enable-magic-quotes)

--with-imap This configures PHP to include imap support.
  This is used by eZ mail module. This parameters require
  ssl support. Imap does also have bindings to kerberos.
  This caused some linking problems on RedHat Linux 7.0
  and RedHat Linux 7.1. Either you have to install the kerberos
  updates([footnote] Installing the kerberos updates and the other
updates for these operating systems is highly recommended)  released by RedHat or apply type this command before you
compile php : 

$ export LDFLAGS="-L/usr/kerberos/lib -lkrb5 -lgssapi_krb5 -lpam"

--with-openssl This will enable ssl support in PHP

You should also go through the web page: http://www.php.net/manual/en/install.configure.php
and make sure that there isn't other functionality you would
like to have included.

Command Line

The default is to create a command line version of PHP. Therefore
you don't need to add more configuration options for this.

Apache Module

To build an apache module you need to add:

--with-apxs This compiles PHP as an apache module. 
  (http://www.php.net/manual/en/install.configure.php#install.configure.with-apxs)

Other Web Servers

We haven't tested our software with other web servers than
apache. If you need to try out other web servers, read this
document http://www.php.net/manual/en/install.configure.php#install.configure.servers
to learn how you configure for the web server you will be
using.

Creating the Configuration

Now you just have to run the "./configure"
program with the appropriate configuration directives which
we discussed in the preceeding sections, for an apache module
you'd do the following:


   # ./configure --enable-trans-sid --with-mysql --enable-trans-sid
--disable-magic-quotes --with-imap --with-openssl
    --with-apxs


Remember that to compile a script/cgi version you'd need
to change that line to:


    # ./configure --enable-trans-sid --with-mysql --enable-trans-sid
--disable-magic-quotes --with-imap --with-openssl
    

2.2.1.3 Compilation

To compile you need to run the command "make":


    # make

2.2.1.4 Installation

To install your new PHP package you need to run the following
command:


    # make install

2.2.1.5 Compiling the php module on RedHat 7.x, step by step

First download the source from www.php.net. You should get
a file called something like

php-4.0.6.tar.gz


First, unpack the tarball:

$ tar -xzf php-4.0.6.tar.gz


Now, enter the source directory

$ cd php-4.0.6


Apply the kerberos workaround if necessary (se chapter [chptr: PHP configuration]
for more info):

$ export LDFLAGS="-L/usr/kerberos/lib -lkrb5 -lgssapi_krb5
-lpam"


Run the configure script:

$ ./configure --with-apxs=/usr/sbin/apxs --enable-ftp --enable-trans-sid
--with-config-file-path=/etc/httpd --with-mysql=/usr --with-pgsql=/usr
--enable-inline-optimization --with-ttf --with-gd --enable-gd-native-ttf
--with-imap --includedir=/usr --with-openssl=/usr --with-zlib-dir=/usr
--with-openssl=shared,/usr


Compile the module:

$ make


Install the module, either automaticly or manually.
Manually : 

$ su

# cp .libs/libphp.so /usr/lib/apache

Automaticly:

$ su

# make install


Restart apache:

# /etc/rc.d/init.d/httpd restart


Verify that everything went OK.
Verify that apache was able to start:

# ps ax | grep httpd


Check the apache log

# tail -f 50 /var/log/httpd/error_log


IMPORTANT

When compiling php, please read chapter [chptr: Troubleshooting].
Especially, take note of chapter [chptr: openssl problem on redhat].
It might save you for hours with debugging

2.3 Apache Configuration

If you don't want to change the Apache configuration, go
to chapter 2. Please take notice of the rewrite rules. They
have been changed since the previously versions.

2.3.1 Dual Virtual Host<sec: dual virtualhost>

2.3.1.1 Configuring Through httpd.conf

This set up is based on having two different virtual hosts
for your administration back-end and the main site. The
main site would typically be known as "www.yoursite.com"
and the administration would be "admin.yoursite.com";
the names are up to you, theoretically you could have different
names, for example "mysite.yoursite.com"
and "administration.mysite.com".

The virtual host is configured through the "httpd.conf"
file which is the main configuration of Apache. Following
is an example of such a host, modify it to reflect your
own installation and preferences, but before that be sure
to add the "NameVirtualServer"
directive to the configuration file. The directive is "NameVirtualServer
ip-address" where the ip address is the address
where the server will receive requests (http://httpd.apache.org/docs/mod/core.html#namevirtualhost).

You should consider using the utility which we have online
for creating the configuration. The URL is http://developer.ez.no/virtualhost
it will generate a setup with the latest needed information.
The presented configuration herein might be slightly outdated,
so we recommend the online tool.

User Site

    # User site

    <VirtualHost your.ip.addr.no>

      <Directory /your/docroot>

        Options FollowSymLinks

        AllowOverride None 

      </Directory>

      RewriteEngine On

      

      RewriteRule .*/ezmediacatalogue/catalogue/(.*)$
/your/docroot/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",L]

      RewriteRule ^/stats/store/(.*).gif$ 
/your/docroot/ezstats/user/storestats.php [L]

      RewriteRule ^/filemanager/filedownload/([^/]+)/(.*)$ 
/your/docroot/ezfilemanager/files/$1 [T="application/oct-stream",L]

      RewriteRule ^/xmlrpc.*$ /your/docroot/index_xmlrpc.php
[L]

      RewriteRule !\.(gif|css|jpg|png|jar)$
/your/docroot/index.php

      ServerAdmin your.e-mail@address

      DocumentRoot /your/apache/documentroot/publish_dist

      ServerName your.domain.com

    </VirtualHost>

Admin Site

  # Admin site 

  <VirtualHost your.ip.addr.no>

    <Directory /your/docroot>

        Options FollowSymLinks

        AllowOverride None 

    </Directory>

    RewriteEngine On

    RewriteRule .*/ezmediacatalogue/catalogue/(.*)$
/your/docroot/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",L]

    RewriteRule !\.(gif|css|jpg|png|jar) /your/docroot/index_admin.php

    ServerAdmin your_mail@domain.no

    DocumentRoot /your/apache/documentroot/publish_dist

    ServerName admin.yourdomain.org

  </VirtualHost>


The format of the "httpd.conf"
file is covered at http://httpd.apache.org/docs/ for a complete
understanding of the above information you'll need to read
that documentation.

The directory "/your/docroot/"
is the directory where you extracted eZ publish.

Error Checking

You can check that everything is correct with your rewrite
rules by running "apache -s",
which will check for virtual hosts. There should also be
an error log (consult the apache documentation) which you
can read to check for errors.

Explanation of the Rewrite Rules

A rewrite rule contains three arguments. The third argument
is optional. The first argument describes a (reg exp([footnote] For an introduction to regular expressions, take
a look at http://zez.org/article/articleview/11/) ) pattern which is applied to the URI. If the URI match the
regular expression, the URI is substituted with the second
argument . A last argument can be used to give mod_rewrite
special flags so that it's behaviour will differ from the
default. The syntax for a rewrite rule can be written in
this general form:

     RewriteRule Pattern Substitution [FLAGS]


The rewrite rules for eZ publish do the following:

     RewriteRule .*/ezmediacatalogue/catalogue/(.*)$
/your/docroot/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",L]

This rewrite rule states that every URLs containing the string
"/ezmediacatalogue/catalogue/"
shall be served from "/your/docroot/ezmediacatalogue/catalogue/".
The ".*" means zero or more characters of any
type. When this is written in parenthesis like at the end
of the argument, these characters in inserted in the variable
$1. The result of this is that the filename is inserted
into the variable $1. The trailing $ in the pattern argument
is a special meaning in a regular expression. It is the
a symbol for the end of the line. In the substitution argument,
the content of variable $1 is then appended to the path
"/your/docroot/ezmediacatalogue/catalogue/"
so that the correct file is served.
An result of this rewrite rule is that a file in the mediacatalog
will be served independet if which user is logget on. Permissions
on the media file will not checked if the user knows the
filename. This will be fixed in a later version of eZ publish.


      RewriteRule ^/stats/store/(.*).gif$ 
/your/docroot/ezstats/user/storestats.php [L]


This says that everything served from "/stats/store/"
should be served by the storestats.php script. This is used
by the statistical module

      RewriteRule ^/filemanager/filedownload/([^/]+)/(.*)$ 
/your/docroot/ezfilemanager/files/$1 [T="application/oct-stream",L]


This says that everything served from "/filemanager/filedownload/"
should be redirected to fetch information from "publish_dist/ezfilemanager/files".
In other words, when people downloads a file from the filemanager,
the file is served from the directory specified in the second
part.

The "\^{ }" just after "RewriteRule"
says that evertything which starts with this, in other words
it is a start of line marker. When working with an URL that
is from the root of your site, ie. the part from the first
slash after your domain name.

The "$" sign is used to mark the end of line, in
order to remember the full line.

The part "[T="application/oct-stream",L]"
means that everything which is matched shall be of the specific
mime type ("application/oct-stream",
ie. binary download). The ",L"
part means stop the rewrite process and don't apply any
more rewrite rules if this rewrite rule matches .


      RewriteRule ^/xmlrpc.*$ /your/docroot/index_xmlrpc.php
[L]

This rewrite rule is required if you want to connect to your
eZ publish site with eZ publish Desktop Edition. eZ publish
Desktop Edition is a GUI client for Linux and Windows. With
this application you can edit articles in a WYSIWYG environment,
no need to remember the different tags.

The last rewrite rule

      RewriteRule !\.(gif|css|jpg|png|jar)$
/your/docroot/index.php


is found in both sites (admin and user). This means that
every file, except gif, css, jpg and png (and files matched
against the previous rule when in the user site) should
be redirected to the file in the second part, ie. the index.php
or index_admin.php file. The reason for this is that we
don't want anyone trying to get direct access to anything
which might be sensitive, or revealing about the site's
operation.

If you compiled PHP with magic quotes; or other software
relies on PHP using magic quotes you can add the following
line into each virtual host section:


    php_flag magic_quotes_gpc off

    php_flag magic_quotes_runtime off


2.3.1.2 Configuring php.ini

Magic quotes may also be turned of in php. This will disable
magic quotes:

magic_quotes_gpc = Off

magic_quotes_runtime= Off

2.3.1.3 Configuring Through .htaccess

At present, configuring the rewrite rules in .htaccess files
is not supported. However, you may switch of magic quotes
in an .htaccess file.

Note: You must set up apache to accept this.

User Site

In your document root (/path/to/index.php/) create a file
called ".htaccess" containing the following text:


    php_flag magic_quotes_gpc off

2.4 eZ publish Installation

2.4.1 Program Files

The next step is to install the eZ publish package in your
document root directory. First you need to unpack the software
in a temporary directory:


    # cd /tmp

    # tar zxvf /path/to/ezpublish-2.0.tar.gz


The next step is to move the files to your document root:


    # mv /tmp/publish_dist /your/apache/documentroot


When all this is done you need to tell eZ publish a little
about the site you're running. You'll need to edit the "site.ini"
file which you will find in the document root:


    # cd /your/apache/documentroot

    # vi site.ini


Instead of vi you can use your preferred text editor. You'll
need to add information about the username, hostname and
password of your database. More information on what you
can do with "site.ini"
can be found in the "eZ publish Customisation
Guide".

The next important step is to run the script "modfix.sh". 


    # ./modfix.sh


2.4.2 <sec: Database (dual hosts)>Database 

Some people might prefer to use phpMyAdmin (http://www.phpwizard.net/projects/phpMyAdmin/)
for most of this part; we can not help you with installation
of that program, though.

2.4.2.1 First time installation (MySQL)

Now you need to create a database in MySQL, the default name
we use is publish, but you can change that to whatever pleases
you.


    # mysqladmin create publish


Add a publish user in MySQL. To add a user you can use the
MySQL client to log on to mysql and then create the user:


    # mysql > grant all on publish.* to publish@localhost

    identified by "secret";


where secret is your password. Then you need to add the default
eZ publish data into your newly created database:


    # mysql -uroot -p publish < sql/publish_mysql.sql

Adding Pre-Defined Data

If you want to add the pre-defined data of the distribution
you shouldn't add any data manually to the site before executing
these commands.

First we need to add files and images which are needed by
the database.


    # tar zpxvf data.tar.gz


Then we need to run "modfix.sh"
to make sure that everything is readable.


    # ./modfix.sh


Then we need to send the SQL data into the database:


    # mysql -upublish -ppublish publish < sql/data_mysql.sql


Finally we run clearcache([footnote] A new feature in eZ publish 2.2 is the possibility
of clearing the cache from the admin site)  to make sure that everything presented is cached correctly:


    # ./clearcache.sh

2.4.2.2 PostgreSQL configuration

Important note regarding PostgreSQL support in eZ publish:

PostgreSQL has one limitation which is not good for eZ publish:

Max length of indentifiers used in the database, table names,
column names etc is default set to 32.

eZ publish uses names which sometimes are longer, e.g: eZImageCatalogue_ImageVariationGroup

Therefore you need to recompile PostgreSQL to support a larger
value by altering: 

#define NAMEDATALEN 64

in the file : src/include/postgres_ext.h

2.4.2.3 PostgreSQL setup

On last configuration change is necessary. This will allow
TCP-IP connections to the database, not only unix sockets. 

In pqsql-root/data/postmaster.opts (for instance /var/lib/pgsql/data/postmaster.opts)
you need to apply a "-i"
parameter. The content of the file will then be like this:

/usr/bin/postmaster '-D' '/var/lib/pgsql/data/' '-i'

2.4.2.4 First time installation (PostgreSQL)

Login as user postgres

    # su - postgres


Create a database

    $ createdb publish


Create a dabase user

    $ createuser publish -W


Create tables

    $ psql -Upublish <sql/data_mysql.sql


You also need to enable PostgreSQL in site.ini. Change the"
DatabaseImplementation" configuration
so it reads:

DatabaseImplementation=postgresql

2.4.2.5 Updating the Installation

This section is for users who are updating from a previous
version of eZ publish. There should be several files ending
with ".sql" in the directory "updates".
Run the files needed to update your version to the current.
You need to apply all the updates for every version since
your version.

2.4.3 Setting up the cronjob job

eZ publish has a crontab script.

In order to edit your crontab, type :

$ crontab -e

You will then be editing a file in a text editor (which editor
is dependend on your system configuration). In this file
add the following line

0 23 * * * cd /your/docroot; /usr/bin/php cron.php

Now, save and exit the text editor

Please replace "/your/docroot"
with your real document root.

2.5 Now What?

After installing eZ publish you can test your site through
the URL http://www.yoursite.com/ and you can administrate
your site from the URL http://admin.yoursite.com/, of course,
if you did anything different the names of the admin and
the public site might be different.

NOTE: The default user name and password for your site will
be admin/publish. Remember to change the password.

The next manual you should read is the "eZ
publish Customisation Guide",
it tells you how to configure the software to use the functionality
you want, as well as how you change the templates to suit
your needs.

When you're finished with the design and the initial testing
you can head over to http://zez.org/ for articles about
community building as well as programming, or you can visit
http://developer.ez.no for updates, articles about eZ publish
and how to work with it, as well as keeping abreast of new
developments.

2.5.1 Post Install Checklist

1. Does Apache run?

2. Does PHP run/work as an Apache module?

3. Does MySQL run?

4. Can you access your virtual hosts at all?

5. Does the user site work?

6. Does the admin site work?

7. Consider this: all eZ publish sites has an admin site,
  perhaps you should call the admin host something different
  than admin?

8. Check that you've downloaded and read the configuration
  manual. A quick tip is to read through the file "site.ini"
  and change any e-mail addresses, passwords etc. to fit
  your own choices.

9. Log in on your admin site (http://admin.yoursite.com/).
  You will be presented with a page which will list any
  install problems. If any problems appear read the error
  message presented and follow any instructions. If that
  fails, read the FAQ. Then go to http://developer.ez.no
  and search the forum for anyone who have had the same
  problem. Also check the bug list for any open bugs covering
  your problem. Finally you should register to the mailing
  list and try asking for help there.

10. If everything is okay go to the "user"
  module and change the e-mail address of the site administrator
  immediatly.

11. Change the password of the administration user to something
  only you know.

12. Start browsing the public part of your site, just to check
  that everything is working; some of the articles supplied
  as default will inform you about features of the software.

13. Check that ImageMagick is working. Try to upload an image
  to your site.

2.6 <chptr: Troubleshooting>Troubleshooting

2.6.1 Problems During Installation

2.6.1.1 Missing Compiler/Can not Compile (C++/C)

When compiling php and other support programs (like ImageMagick)
you need the GCC compiler. It is recommended that you use
the GCC compiler which was shipped with your Linux distro/unix
system. In the introduction (see chapter [chptr: introduction])
it listed some sites where you can download pre-compiled
versions of software for some different Unix versions. Please
note that you must compile php on your own.

2.6.1.2 I am getting linking errors regarding kerberos when trying
  to build PHP

The PHP module you have compiled will be linked agains kerberos.
This may cause some linking problems on RedHat Linux. The
workaround for this problem is to type this command before
you compile. See chapter [chptr: PHP configuration]
for more info) :

$ export LDFLAGS="-L/usr/kerberos/lib -lkrb5 -lgssapi_krb5
-lpam"

2.6.2 Problems After Installation

2.6.2.1 Permission Denied

Warning: fopen("site.ini","r+")

Permission denied in classes/INIFile.php on line 80

If you get this error message you need to run the "modfix.sh"
script.

2.6.2.2 Can not see Images

ImageMagick is not working, make sure that it is working
by using the command line command "convert".

2.6.2.3 Warning about Temp Directory

If you get any such warning you need to set the temp directory
in php.ini.

2.6.2.4 <chptr: openssl problem on redhat>After installing
  my new php module, apache dies immediately.

RedHat as released new versions of the openssl packages for
RedHat 7.x([footnote] The problem described here may only apply to
RedHat 7.0) . If these erratas is installed before you compile php, your
php module will be linked agains these. This will however
brake mod_ssl, which is linked to the old openssl libraries.
There are two different ways to fix this:
Uninstall mod_ssl:

# rpm -e mod_ssl

Or you may download the apache source rpm from redhat. Then
recompile and install it.


If this doesn't help, look for clues in /var/log/httpd/error_messages

2.7 Installing on RAQ 3<chptr: raq 3>

Installing ezPublish on raq3 without messing up the GUI or
voiding the warranty.

This is untested by eZ systems, and we provide this "as
is" without any form of guarantee or endorsement, either
explicitly or implicitly.

First, add the domain into the DNS, but do not create a virtual
site.

Log in by telnet (install SSH unless you are desperate to
get hacked).

Put the publish files in the directory you want to use, I
used /home/sites/extrasites/mysite/web

Install mysql 3.23 or later by rpm, there is one out there.
MySQL (http://www.mysql.com) version 3.23 or later if you
want to compile

Now you need to create a database in MySQL, the default name
we use is publish, but you can change that to whatever pleases
you.


    # mysql -uroot -p publish < sql/publish.sql


Add a publish user in MySQL. To add a user you can use the
MySQL client to log on to mysql and then create the user:


    # mysql>grant all on publish.* to publish@localhost

    identified by "secret";


where secret is your password. Then you need to add the default
eZ publish data into your newly created database:


    # mysql -uroot -p publish < sql/publish.sql


Then get:

* http://www.freesoftware.com/pub/infozip/zlib/ (zlib.tar.gz)

* http://www.boutell.com/gd (gd-1.8.4.tar.gz)

* ftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz (jpegsrc.v6b.tar.gz)

* http://www.php.net (php-4.0.4pl1.tar.gz)

Delete all gd.h files on your system. You can find them using:


    # find / -name gd.h


If there are more than one, then delete all of them.

Now add the following line to the /etc/ld.so.conf file:


    /usr/local/lib


Save the file, and run:


    # /sbin/ldconfig


This was an important part, because Apache needs this dir
to find the correct modules.

Extract the zlib archive:


    # tar -zxvf zlib.tar.gz # cd zlib-1.1.3


And install it:


    # ./configure --shared 

    # make 

    # make install


Now install the JPEG-6b, doing the following:


    # tar -zxvf jpegsrc.v6b.tar.gz

    # cd jpeg-6b

    # ./configure --enable-shared

    # make

    # make install


Install the PNG library


    # wget http://www.libpng.org/pub/png/src/libpng-1.0.9.tar.gz


Then compile the package.

Get Imagemagick ImageMagick (http://www.imagemagick.org/)
newest version Download and then:


    # tar -zxvf Imagemagick-xxx

    # cd Imagemagick-xxx

    # ./configure

    # make

    # make install


Then go one directory back, and extract the GD archive using:


    # tar -zxvf gd-xxx

    # cd gd-xxx


Now edit the Makefile (using vi or pico) and check which
modules you want. I removed the Freetype Library (-DHAVE_LIBFREETYPE
/ -lfreetype). After making the changes save the file and
go back to the shell. Now compile GD:


    # make 

    # make install


If this is giving any errors, just remove the modules you
don't have (but don't remove the JPEG lib - we need that
one ! :)) )

Now go back one dir, and extract PHP4:


    # tar -zxvf php-4.0.4pl1.tar.gz

    # cd php-4.0.4pl1


First remove any cache:


    # rm config.cache

    # make clean

    #./configure --with-mysql \

    --with-apxs=/usr/sbin/apxs \

    --with-system-regex \

    --with-zlib \

    --enable-safe-mode \

    --with-gdbm \

    --enable-sysvsem \

    --with-ftp \

    --with-config-file-path=/etc/httpd/conf/ \

    --with-exec-dir=/usr/sbin/httpd \

    --enable-trans-sid

    # make

    # make install


run /sbin/ldconfig again.

Apache: (Your milage may vary, be wary of paths)

edit /etc/httpd/conf/httpd.conf and add the Loadmodules lines
like this: 


    # Extra Modules

    LoadModule php_module modules/mod_php.so

    LoadModule php3_module modules/libphp3.so

    LoadModule perl_module /usr/lib/apache/libperl.so

    LoadModule php4_module /usr/lib/apache/libphp4.so

    LoadModule php4_module lib/apache/libphp4.so


# Reconstruction of the complete module list from all available
modules

# (static and shared ones) to achieve correct module execution
order.

# [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE
THIS, TOO]


    ClearModuleList

    # Extra Modules

    AddModule mod_php.c

    AddModule mod_php3.c

    AddModule mod_perl.c

    AddModule mod_php4.c


Add the second line below line below the rewrite stuff, above
the <Virtualhost> directives.

NameVirtualHost 216.97.67.4 Include /etc/httpd/conf/extrasites.conf
<VirtualHost 216.97.67.4>

create this include file and in it put the apache vitual
server directives for your site.

For example:


    # User site

    <VirtualHost yourIP>

      ServerName yourdomain.org

      ServerAlias www.yourdomain.org

      <Directory /your/site/root/>

        Options FollowSymLinks

        AllowOverride None

      </Directory>

      RewriteEngine On

       RewriteRule ^/stats/store/(.*).gif$ 
/your/site/root/ezstats/user/storestats.php [L]

       RewriteRule ^/filemanager/filedownload/([^/]+)/(.*)$ 
/your/site/root/ezfilemanager/files/$1 [T="application/oct-stream",L]

       RewriteRule .*/ezmediacatalogue/catalogue/(.*)$
/your/docroot/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",L]

       RewriteRule ^/xmlrpc.*$ /your/docroot/index_xmlrpc.php
[L]

       RewriteRule !\.(gif|css|jpg|png|jar)$
/your/site/root/index.php

      ServerAdmin your_mail@domain.no

      DocumentRoot /your/site/root/

    </VirtualHost>


    # Admin site

    <VirtualHost admin.yourdomain.org>

      <Directory /your/site/root>

        Options FollowSymLinks

        AllowOverride None

      </Directory>

      RewriteEngine On

       RewriteRule ^/filemanager/filedownload/([^/]+)/(.*)$ 
/your/site/root/ezfilemanager/files/$1 [T="application/oct-stream",L]
       RewriteRule .*/ezmediacatalogue/catalogue/(.*)$
/your/docroot/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",L]

      RewriteRule !\.(gif|css|jpg|png|jar)
/your/site/root/index_admin.php

      ServerAdmin your_mail@domain.no

      DocumentRoot /your/site/root

      ServerName admin.yourdomain.org

      ServerAlias admin.yourdomain.org

    </VirtualHost>


restart apache:


    # /etc/rc.d/init.d/httpd stop


wait a few seconds then


    # /etc/rc.d/init.d/httpd start


Then chown httpd.httpd * on both the domain and admin.domain
directories to get it to work.

If all is well, your site should work.

2.7.1 Getting SSL to Work

This is a bit tougher! Enable SSL for the site in your GUI.
Generate your certificates. Disable SSL in the GUI. Add
this to the end of your extrasites.conf

    #attempt to modify 

    SSL Listen xxx.xxx.xxx.xxx:443

    <VirtualHost xxx.xxx.xxx.xxx:443>

        ServerAdmin ubong

        DocumentRoot /home/sites/yoursite/web

        <Directory /home/sites/yoursite/web>

            Options
FollowSymLinks

            AllowOverride
None

        </Directory>

        SSLEngine on

        SSLCertificateFile /home/sites/yoursite/certs/certificate

        SSLCertificateKeyFile
/home/sites/yoursite/certs/key

        AddHandler server-parsed
.shtml

        AddType text/html .shtml

        AddHandler cgi-wrapper
.cgi

        AddHandler cgi-wrapper
.pl

        RewriteEngine On

        RewriteRule !\.(gif|css|jpg|png)$
/home/sites/public.edge.ai/web/index.php

        ErrorLog /home/sites/yoursite/logs/error_log

        TransferLog /home/sites/yoursite/logs/access_log

    </VirtualHost>

This should work. IF you can't get it, give me an email and
I'll help if I have time: chris@net.ai

2.8 Installing on Windows <chptr: windows>

This information is contributed by Marco Zinn for the 2.1.0
release, so it might be slightly outdated. This is untested
by eZ systems, and we provide this "as is" without any form
of guarantee or endorsement, either explicitly or implicitly.

2.8.1 Requirements and notes

In order to install ezPublish on a windows system, you need
to download and install 

* the apache webserver

* php4 

* MySQL database server

* phpMyAdmin (optional, but I recommend it over using mySQL
  from the command line)

* Imagemagick

If you already have installed all this, you may skip to the
next section and go and install ezPublish.

Note that this installation was done on a windows 98 second
edition system with ezPublish 2.1. For Windows NT and 2000
you may to do some more or other settings, because of the
access rights situation (file permissions in the file system)
and the possibility to run services independant from a user
being logged in. If you have the choice, do not use a windows
system for a production system! I'm using this just for
development purposes on my laptop.

I will describe the installation steps and show some small
tests to see if all went fine. Of course you will need (root)
access to the system if you need to install anything.


If you have never installed and configured software using
text files, you might run into trouble setting this up.
You need to install a web server, a database server, some
tools and the ezPublish application itself. It's not that
hard, but it is more than clicking on a big "Install" button.


The installation guides are partially copied from the install
texts of the software packages. You should read the full
documentation for a specific software, if you run into trouble
or have any problems with my notes.

2.8.2 Apache

Get the win32 binary of the Apache webserver version 1.13.19
from http://www.apache.org/ 

Note that the binary is a MSI Binary Distribution Package
and you need the MSI installer application in order to install
this package. Users of Windows NT 4.0, 95 and 98 must download
the MSI installer from the website, if it was not already
installed by another product's installation.


When installing apache, have your network domain ready and
choose a nice name for your new webserver. If you plan to
use the webserver for more than just ezPublish (ie: phpMyAdmin,
browsing the apache docs, ...), you should choose a server
name that is independant from the host names of the ezPublish
installation later.

If you just set this up on a stand-alone PC or a small network,
you could use my.intranet as the network domain and apache.my.intranet
as the server name. You need to choose an email adress for
the server admin.


Start the installer and choose to run apache as a service,
if you like. Choose "Complete Install" and change the destination
folder to "C:\". This will install apache in C:\apache and
the documents will be in C:\apache\htdocs (=docroot).


Your apache now needs to be told to use the rewrite module,
so we can use the rewrite rules later. Open C:\Apache\conf\httpd.conf
with your wordpad (I recommend to create a shortcut on the
desktop to this file). Remove the comment sign "#" from
the line "LoadModule rewrite_module modules/mod_rewrite.so"
and save the file.

 Error Checking Apache:

Start Apache from the menu or make a shortcut to C:\apache\apache.exe
on the desktop (recommended) and double-click. If all went
fine, a DOS box should pop up and show "Apache/1.3.19 (Win32)
running....".


Fire up your webbrowser on this machine and open http://localhost/
. This should display a welcome page with a link to the
apache docs.

Stop Apache by selecting (focussing) the DOS box window again
and pressing CTRL-C (takes some seconds).

2.8.3 PHP4

Get the PHP4 windows binary from http://www.php.net/. I used
PHP 4.0.4.pl1. You need a binary version with a server API
version for apache, as we will use PHP as an apache module.


Extract the zip file to C:\php, using folder names. Now move
php4ts.dll to the C:\windows\system directory.

Stop the Apache Webserver, if it is running. Edit the httpd.conf
and put in these lines:

# for the apache module

LoadModule php4_module c:/php/sapi/php4apache.dll

AddType application/x-httpd-php .php .php3

 

<IfModule mod_dir.c>

    DirectoryIndex index.html index.php index.php3

</IfModule>


The AddType line might be already in there (search for "PHP
4"), be sure to remove the "#". The LoadModule line should
be created below the other LoadModule lines.


This will load the PHP4 module, when apache is started and
link .php and .php3 files to the PHP module. The expansion
of the DirectoryIndex entry (which already is in the config
file) is not be necessary for ezPublish. Adding index.php
and index.php3 just makes life with php tools easier.


Copy the php.ini-dist from C:\PHP to C:\windows, rename it
to php.ini, and edit the php.ini to fit your needs. You
will need at least these entries:

magic_quotes_gpc        =       Off

extension_dir   =       C:\php\extensions       

session.save_path        
= C:\windows\temp


Magic Quotes must be off for ezPublish 2.1. You also must
enable this libary by removing the comment sign '#' in its
line. The savepath must be set to some local directory for
temporary files.

Restart the Apache server. If all is fine, it should display
"Apache/1.3.19 (Win32) PHP/4.0.1pl1 running..." now.

 Error Checking PHP and Apache:

Create a text file called test.php in C:\apache\htdocs. 

The file must contain:

<?

phpinfo();

?>


Save the file and open it via http://localhost/test.php.
This should display some information about your PHP. If
your webbrowser display the contents of the file or prompts
you save the file somewhere, the PHP integration did not
work. 

2.8.4 MySQL

Get the standard binary (tarball) distribution for Windows
95/98/NT/2000 for intel from www.mysql.com. I'm running
version 3.23.35a here, but newer versions should be available.

Extract the file to some temporary dir and run the setup.
Install to C:\MySQL using "Typical Install".

Create a shortcut to C:\mysql\bin\winmysqladmin.exe on your
desktop and run it. At the very first start, a "Quick Setup"
window should pop up. Enter a username and a passwort for
the MySQL Server access. Use "publish" for both user name
and password to simplify the rest of the installation. This
will create the my.ini file in C:\windows

There should be a traffic light in the system tray (left
of the time display). It should go green now.

Right-click on the traffic lights, select "Show me" from
the pop-up menu. Go to "my.ini setup", and "pick-up and
edit my.ini values". Choose the server you want to use;
probably mysqld-nt on NT and mysqld-opt on Win9x (using
the radio buttons). Choose "Save Modification"

If you want to load mysql on startup, choose 'Create ShortCut
on Start Menu'. Note that you might have to put a link to
apache.exe in the startup menu group, too, if you want the
whole system to run at startup

Right-Click on the traffic lights, Choose "Win9x "-> "Shutdown
Both" in order to stop the database server and the WinMySQLAdmin
tool.

 Error Checking MySQL:

Restart the database server by starting WinMySQLadmin: a
window should show up and minimize to tray. The Traffic
lights should go green. This means that the MySQL daemon
(server) is up and running, using your new my.ini values.

2.8.5 phpMyAdmin

In order to have some kind of nice interface to your MySQL
database server and in order to access its databases and
tables, you should install phpMyAdmin. I rely on it later,
when installing ezPublish. Note that using phpMyAdmin without
further security measurements is always some sort of security
risc, because it allows access to your valuable databases
through a web browser.


Get phpMyAdmin from http://www.phpwizard.net/ . Select the
zip version with php extensions. I'm using version 2.1.0. 


Extract the zip-file to your document root, using folder
names. This puts phpMyAdmin to C:\apache\htdocs\phpMyAdmin.

 Error Checking phpMyAdmin and MySQL:

Note that this test seems to work only, when your default
server (apache.my.intranet) is already translated to the
right IP adress. See "[Determing and publish your host names]
Determing and publishing your host names" on how to do this
or do this test later.


When Apache and MySQL servers are running, fire up your browser
and open http://localhost/phpMyAdmin . This should show
the UI of phpMyAdmin and allow you do browse a bit in two
MySQLs databases. "test" is a test-database, while "mysql"
is the MySQL database itself, containig users and access
rights etc. You should not mess to much with this, but you
should be able to find a user called "publish" in the user
table. This one is necessary for further installation of
ezPublish.

Also beware that "drop" means "delete"!

2.8.6 ImageMagick

Get the ImageMagick windows binary (ImageMagick-win2k.zip)
from www.imagemagick.org and extract it to C:\, using folder
names. This installs ImageMagick to the C:\ImageMagick-win2k
directory.


Now specify in the site.ini where to find the convert program
of ImageMagick. In site.ini change the ImageConversionProgram
line to read 

ImageConversionProgram=C:\ImageMagick-win2k\convert.exe .


This works great for me. The readme of ImageMagick tell you
to use environment variables. If you want to try this, add
the following lines to your autoexec.bat, save and reboot:

set MAGICK_HOME=C:\ImageMagick-win2k

set PATH=C:\ImageMagick-win2k


If you already have set a the PATH variable, you have to
expand your path by the ImageMagick application directory.

 Error Checking ImageMagick:

Note that you can do this test only, when you have set up
and configured ezPublish completely, that is after [wininst Virtual host and rewrite rules].
In order to test ImageMagick, log in to the admin site,
choose the article module, choose to create a new article,
type some text and click on the [images] button. On the
next screen click [Add Image] and upload some graphic file.
ImageMagick works, when you see a thumbnail of the image
you just uploaded. Try this with the common graphic formats
(JPG, PNG, GIF).

2.8.7 <Determing and publish your host names>Determing
  and publishing your host names

For ezPublish, you need two virtual hosts, one for the user
site, the other for the admin site. You should make up your
mind on how you want to call these now. They should be different
from the apache (default) server name.


If you called your apache (default) server apache.my.intranet,
you might want to call your ezPublish hosts something like
ez.my.intranet and ezadmin.my.intranet.


In order to have ezPublish running, you need to translate
these host names to the IP-Adress of the system the apache
server is running on.


If you are using a stand-alone PC, take 127.0.0.1 as your
IP adress. Using a LAN, you will find your IP with the tool
ipconfig (run in a DOS box). If you are using a small private
LAN, your IP might be something like 192.168.xxx.xxx.


A company LAN probably will use a Domain Name Server (DNS).
If that's the case, contact your network admin for inserting
the new host names. 


All others (including stand-alone PCs) must use the hosts
file: If you did not use this file yet, copy the hosts.sam
sample file to hosts (without extension). hosts files are
in your windows directory.


Open the hosts file with your notepad.


If your are using the "localhosts" IP adress 127.0.0.1, enter
the following lines:

127.0.0.1       localhost

127.0.0.1       apache.my.intranet

127.0.0.1       ez.my.intranet

127.0.0.1       ezadmin.my.intranet


This links all the used host names to the IP adress 127.0.0.1.
When using a small LAN, use your detected IP adress instead
of 127.0.0.1 in the last three lines (leave localhost as
it is) and make sure to make this hosts entries on any client
system, from which you want to access your webserver and
ezPublish later (that probably is any PC in the LAN).


Note that you do have to restart windows or the servers in
order to take the changes in the hosts file to take effect.

 Error Checking hosts settings:

Open you webbrowser and load http://apache.my.intranet. The
browser should show the apache welcome screen. Repeat this
for every host name you just entered (ez.my.intranet and
ezadmin.my.intranet) and for every client.

2.8.8 eZ publish 2.2.x

 Unpacking the files

Extract the ezpublish file to C:\Apache\htdocs\ , using folder
names. This will give you all files in C:\Apache\htdocs\ezpublish_2_2_x
(x is replaced with the current eZ publish version). Put
createdirs.bat in C:\Apache\htdocs\ezpublish_2_2_x and run
it. This creates the cache directories. If your did not
uses publish/publish as your MySQL user/password settings,
open site.ini, and just change the user and password lines
to match your settings.

 Error Checking:

While apache and MySQL servers are running, open http://localhost/ezpublish_2_2_x
in your webbrowser. This should give you an "could not connect
to database ... no database selected".


That's fine. It shows that PHP ran the index.php of the ezPublish
installation and tried to connect to the database server.
Connecting to the server was okay, but the database "publish"
could not be found, as we did not yet create it.

2.8.9 Creating the database

Open http://apache.my.intranet/phpMyAdmin in your webbrowser.
Create a new database named "publish".


Run a SQL query and choose to load it from a textfile. Browse
to C:\apache\htdocs\ezpublish_2_2_x\sql\publish.sql and confirm
with "Go". This should take a while as the tables are created
and some data is inserted. Check the first line, if the
execution of the SQL query was successful.

 Error Checking:

In your webbrowser, open http://apache.my.intranet/ezpublish_2_2_x.
This should give you nearly the known ezPublish screen.

Note that you cannot access the admin site yet and the user
site will not work very much (links, missing graphics etc).
We have not yet set the virtual hosts. But we will now.

2.8.10 <wininst Virtual host and rewrite rules>Virtual
  hosts and rewrite rules

I will give you a quick sample, how to set up apache to use
virtual hosts and rewrite rules as we need them for ezPublish
to work.


A good explanation of the virtual host and rewrite rule concept
is in chapter 4 of the installation guide (Apache configuration)
and of course in the apache documentation itself.


Open your httpd.conf and search for "NameVirtualHost". You
need to enable VirtualHosts using the NameVirtualHosts directive
and create three virtual hosts. The first is the default
host for this web server, second is the ezPublish user site,
third is the ezPublish admin site. You can omit the first,
if you are just running ezPublish on the system, but you
will not be able to access phpMyAdmin, the apache documentation
or anything else then.


Copy these lines into httpd.conf and save. If you did not
follow my suggestions for folder names of apache and for
the host names, you need to make the appropriate changes
here.

 

#

# Use name-based virtual hosting.

#

NameVirtualHost apache.my.intranet

 

# Server default site (default server)

<VirtualHost apache.my.intranet>

DocumentRoot C:/Apache/htdocs

ServerName apache.my.intranet

</VirtualHost>

 

 

# ezPublish User site

<VirtualHost ez.my.intranet>

<Directory C:/Apache/htdocs/ezpublish_2_2_x>

  Options FollowSymLinks Indexes ExecCGI

  AllowOverride None

</Directory>

 

RewriteEngine On

#RewriteLog rewrite_user.log

#RewriteLogLevel 9

RewriteRule ^/stats/store/(.*).gif$ /ezstats/user/storestats.php
[S=3]
RewriteRule .*/ezmediacatalogue/catalogue/(.*)$ 
/var/www/publish/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",S=2]

# The lines above should appear on the same line in your
configuration file!

RewriteRule ^/filemanager/filedownload/([^/]+)/(.*)$ 

/ezfilemanager/files/$1 [T="application/oct-stream",S=1]

# The lines above should appear on the same line in your
configuration file!

RewriteRule !\.(gif|css|jpg|png)$ /index.php

 

DocumentRoot C:/Apache/htdocs/ezpublish_2_2_x

ServerName ez.my.intranet

</VirtualHost>

 

 

# ezPublish Admin site

<VirtualHost ezadmin.my.intranet>

<Directory C:/Apache/htdocs/ezpublish_2_2_x>

  Options FollowSymLinks Indexes ExecCGI

  AllowOverride None

</Directory>

 

RewriteEngine On

#RewriteLog rewrite_admin.log

#RewriteLogLevel 9

RewriteRule .*/ezmediacatalogue/catalogue/(.*)$ 
/var/www/publish/ezmediacatalogue/catalogue/$1 [T="application/oct-stream",S=1]

RewriteRule !\.(gif|css|jpg|png)$ /index_admin.php

 

DocumentRoot C:/Apache/htdocs/ezpublish_2_2_x

ServerName ezadmin.my.intranet

</VirtualHost>

 


You can check your VirtualHost configuration by running apache
-S from the command line. If you are having trouble with
the rewrite rules, you can enable the RewriteLog directives
for a time for debugging.

 Error Checking:

In your webbrowser, open http://ez.my.intranet. This should
give you the ezPublish screen. Graphics should be there,
links should be working, although there is no content in
the database yet. We will add some in a minute.

You can access the admin site through http://ezadmin.my.intranet.
You can log in using "admin" as a user and "publish" as
the password.

2.8.11 Sample data

In order to have something to play with, you may want to
insert some sample data.


Expand the data.tar.gz file to C:/Apache/htdocs/ezpublish_2_2_x,
using folder names. This will create some image files and
some downloads for the sample data. 


Now we need to insert the data itself into the database.
Therefore open http://apache.my.intranet/phpMyAdmin, select
the database "publish" by clicking on it in the left frame,
scroll down past the list of tables in the right frame and
run a SQL query. Choose to load it from a textfile. Browse
to C:\apache\htdocs\ezpublish_2_2_x\sql\data.sql and confirm
with "Go". Again check the first line, if the execution
of the SQL query was successful.


This is just the same procedure like the first-time-creating
of the database (see 1.3.2), only with data.sql instead
of publish.sql.

 Error Checking:

In your webbrowser, open http://ez.my.intranet. This should
give you the ezPublish screen, now with sample articles.

2.8.12 eZ publish and IIS

Not very much information is available for this webserver.
We have however received reports that since IIS does not
have a mod_rewrite module you may use this hack([footnote] Since eZ publish now can be run without mod_rewrite
you may take look at chapter [chpt: nVH]
as it may provide you with a better solution)  instead:

 IIS Configuration:

- Create the virtual hosts for IIS. (only tested on win2000)

(here comes the not so elegant part)

- In the virtual hosts config for the user site, change the
custom errors([footnote] The eZ publish developers want to point out that
this does NOT seem to be a secure workaround. This workaround
should not be used in an environment where the server might
be exposed to untrusted users (i.e the internet))  for 404 and 405 to:

     Message type: URL

     URL: /index.php

- In the virtual hosts config for the admin site, change
the custom errors for 404 and 405 to:

     Message type: URL

     URL: /index_admin.php

(if you encount 500-err you may need to reboot the server,
Uhhh.. I love MS,

it gives me a lot of cofee brakes. eZPublish runing on IIS
is unstable)

 

2.9 Mandrake<chptr: mandrake>

Thanks to Mark Polsen for giving us this information.

This is untested by eZ systems, and we provide this "as
is" without any form of guarantee or endorsement, either
explicitly or implicitly.

2.9.1 Download the Following

Download what you need from http://developer.ez.no/filemanager/list/23/
and install the rpms!

That's all; read the manual from the start after that, and
install eZ publish as described.

<chpt: nVH>Installing eZ publish without virtual hosts and
mod_rewrite

Installing eZ publish this way has several advantages:

* no root rights needed

* no virtual/dual hosts or mod_rewrite needed

* no subdomains needed

* no change of Apache configuration needed

* installation in subdirectories possible

* you can keep your old documents on the server

The disadvantages are:

* the URLs will be "[...]/index.php/article/articleedit/[...]"
  instead of "[...]/article/articleedit/[...]"

* new feature in 2.2, so it's not as well tested as normal
  dual hosts install

3.1 Prerequisites

The following software must be running on your server and
you must have permissions to use it:

* PHP ([http://www.php.net]) version 4.0.4pl1 or later.

* A supported database:

  * MySQL ([http://www.mysql.com]) version 3.23
    or later

  * PostgreSQL ([http://www.postgresql.org])
    version 7.1.3 or later

The following software is optional, but required for some
modules of eZ publish:

* ImageMagick ([http://www.imagemagick.org])
  newest version (Needed by eZ article, eZ image catalogue,
  and all modules using images. You need only the command
  line version.)

3.2 eZ publish installation

3.2.1 Installing in one directory (Recommended install)

3.2.1.1 Installing the files for eZ publish

1. Extract the eZ publish files (if you want some example
  data, extract data.tar.gz too) and if they are not on
  the server yet, transfer them to the server in a directory
  of your choice.
  (example: /home/userA/ezpublish reachable by http://www.yourserver.com/ezpublish)

2. Copy installation/htaccess-nVH to .htaccess in the top
  directory of your eZ publish installation.
  (example: /home/userA/ezpublish/.htaccess)

3. Edit the file sitedir.ini and set the right directory.
  (example: /home/userA/ezpublish/)

3.2.1.2 Database installation

If you have shell access to create the database, see section
[sec: Database (dual hosts)].

1. Create a database (e.g. publish)

2. Create a user and give him permissions to access it

3. Create the data structures for eZ publish with file sql/publish_mysql.sql
  or sql/publish_postgresql.sql

4. If you extracted data.tar.gz before, you should also fill
  the database with the example data in file sql/data_mysql.sql

3.2.1.3 Finishing the install

1. Rename site.ini to site.ini.php and edit it.

2. Test if you can access sitedir.ini with a WWW browser
  (example: http://www.yourserver.com/ezpublish/sitedir.ini).
  
  a) If you get a "Forbidden",
  everything is good and safe.
  b) If you get the file, then your server doesn't obey .htaccess
  files. Try the next install in section [sec: Install without shell],
  it is much safer then. Otherwise you can still use eZ
  publish, but have to remember that it is not as safe as
  it could be.

3. Finished!!
  Go to http://www.yourserver.com/ezpublish/index_admin.php,
  login as admin with password publish and change your password.
  Then go to http://www.yourserver.com/ezpublish. Have fun.

3.2.2 <sec: Install without shell>Installing with shell
  access on server and two separate directories for eZ publish

If you have shell access on your server and you have the
possibility to create directories which are not accessible
by WWW browsers, you can use the script ezinstaller.sh.
It will ask you all relevant questions and install eZ publish
in a very secure way.
